{"version":3,"file":"ods-charts.js","mappings":"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,MAAO,CACH,mCACA,mCACA,mCACA,mCACA,mCACA,qCCPK2d,EAA6B,CACtC3d,MAAO,CACH,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,oCACA,qCACA,qCACA,uCCbK4d,EAAiB,CAC1B5d,MAAO,CACH,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,iCACA,iCACA,mCCbK6d,EAA2B,CACpC7d,MAAO,CACH,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,0DCVK8d,EAAkC,CAC3C9d,MAAO,CACH,8CACA,8CACA,8CACA,8CACA,8CACA,8CACA,8CACA,8CACA,8CACA,iDCXK+d,GAAiC,CAC1C/d,MAAO,CAAC,+CAAgD,8CAA+C,iDCD9Fge,GAA4B,CACrChe,MAAO,CACH,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,0DCVKie,GAAgC,CACzCje,MAAO,CAAC,qCAAsC,qCCDrCke,GAA2B,CACpCle,MAAO,CACH,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,0DCVKme,GAA6B,CACtCne,MAAO,CACH,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,0DCVKoe,GAA6B,CACtCpe,MAAO,CACH,8CACA,8CACA,8CACA,8CACA,8CACA,iDCPKqe,GAA6B,CACtCre,MAAO,CACH,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,0DC0DD,IAAIse,GAuBAC,GAMA5L,IA5BX,SAAW2L,GACPA,EAA4B,QAAI,UAChCA,EAAgC,YAAI,cACpCA,EAA+B,WAAI,aACnCA,EAAsC,kBAAI,mBAC1CA,EAAiC,aAAI,cACrCA,EAAkC,cAAI,eACtCA,EAAoC,gBAAI,OACxCA,EAAqC,iBAAI,QACzCA,EAAoC,gBAAI,OACxCA,EAAsC,kBAAI,SAC1CA,EAAsC,kBAAI,SAC1CA,EAAyC,qBAAI,WAC7CA,EAA0C,sBAAI,YAC9CA,EAAyC,qBAAI,WAC7CA,EAA2C,uBAAI,aAC/CA,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","sources":["webpack://ODSCharts/webpack/universalModuleDefinition","webpack://ODSCharts/webpack/bootstrap","webpack://ODSCharts/webpack/runtime/define property getters","webpack://ODSCharts/webpack/runtime/hasOwnProperty shorthand","webpack://ODSCharts/webpack/runtime/make namespace object","webpack://ODSCharts/./src/theme/common/ODS.line-style.broken.ts","webpack://ODSCharts/./src/theme/ODS.project.ts","webpack://ODSCharts/./src/theme/css-themes/css-themes.ts","webpack://ODSCharts/./src/tools/merge-objects.ts","webpack://ODSCharts/./src/theme/legends/ods-chart-legends.ts","webpack://ODSCharts/./src/tools/escape-html.ts","webpack://ODSCharts/./src/theme/resize/ods-chart-resize.ts","webpack://ODSCharts/./src/tools/hash.ts","webpack://ODSCharts/./src/tools/clone-deep-object.ts","webpack://ODSCharts/./src/theme/popover/ods-chart-popover-definitions.ts","webpack://ODSCharts/./src/theme/const/main-axis-type.const.ts","webpack://ODSCharts/./src/theme/popover/ods-chart-popover.ts","webpack://ODSCharts/./src/theme/theme-observer/ods-charts-theme-observer.ts","webpack://ODSCharts/./src/tools/conditional-clone-deep-object.ts","webpack://ODSCharts/./src/theme/colors/_ouds-colors-css-variables.ts","webpack://ODSCharts/./src/theme/css-themes/css-variables.ts","webpack://ODSCharts/./src/theme/css-themes/css-helper.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.yellow.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.purple.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.pink.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.green.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.blue.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.lighter-tints.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.darker-tints.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.supporting-colors.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.functional.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.categorical.ts","webpack://ODSCharts/./src/theme/default/ODS.colors.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.blue.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.categorical.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.functional.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.green.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.highlight.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.pink.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.purple.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.single.ts","webpack://ODSCharts/./src/theme/default/OUDS.colors.yellow.ts","webpack://ODSCharts/./src/theme/ods-chart-theme.ts","webpack://ODSCharts/./src/theme/default/ODS.common.ts","webpack://ODSCharts/./src/theme/default/ODS.lines.axis.ts","webpack://ODSCharts/./src/theme/common/ODS.line-style.with-points.ts","webpack://ODSCharts/./src/theme/common/ODS.line-style.smooth.ts","webpack://ODSCharts/./src/theme/legends/ods-chart-legends-definitions.ts","webpack://ODSCharts/./src/theme/charts-type/charts-type.ts","webpack://ODSCharts/./src/ods-charts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ODSCharts\"] = factory();\n\telse\n\t\troot[\"ODSCharts\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const COMMON_LINE_STYLE_BROKEN = {\n    line: {\n        itemStyle: {\n            borderWidth: 1,\n        },\n        lineStyle: {\n            width: 2,\n        },\n        symbolSize: 0,\n        symbol: 'circle',\n        smooth: false,\n    },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const ODS_PROJECT = {\n    color: ['#4bb4e6', '#50be87', '#ffb4e6', '#a885d8', '#ffd200'],\n    backgroundColor: 'var(--bs-body-bg, transparent)',\n    textStyle: {},\n    title: {\n        textStyle: {\n            color: 'var(--bs-body-color, #000000)',\n        },\n        subtextStyle: {\n            color: 'var(--bs-secondary-color, #666666)',\n        },\n    },\n    line: {\n        itemStyle: {\n            borderWidth: 1,\n        },\n        lineStyle: {\n            width: 2,\n        },\n        symbolSize: 0,\n        symbol: 'emptyCircle',\n        smooth: true,\n    },\n    radar: {\n        itemStyle: {\n            borderWidth: 1,\n        },\n        lineStyle: {\n            width: 2,\n        },\n        symbolSize: 4,\n        symbol: 'emptyCircle',\n        smooth: false,\n    },\n    bar: {\n        itemStyle: {\n            barBorderWidth: '2',\n            barBorderColor: 'transparent',\n        },\n    },\n    pie: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    scatter: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    boxplot: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    parallel: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    sankey: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    funnel: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    gauge: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n    },\n    candlestick: {\n        itemStyle: {\n            color: 'var(--bs-success, #32c832)',\n            color0: 'var(--bs-danger, #cd3c14)',\n            borderColor: 'var(--bs-success, #228722)',\n            borderColor0: 'var(--bs-danger, #cd3c14)',\n            borderWidth: 1,\n        },\n    },\n    graph: {\n        itemStyle: {\n            borderWidth: '2',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n        lineStyle: {\n            width: 1,\n            color: 'var(--bs-secondary-color, #666666)',\n        },\n        symbolSize: 4,\n        symbol: 'emptyCircle',\n        smooth: false,\n        color: ['#4bb4e6', '#50be87', '#ffb4e6', '#a885d8', '#ffd200'],\n        label: {\n            color: 'var(--bs-body-color, #000000)',\n        },\n    },\n    map: {\n        itemStyle: {\n            areaColor: 'var(--bs-secondary-bg, #eeeeee)',\n            borderColor: 'var(--bs-secondary-color, #444444)',\n            borderWidth: 0.5,\n        },\n        label: {\n            color: 'var(--bs-body-color, #000000)',\n        },\n        emphasis: {\n            itemStyle: {\n                areaColor: 'rgba(var(--bs-warning-rgb, 255,215,0),0.8)',\n                borderColor: 'var(--bs-secondary-color, #444444)',\n                borderWidth: 1,\n            },\n            label: {\n                color: 'var(--bs-black, rgb(100,0,0))',\n            },\n        },\n    },\n    geo: {\n        itemStyle: {\n            areaColor: 'var(--bs-secondary-bg, #eeeeee)',\n            borderColor: 'var(--bs-secondary-color, #444444)',\n            borderWidth: 0.5,\n        },\n        label: {\n            color: 'var(--bs-body-color, #000000)',\n        },\n        emphasis: {\n            itemStyle: {\n                areaColor: 'rgba(var(--bs-warning-rgb, 255,215,0),0.8)',\n                borderColor: 'var(--bs-secondary-color, #444444)',\n                borderWidth: 1,\n            },\n            label: {\n                color: 'var(--bs-black, rgb(100,0,0))',\n            },\n        },\n    },\n    categoryAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-danger, #eb0909)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: ['var(--bs-border-color-subtle, #cccccc)'],\n            },\n        },\n        splitArea: {\n            show: false,\n            areaStyle: {\n                color: ['var(--bs-body-bg, #ffffff)'],\n            },\n        },\n    },\n    valueAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--secondary-color, #6E7079)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: ['var(--bs-border-color-subtle, #cccccc)'],\n            },\n        },\n        splitArea: {\n            show: false,\n            areaStyle: {\n                color: ['rgba(var(--bs-body-bg-rgb, 250,250,250),0.2)', 'rgba(var(--bs-tertiary-color-rgb, 210,219,238),0.2)'],\n            },\n        },\n    },\n    logAxis: {\n        axisLine: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-secondary-color, #6E7079)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: ['var(--bs-border-color-subtle, #cccccc)'],\n            },\n        },\n        splitArea: {\n            show: false,\n            areaStyle: {\n                color: ['rgba(var(--bs-body-bg-rgb, 250,250,250),0.2)', 'rgba(var(--bs-tertiary-color-rgb, 210,219,238),0.2)'],\n            },\n        },\n    },\n    timeAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        splitLine: {\n            show: false,\n            lineStyle: {\n                color: ['var(--bs-border-color-subtle, #cccccc)'],\n            },\n        },\n        splitArea: {\n            show: false,\n            areaStyle: {\n                color: ['rgba(var(--bs-body-bg-rgb, 250,250,250),0.2)', 'rgba(var(--bs-tertiary-color-rgb, 210,219,238),0.2)'],\n            },\n        },\n    },\n    toolbox: {\n        iconStyle: {\n            borderColor: 'var(--bs-secondary-color, #999999)',\n        },\n        emphasis: {\n            iconStyle: {\n                borderColor: 'var(--bs-body-color, #666666)',\n            },\n        },\n    },\n    legend: {\n        textStyle: {\n            color: 'var(--bs-body-color, #333333)',\n        },\n    },\n    tooltip: {\n        axisPointer: {\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n                width: 1,\n            },\n            crossStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n                width: 1,\n            },\n        },\n    },\n    timeline: {\n        lineStyle: {\n            color: 'var(--bs-tertiary-bg, #dae1f5)',\n            width: 2,\n        },\n        itemStyle: {\n            color: 'var(--bs-secondary-bg, #a4b1d7)',\n            borderWidth: 1,\n        },\n        controlStyle: {\n            color: 'var(--bs-secondary-bg, #a4b1d7)',\n            borderColor: 'var(--bs-secondary-bg, #a4b1d7)',\n            borderWidth: 1,\n        },\n        checkpointStyle: {\n            color: 'var(--bs-info, #316bf3)',\n            borderColor: 'var(--bs-body-bg, #ffffff)',\n        },\n        label: {\n            color: 'var(--bs-secondary-bg, #a4b1d7)',\n        },\n        emphasis: {\n            itemStyle: {\n                color: 'var(--bs-body-bg, #ffffff)',\n            },\n            controlStyle: {\n                color: 'var(--bs-secondary-bg, #a4b1d7)',\n                borderColor: 'var(--bs-secondary-bg, #a4b1d7)',\n                borderWidth: 1,\n            },\n            label: {\n                color: 'var(--bs-secondary-bg, #a4b1d7)',\n            },\n        },\n    },\n    visualMap: {\n        color: ['#085ebd', '#3179c8', '#5a94d3', '#84afde', '#adc9e9', '#d6e4f4'],\n    },\n    markPoint: {\n        label: {\n            color: 'var(--bs-body-color, #000000)',\n        },\n        emphasis: {\n            label: {\n                color: 'var(--bs-body-color, #000000)',\n            },\n        },\n    },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport var ODSChartsCSSThemesNames;\n(function (ODSChartsCSSThemesNames) {\n    ODSChartsCSSThemesNames[\"NONE\"] = \"NONE\";\n    ODSChartsCSSThemesNames[\"BOOSTED4\"] = \"BOOSTED4\";\n    ODSChartsCSSThemesNames[\"BOOSTED5\"] = \"BOOSTED5\";\n    ODSChartsCSSThemesNames[\"CUSTOM\"] = \"CUSTOM\";\n})(ODSChartsCSSThemesNames || (ODSChartsCSSThemesNames = {}));\n/**\n * ODSChartsItemCSSDefinition defines the classes or styles to be added on generated HTML element\n */\nexport class ODSChartsItemCSSDefinition {\n    static getClasses(def) {\n        return def && def.classes ? def.classes.join(' ') : '';\n    }\n    static getStyles(def) {\n        return def && def.styles\n            ? Object.keys(def.styles)\n                .map((property) => `${property}: ${def.styles[property]}`)\n                .join('; ')\n            : '';\n    }\n}\n/**\n * ODSChartsItemGroupCSSDefinition defines the classes an styles to be add on code generated by the library.\n */\nexport class ODSChartsItemGroupCSSDefinition {\n}\nexport class ODSChartsCSSLegendsDefinition extends ODSChartsItemGroupCSSDefinition {\n}\nexport class ODSChartsCSSPopoverDefinition extends ODSChartsItemGroupCSSDefinition {\n}\n/**\n * `ODSChartsCSSThemeDefinition` defines the classes and styles to be added on code generated by the library.\n *\n * In general, `ODSChartsCSSThemeDefinition` is not used directly, but one of the instances provided by {@link ODSChartsCSSThemes} is used.\n */\nexport class ODSChartsCSSThemeDefinition {\n    constructor() {\n        /**\n         * classes an styles to be add to legends generated code.\n         */\n        this.legends = undefined;\n        /**\n         * classes an styles to be add to popover and tooltip generated code.\n         */\n        this.popover = undefined;\n    }\n}\nconst BOOSTED5_Definition = {\n    legends: {\n        odsChartsLegendHolder: {\n            classes: ['pt-2', 'pb-3'],\n        },\n        odsChartsLegendContainer: {\n            classes: ['d-flex', 'flex-wrap', 'justify-content-start'],\n        },\n        odsChartsLegendContainerVertical: {\n            classes: ['flex-column'],\n        },\n        odsChartsLegendContainerHorizontal: {\n            classes: ['mx-4'],\n        },\n        odsChartsLegendItem: { classes: ['mx-2', 'pb-2'] },\n        odsChartsLegendCustomContent: { classes: ['ms-1'] },\n        odsChartsLegendGlobalCustomContent: { classes: ['ms-2'] },\n        odsChartsLegendLink: { classes: ['text-decoration-none'] },\n        odsChartsLegendLinkOpacity: { classes: ['opacity-25'] },\n        odsChartsLegendColorHolder: {\n            classes: ['d-inline-block'],\n        },\n        odsChartsLegendColor: {\n            classes: ['d-block', 'position-relative', 'me-1'],\n            styles: {\n                width: '12px',\n                height: '12px',\n            },\n        },\n        odsChartsLegendLabel: {\n            classes: ['fw-normal', 'small'],\n        },\n    },\n    popover: {\n        odsChartsPopoverLine: { classes: ['text-nowrap', 'd-flex', 'align-items-baseline', 'mb-1'] },\n        odsChartsPopoverColorHolder: {\n            classes: ['d-inline-block', 'me-1'],\n        },\n        odsChartsPopoverColor: {\n            classes: ['d-block', 'position-relative'],\n            styles: {\n                width: '12px',\n                height: '12px',\n            },\n        },\n        odsChartsPopoverText: { classes: ['flex-grow-1', 'd-flex', 'align-items-baseline', 'small'] },\n        odsChartsPopoverLabel: { classes: ['me-2', 'flex-grow-1'] },\n        odsChartsPopoverValue: { classes: ['fw-bold'] },\n    },\n};\nconst BOOSTED4_Definition = {\n    legends: {\n        odsChartsLegendHolder: {\n            classes: ['pt-2', 'pb-3'],\n        },\n        odsChartsLegendContainer: {\n            classes: ['d-flex', 'flex-wrap', 'justify-content-start'],\n        },\n        odsChartsLegendContainerVertical: {\n            classes: ['flex-column'],\n        },\n        odsChartsLegendContainerHorizontal: {\n            classes: ['mx-4'],\n        },\n        odsChartsLegendItem: { classes: ['mx-2', 'pb-2'] },\n        odsChartsLegendCustomContent: { classes: ['ml-1'] },\n        odsChartsLegendGlobalCustomContent: { classes: ['ml-2'] },\n        odsChartsLegendLink: {\n            classes: ['text-decoration-none'],\n            styles: {\n                opacity: '1',\n            },\n        },\n        odsChartsLegendLinkOpacity: {\n            classes: ['opacity-25'],\n            styles: {\n                opacity: '.25',\n            },\n        },\n        odsChartsLegendColorHolder: {\n            classes: ['d-inline-block'],\n        },\n        odsChartsLegendColor: {\n            classes: ['d-block', 'position-relative', 'mr-1'],\n            styles: {\n                width: '12px',\n                height: '12px',\n            },\n        },\n        odsChartsLegendLabel: {\n            classes: ['font-weight-normal', 'small'],\n        },\n    },\n    popover: {\n        odsChartsPopoverLine: { classes: ['text-nowrap', 'd-flex', 'align-items-baseline', 'mb-1'] },\n        odsChartsPopoverColorHolder: {\n            classes: ['d-inline-block', 'mr-1'],\n        },\n        odsChartsPopoverColor: {\n            classes: ['d-block', 'position-relative'],\n            styles: {\n                width: '12px',\n                height: '12px',\n            },\n        },\n        odsChartsPopoverText: { classes: ['flex-grow-1', 'd-flex', 'align-items-baseline', 'small', 'm-0'] },\n        odsChartsPopoverLabel: { classes: ['mr-2', 'flex-grow-1'] },\n        odsChartsPopoverValue: { classes: ['font-weight-bold'] },\n    },\n};\nconst NONE = {\n    legends: { odsChartsLegendHolder: { classes: ['ods-charts-no-css-lib'] } },\n    popover: {\n        odsChartsPopoverHolder: { classes: ['ods-charts-no-css-lib'] },\n        odsChartsPopover: { classes: ['ods-charts-no-css-lib'] },\n        odsChartsPopoverBodyContent: { classes: ['ods-charts-no-css-lib'] },\n        odsChartsPopoverLine: { classes: ['ods-charts-no-css-lib'] },\n    },\n};\n/**\n * Pre-configured {@link ODSChartsCSSThemeDefinition}\n * - ODSCharts.ODSChartsCSSThemes.NONE: the generated code will use an embedded independent style auto-generated by the library.\n * - ODSCharts.ODSChartsCSSThemes.BOOSTED5: the generated code will use Boosted 5 framework CSS.\n * - ODSCharts.ODSChartsCSSThemes.BOOSTED4: the generated code will use Boosted 4 framework CSS.\n */\nexport const ODSChartsCSSThemes = {\n    BOOSTED4: BOOSTED4_Definition,\n    BOOSTED5: BOOSTED5_Definition,\n    NONE: NONE,\n    CUSTOM: { legends: {}, popover: {} },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport function isVarArray(obj) {\n    return obj && Array.isArray(obj);\n}\nexport function isVarObject(obj) {\n    return typeof obj === 'object' && !isVarArray(obj);\n}\nexport function isVarFunction(obj) {\n    return typeof obj === 'function';\n}\nexport function mergeObjects(obj1, obj2, ...obj) {\n    if (obj && isVarArray(obj) && 0 < obj.length) {\n        return mergeObjects(mergeObjects(obj1, obj2), obj[0], ...obj.slice(1));\n    }\n    if ((isVarObject(obj1) && isVarObject(obj2)) || (isVarArray(obj1) && isVarArray(obj2))) {\n        for (const obj2Key of Object.keys(obj2)) {\n            if ((isVarObject(obj1[obj2Key]) && isVarObject(obj2[obj2Key])) || (isVarArray(obj1[obj2Key]) && isVarArray(obj2[obj2Key]))) {\n                mergeObjects(obj1[obj2Key], obj2[obj2Key]);\n            }\n            else {\n                obj1[obj2Key] = obj2[obj2Key];\n            }\n        }\n    }\n    return obj1;\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { ODSChartsCSSThemesNames, ODSChartsItemCSSDefinition } from '../css-themes/css-themes';\nimport { isVarArray, isVarObject } from '../../tools/merge-objects';\nimport { escapeHtml } from '../../tools/escape-html';\nconst DEFAULT_CSS = `.ods-charts-no-css-lib.ods-charts-legend-holder {\r\n  padding-top: 10px;\r\n  padding-bottom: 20px;\r\n  position: relative;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-container-vertical {\r\n  flex-direction: column;\r\n}\r\n\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-container-horizontal {\r\n  margin-left: 30px;\r\n  margin-right: 30px;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-item {\r\n  \r\n  padding-bottom: 0.625rem;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n  color: var(--bs-body-color, #000000);\r\n}\r\n.ods-charts-no-css-lib .ods-charts-legend-custom-content {\r\n  margin-left: 5px;\r\n}\r\n.ods-charts-no-css-lib .ods-charts-legend-global-custom-content {\r\n  margin-left: 10px;\r\n}\r\n.ods-charts-no-css-lib .ods-charts-legend-link {\r\n  text-decoration: none;\r\n}\r\n.ods-charts-no-css-lib .ods-charts-legend-link.ods-charts-legend-link-opacity {\r\n  opacity: .25;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-color-holder {\r\n  display: inline-block;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-legend-color {\r\n  margin-right: 5px;\r\n  width: 12px;\r\n  height: 12px;\r\n  position: relative;\r\n  display: block;\r\n}\r\n.ods-charts-no-css-lib .ods-charts-legend-label {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n}\r\n\r\n[data-bs-theme=\"dark\"] .ods-charts-no-css-lib.ods-charts-legend-holder {\r\n  background-color: var(--bs-gray-950, #141414);\r\n}\r\n[data-bs-theme=\"dark\"] .ods-charts-no-css-lib.ods-charts-legend-holder .ods-charts-legend-item {\r\n  color: var(--bs-white, #fff);\r\n}\r\n[data-bs-theme=\"light\"] .ods-charts-no-css-lib.ods-charts-legend-holder {\r\n  background-color: var(--bs-white, #fff);\r\n}\r\n[data-bs-theme=\"light\"] .ods-charts-no-css-lib.ods-charts-legend-holder .ods-charts-legend-item {\r\n  color: var(--bs-black, #000);\r\n}\r\n`;\nexport class ODSChartsLegendData {\n    constructor() {\n        this.labels = [];\n        this.names = [];\n    }\n}\nexport class ODSChartsLegends {\n    constructor(echart, legendHolders) {\n        this.echart = echart;\n        this.legendHolders = legendHolders;\n    }\n    static addLegend(echart, legendHolders) {\n        const legendHoldersArray = isVarArray(legendHolders)\n            ? legendHolders\n            : isVarObject(legendHolders)\n                ? [legendHolders]\n                : [{ legendHolderSelector: legendHolders }];\n        return new ODSChartsLegends(echart, legendHoldersArray);\n    }\n    /**\n     * Extract legend data from the chart options.\n     * NB : According to https://echarts.apache.org/en/option.html#legend.data the legend data can be :\n     *  - an array of string\n     *  - an array of objects containing a name property\n     *  - not defined (in this case the legend data is extracted from the series names or from the dataset source first row)\n     * The label is the name of the legend displayed on the chart.\n     * The name is the name of the serie associated to the legend.\n     * That means that the label is equal to the name of the serie, excepted for graph like pie chart where the legend label is the name of the data item.\n     *\n     * We keep an ODS Charts specific behavior where the legend.data contains labels in place of names\n     * and then the array order is used to map the labels to the series names.\n     *\n     * @param dataOptions : chart data options\n     * @param updateDataLegendOption : whether to update the legend option\n     * @param updateDataSeriesOption : whether to update the series option\n     * @returns {ODSChartsLegendData} : Two arrays labels and names of ordered legends to be displayed and containing respectively the label and the name of the serie.\n     * @throws Error if the legend data or series data are missing or inconsistent\n     */\n    static getLegendData(dataOptions, updateDataLegendOption = true, updateDataSeriesOption = true) {\n        let legendData = dataOptions.legend && dataOptions.legend.data\n            ? dataOptions.legend.data.map((legendDataItem) => (isVarObject(legendDataItem) ? legendDataItem.name : legendDataItem))\n            : [];\n        let serieNames;\n        const monoSerieGraphe = 1 === dataOptions.series.length && dataOptions.series[0].data && ['pie'].includes(dataOptions.series[0].type);\n        if (updateDataLegendOption) {\n            if (dataOptions.legend) {\n                dataOptions.legend = Object.assign({}, dataOptions.legend);\n            }\n        }\n        if (updateDataSeriesOption) {\n            if (dataOptions.series) {\n                dataOptions.series = [...dataOptions.series.map((v) => (Object.assign({}, v)))];\n            }\n        }\n        if (!dataOptions.legend || !dataOptions.legend.data) {\n            if (dataOptions.dataset && dataOptions.dataset.source) {\n                try {\n                    if (updateDataLegendOption && !dataOptions.legend) {\n                        dataOptions.legend = {};\n                    }\n                    legendData = dataOptions.dataset.source[0].reduce((accumulator, currentValue, currentIndex) => {\n                        if (currentIndex > 0) {\n                            accumulator.push(currentValue);\n                        }\n                        return accumulator;\n                    }, []);\n                    if (updateDataLegendOption) {\n                        dataOptions.legend.data = legendData;\n                    }\n                }\n                catch (error) {\n                    throw new Error(`Missing data array of legends in legend chart option`);\n                }\n            }\n            else if (!dataOptions.series) {\n                throw new Error(`Missing data array of legends in legend chart option`);\n            }\n            else {\n                if (updateDataLegendOption && !dataOptions.legend) {\n                    dataOptions.legend = {};\n                }\n                if (monoSerieGraphe) {\n                    legendData = dataOptions.series[0].data.map((serie, _index) => {\n                        if (!serie.name) {\n                            throw new Error(`Missing data array of legends in legend chart option`);\n                        }\n                        return serie.name;\n                    });\n                }\n                else {\n                    legendData = dataOptions.series.map((serie, _index) => {\n                        if (!serie.name) {\n                            throw new Error(`Missing data array of legends in legend chart option`);\n                        }\n                        return serie.name;\n                    });\n                }\n                if (updateDataLegendOption) {\n                    dataOptions.legend.data = legendData;\n                }\n            }\n        }\n        if (monoSerieGraphe) {\n            serieNames = dataOptions.series[0].data.map((serie, _index) => {\n                if (!serie.name) {\n                    throw new Error(`Missing data array of legends in legend chart option`);\n                }\n                return serie.name;\n            });\n        }\n        else {\n            if (updateDataSeriesOption && !dataOptions.series) {\n                dataOptions.series = legendData.map((_serie, index) => ({\n                    name: legendData[index] || 'serie_Name_' + index,\n                }));\n            }\n            if (!dataOptions.series) {\n                throw new Error(`Missing series array in chart option`);\n            }\n            const unusedSerieNames = legendData.filter((legendLabel) => {\n                return !dataOptions.series.find((serie) => serie.name === legendLabel);\n            });\n            serieNames = dataOptions.series.map((serie, index) => {\n                if (!serie.name) {\n                    if (!updateDataSeriesOption) {\n                        throw new Error(`Missing series names in chart option`);\n                    }\n                    serie.name = unusedSerieNames.shift() || 'serie_Name_' + index;\n                }\n                return serie.name;\n            });\n        }\n        let displayedSeriesNames = legendData.filter((legendLabel) => serieNames.includes(legendLabel));\n        let displayedSeriesLabels = displayedSeriesNames;\n        if (legendData.length !== displayedSeriesNames.length) {\n            // eslint-disable-next-line no-console\n            console.info(`The legend data array contains some legends that do not match any series name. Legend data: [${legendData}]. Series names: [${serieNames}]. Displayed legends: [${displayedSeriesNames}]`);\n            // displayedSeriesNames differs from legendData,\n            // that means that some legends do not match any serie name\n            // We asumed then that legend.data is an order list of labels\n            // that will match the series names by their index\n            displayedSeriesLabels = legendData;\n            if (displayedSeriesLabels.length > serieNames.length) {\n                displayedSeriesLabels = displayedSeriesLabels.filter((_legendLabel, index) => index < serieNames.length);\n            }\n            displayedSeriesNames = serieNames.filter((_serieName, index) => index < displayedSeriesLabels.length);\n            // eslint-disable-next-line no-console\n            console.info(`Displayed legends labels have been mapped by their index, [${displayedSeriesLabels}] are the labels of the displayed series [${displayedSeriesNames}]`);\n        }\n        return {\n            names: displayedSeriesNames,\n            labels: displayedSeriesLabels,\n        };\n    }\n    addLegend(dataOptions, colors, cssTheme, cssThemeName, mode) {\n        if (ODSChartsCSSThemesNames.NONE === cssThemeName && !document.querySelector('#ods-chart-legends-none-css')) {\n            let style = document.createElement('style');\n            style.id = 'ods-chart-legends-none-css';\n            style.textContent = DEFAULT_CSS;\n            document.head.appendChild(style);\n        }\n        // keep Apache ECharts default configuration for legend orientation\n        if (dataOptions && dataOptions.legend && dataOptions.legend.orient) {\n            for (const legendHolder of this.legendHolders) {\n                if (!legendHolder.orientation) {\n                    legendHolder.orientation = dataOptions.legend.orient;\n                }\n            }\n        }\n        const allLegends = ODSChartsLegends.getLegendData(dataOptions);\n        const legendHolders = {};\n        let defaultLegendHolder = undefined;\n        for (const legendHolder of this.legendHolders) {\n            if (!document.querySelector(legendHolder.legendHolderSelector)) {\n                throw new Error(`No legend holder found with selector ${legendHolder.legendHolderSelector}`);\n            }\n            legendHolders[legendHolder.legendHolderSelector] = Object.assign(Object.assign({}, legendHolder), { legends: { labels: [], names: [], index: [] } });\n            if (!legendHolder.seriesRef) {\n                defaultLegendHolder = legendHolders[legendHolder.legendHolderSelector];\n            }\n        }\n        for (let index = 0; index < allLegends.names.length && index < allLegends.labels.length; index++) {\n            let legendHolderSelector = Object.keys(legendHolders).find((legendHolderKey) => {\n                var _a, _b;\n                return !!legendHolders[legendHolderKey].seriesRef &&\n                    (((_a = legendHolders[legendHolderKey].seriesRef) === null || _a === void 0 ? void 0 : _a.includes(allLegends.names[index])) ||\n                        ((_b = legendHolders[legendHolderKey].seriesRef) === null || _b === void 0 ? void 0 : _b.includes(allLegends.labels[index])));\n            });\n            if (!legendHolderSelector) {\n                const series = dataOptions.series && dataOptions.series.find((series) => series.name === allLegends.names[index]);\n                if (series && series.stack) {\n                    legendHolderSelector = Object.keys(legendHolders).find((legendHolderKey) => { var _a; return !!legendHolders[legendHolderKey].seriesRef && ((_a = legendHolders[legendHolderKey].seriesRef) === null || _a === void 0 ? void 0 : _a.includes(series.stack)); });\n                }\n            }\n            if (legendHolderSelector) {\n                legendHolders[legendHolderSelector].legends.labels.push(allLegends.labels[index]);\n                legendHolders[legendHolderSelector].legends.names.push(allLegends.names[index]);\n                legendHolders[legendHolderSelector].legends.index.push(index);\n            }\n            else if (!!defaultLegendHolder) {\n                defaultLegendHolder.legends.labels.push(allLegends.labels[index]);\n                defaultLegendHolder.legends.names.push(allLegends.names[index]);\n                defaultLegendHolder.legends.index.push(index);\n            }\n        }\n        dataOptions.legend.show = false;\n        for (const legendHolderSelector of Object.keys(legendHolders)) {\n            this.generateHandler(legendHolderSelector, cssTheme);\n            const legendHolder = document.querySelector(legendHolderSelector);\n            if (!legendHolder) {\n                throw new Error(`Can't find legend holder using the selector ${legendHolderSelector}`);\n            }\n            document.querySelector(legendHolderSelector).innerHTML = this.generateLegend(legendHolderSelector, colors, legendHolders[legendHolderSelector].legends, cssTheme, mode, legendHolders[legendHolderSelector].orientation, dataOptions.legend && dataOptions.legend.formatter ? dataOptions.legend.formatter : undefined, legendHolders[legendHolderSelector].postItemContent, legendHolders[legendHolderSelector].afterLegendContent);\n        }\n    }\n    getLegendName(name, formatter) {\n        let formatted = name;\n        try {\n            formatted = formatter ? formatter(name) : name;\n        }\n        catch (error) {\n            console.error(`Error while formatting legend name ${name}: ${error}`);\n        }\n        return escapeHtml(formatted);\n    }\n    generateLegend(legendHolderSelector, colors, legends, cssTheme, mode, orientation = 'horizontal', formatter, postItemContent, afterLegendContent) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        return `<div class=\"ods-charts-legend-holder ods-charts-mode-${mode} ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.legends) === null || _a === void 0 ? void 0 : _a.odsChartsLegendHolder)}\"\r\n    style=\"${ODSChartsItemCSSDefinition.getStyles((_b = cssTheme.legends) === null || _b === void 0 ? void 0 : _b.odsChartsLegendHolder)}\"\r\n    >\r\n    <div class=\"ods-charts-legend-container ods-charts-legend-container-${orientation} ${ODSChartsItemCSSDefinition.getClasses((_c = cssTheme.legends) === null || _c === void 0 ? void 0 : _c.odsChartsLegendContainer)} ${'vertical' === orientation ? ODSChartsItemCSSDefinition.getClasses((_d = cssTheme.legends) === null || _d === void 0 ? void 0 : _d.odsChartsLegendContainerVertical) : ODSChartsItemCSSDefinition.getClasses((_e = cssTheme.legends) === null || _e === void 0 ? void 0 : _e.odsChartsLegendContainerHorizontal)}\"\r\n    style=\"${ODSChartsItemCSSDefinition.getStyles((_f = cssTheme.legends) === null || _f === void 0 ? void 0 : _f.odsChartsLegendContainer)} ${'vertical' === orientation ? ODSChartsItemCSSDefinition.getStyles((_g = cssTheme.legends) === null || _g === void 0 ? void 0 : _g.odsChartsLegendContainerVertical) : ODSChartsItemCSSDefinition.getStyles((_h = cssTheme.legends) === null || _h === void 0 ? void 0 : _h.odsChartsLegendContainerHorizontal)}\"\r\n    >\r\n    ${(legends ? legends.labels : []).map((legendLabel, indexInHolder) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            let colorIndex = legends.index[indexInHolder] % colors.length;\n            const customContent = this.getCustomLegendItemContent(legendLabel, legends.names[indexInHolder], indexInHolder, colors[colorIndex], colorIndex, postItemContent);\n            return `\r\n      <span class=\"ods-charts-legend-item ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.legends) === null || _a === void 0 ? void 0 : _a.odsChartsLegendItem)}\"\r\n        style=\"${ODSChartsItemCSSDefinition.getStyles((_b = cssTheme.legends) === null || _b === void 0 ? void 0 : _b.odsChartsLegendItem)}\">\r\n        <a class=\"ods-charts-legend-link ${ODSChartsItemCSSDefinition.getClasses((_c = cssTheme.legends) === null || _c === void 0 ? void 0 : _c.odsChartsLegendLink)}\" \r\n          style=\"${ODSChartsItemCSSDefinition.getStyles((_d = cssTheme.legends) === null || _d === void 0 ? void 0 : _d.odsChartsLegendLink)}\"\r\n          href=\"javascript:\" onclick=\"ods_chart_legend_switchLegend[${JSON.stringify(legendHolderSelector).replace(/\"/g, '&quot;')}](this, ${JSON.stringify(legends.names[indexInHolder]).replace(/\"/g, '&quot;')})\">\r\n          <span class=\"ods-charts-legend-color-holder ${ODSChartsItemCSSDefinition.getClasses((_e = cssTheme.legends) === null || _e === void 0 ? void 0 : _e.odsChartsLegendColorHolder)}\"\r\n          style=\"${ODSChartsItemCSSDefinition.getStyles((_f = cssTheme.legends) === null || _f === void 0 ? void 0 : _f.odsChartsLegendColorHolder)}\">  \r\n          <span style=\"background-color:${colors[colorIndex]}; ${ODSChartsItemCSSDefinition.getStyles((_g = cssTheme.legends) === null || _g === void 0 ? void 0 : _g.odsChartsLegendColor)}\" class=\"ods-charts-legend-color ${ODSChartsItemCSSDefinition.getClasses((_h = cssTheme.legends) === null || _h === void 0 ? void 0 : _h.odsChartsLegendColor)}\"></span>\r\n          </span>\r\n      \r\n        <label class=\"ods-charts-legend-label ${ODSChartsItemCSSDefinition.getClasses((_j = cssTheme.legends) === null || _j === void 0 ? void 0 : _j.odsChartsLegendLabel)}\"\r\n        style=\"${ODSChartsItemCSSDefinition.getStyles((_k = cssTheme.legends) === null || _k === void 0 ? void 0 : _k.odsChartsLegendLabel)}\"\r\n        role=\"button\">${this.getLegendName(legendLabel, formatter)}</label>\r\n      </a>${customContent\n                ? `<span class=\"ods-charts-legend-custom-content\" \r\n        ${ODSChartsItemCSSDefinition.getClasses((_l = cssTheme.legends) === null || _l === void 0 ? void 0 : _l.odsChartsLegendCustomContent)}\r\n        style=\"${ODSChartsItemCSSDefinition.getStyles((_m = cssTheme.legends) === null || _m === void 0 ? void 0 : _m.odsChartsLegendCustomContent)}\">${customContent}</span>`\n                : ''}\r\n    </span>`;\n        }).join(`\r\n    `)}${afterLegendContent\n            ? `<span\r\n      class=\"ods-charts-legend-global-custom-content\"\r\n      ${ODSChartsItemCSSDefinition.getClasses((_j = cssTheme.legends) === null || _j === void 0 ? void 0 : _j.odsChartsLegendGlobalCustomContent)}\r\n      style=\"${ODSChartsItemCSSDefinition.getStyles((_k = cssTheme.legends) === null || _k === void 0 ? void 0 : _k.odsChartsLegendGlobalCustomContent)}\"\r\n      >${afterLegendContent}</span>`\n            : ''}\r\n    </div>\r\n    </div>`;\n    }\n    /**\n     * Generates custom content for a legend item based on the provided postItemContent configuration.\n     * @param legendLabel The displayed text of the legend item\n     * @param legendName The name of the series associated with this legend item\n     * @param legendIndex The index of this item within its legend group (0-based)\n     * @param color The color assigned to this legend item, in CSS format (e.g. '#FF0000')\n     * @param colorIndex The index of the color in the color palette (0-based)\n     * @param postItemContent The configuration for custom content, can be either:\n     *   - A function receiving all parameters and returning HTML content\n     *   - An object mapping legend names to static HTML content\n     * @returns The generated HTML content string to be displayed after the legend item\n     */\n    getCustomLegendItemContent(legendLabel, legendName, legendIndex, color, colorIndex, postItemContent) {\n        if (!postItemContent) {\n            return '';\n        }\n        if (typeof postItemContent === 'function') {\n            return postItemContent(legendLabel, legendName, legendIndex, color, colorIndex);\n        }\n        if (typeof postItemContent === 'object' && !Array.isArray(postItemContent)) {\n            return postItemContent[legendName] || postItemContent[legendLabel] || postItemContent[legendIndex] || '';\n        }\n        if (Array.isArray(postItemContent)) {\n            return postItemContent[legendIndex] || '';\n        }\n        return '';\n    }\n    generateHandler(legendHolderSelector, cssTheme) {\n        if (!window.ods_chart_legend_switchLegend) {\n            window.ods_chart_legend_switchLegend = {};\n        }\n        window.ods_chart_legend_switchLegend[legendHolderSelector] = (elt, legendName) => {\n            const visible = !elt.classList.contains('ods-charts-legend-link-opacity');\n            const themeClasses = cssTheme.legends && cssTheme.legends.odsChartsLegendLinkOpacity && cssTheme.legends.odsChartsLegendLinkOpacity.classes\n                ? cssTheme.legends.odsChartsLegendLinkOpacity.classes\n                : [];\n            const themeStyles = visible\n                ? cssTheme.legends && cssTheme.legends.odsChartsLegendLinkOpacity && cssTheme.legends.odsChartsLegendLinkOpacity.styles\n                    ? cssTheme.legends.odsChartsLegendLinkOpacity.styles\n                    : {}\n                : cssTheme.legends && cssTheme.legends.odsChartsLegendLink && cssTheme.legends.odsChartsLegendLink.styles\n                    ? cssTheme.legends.odsChartsLegendLink.styles\n                    : {};\n            if (visible) {\n                elt.classList.add('ods-charts-legend-link-opacity');\n                for (const themeClass of themeClasses) {\n                    elt.classList.add(themeClass);\n                }\n            }\n            else {\n                elt.classList.remove('ods-charts-legend-link-opacity');\n                for (const themeClass of themeClasses) {\n                    elt.classList.remove(themeClass);\n                }\n            }\n            for (const cssProperty of Object.keys(themeStyles)) {\n                elt.style[cssProperty] = themeStyles[cssProperty];\n            }\n            this.echart.dispatchAction({\n                type: visible ? 'legendUnSelect' : 'legendSelect',\n                name: legendName,\n            });\n        };\n    }\n}\n","export function escapeHtml(unsafe) {\n    if (!unsafe)\n        return '';\n    const div = document.createElement('div');\n    div.textContent = unsafe;\n    return div.innerHTML;\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport class ODSChartsResize {\n    constructor(echart, chartId) {\n        this.echart = echart;\n        this.chartId = chartId;\n        this.observer = undefined;\n    }\n    static addResizeManagement(echart, chartId) {\n        return new ODSChartsResize(echart, chartId);\n    }\n    get divElement() {\n        let div;\n        div = document.getElementById(this.chartId) || undefined;\n        if (!div) {\n            div = this.echart.getDom() || undefined;\n            if (div) {\n                div = div.parentElement || undefined;\n            }\n        }\n        return div;\n    }\n    addResizeManagement() {\n        this.removeListener();\n        const div = this.divElement;\n        if (div && ResizeObserver) {\n            this.observer = new ResizeObserver(this.resizeChart.bind(this));\n            this.observer.observe(div);\n        }\n        else {\n            ODSChartsResize.sizeListeners[this.chartId] = this.resizeChart.bind(this);\n            window.addEventListener('resize', ODSChartsResize.sizeListeners[this.chartId]);\n        }\n    }\n    removeListener() {\n        try {\n            const div = this.divElement;\n            if (div && ResizeObserver) {\n                if (this.observer) {\n                    this.observer.unobserve(div);\n                    this.observer = undefined;\n                }\n            }\n            else if (ODSChartsResize.sizeListeners[this.chartId]) {\n                window.removeEventListener('resize', ODSChartsResize.sizeListeners[this.chartId]);\n                delete ODSChartsResize.sizeListeners[this.chartId];\n            }\n        }\n        catch (error) { }\n    }\n    resizeChart() {\n        try {\n            const chartOptions = this.echart.getOption();\n            const opts = {};\n            if (chartOptions.animation) {\n                opts.animation = {\n                    duration: 'number' === typeof chartOptions.animationDuration ? chartOptions.animationDuration : 1000,\n                    easing: chartOptions.animationEasing ? chartOptions.animationEasing : 'cubicInOut',\n                };\n            }\n            this.echart.resize(opts);\n        }\n        catch (error) {\n            this.removeListener();\n        }\n    }\n}\nODSChartsResize.sizeListeners = {};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport function buildHash(text) {\n    var result = 0;\n    if ('string' !== typeof text) {\n        text = JSON.stringify(text);\n    }\n    if (text.length == 0)\n        return '' + result;\n    for (let index = 0; index < text.length; index++) {\n        const charCode = text.charCodeAt(index);\n        result = (result << 5) - result + charCode;\n        result = result & result;\n    }\n    return '' + result;\n}\nexport function getStringValue(text) {\n    return 'string' === typeof text ? text : buildHash(text);\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { isVarArray, isVarObject } from './merge-objects';\nexport function cloneDeepObject(obj) {\n    if (isVarObject(obj)) {\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = cloneDeepObject(obj[key]);\n        }\n        return result;\n    }\n    else if (isVarArray(obj)) {\n        const result = [];\n        for (let index = 0; index < obj.length; index++) {\n            result[index] = cloneDeepObject(obj[index]);\n        }\n        return result;\n    }\n    else {\n        return obj;\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { cloneDeepObject } from '../../tools/clone-deep-object';\nimport { ODSChartsMode } from '../ods-chart-theme';\nexport const DEFAULT_ARROW_SIZE = 0; // in px. Set to 0 to disable arrow\nexport class ODSChartsPopoverManager {\n    constructor() {\n        this.dispose = undefined;\n        this.show = undefined;\n    }\n}\nexport class ODSChartsPopoverItem {\n    constructor() {\n        this.seriesName = undefined;\n        this.markerColor = undefined;\n    }\n}\n/**\n * {@link ODSChartsPopoverDefinition} defines the interface of the manager of externalized\n * popover or tooltip {@link ODSChartsTheme.externalizePopover}.\n *\n * {@link ODSChartsPopoverDefinition} is not used directly. Instead, we use the variable **{@link ODSChartsPopoverDefinition}.\n * {@link ODSChartsPopoverManagers} gives 3 default {@link ODSChartsPopoverDefinition}\n * managers for Apache ECharts, Boosted 5 and Boosted 4.\n *\n * You probably need to use one of those.\n *\n * But even if you use one of those, you may specialize it with specific(s)\n * implementation(s) with one of the {@link ODSChartsPopoverDefinition} method(s).\n *\n * For example, you may specify the content of the tooltip:\n * ```\n *                 themeManager.externalizePopover(undefined, {\n *                  ...ODSCharts.ODSChartsPopoverManagers.NONE,\n *                  getPopupContent: (tooltipElements) => {\n *                    return 'This is my HTML code that may content <a href=\"https://github.com/Orange-OpenSource/ods-charts\">a link</a>';\n *                  },\n *                });\n * ```\n * or if you want to use Boosted 5 tooltip renderer:\n * ```\n *                 themeManager.externalizePopover(undefined, {\n *                  ...ODSCharts.ODSChartsPopoverManagers.BOOSTED5,\n *                  getPopupContent: (tooltipElements) => {\n *                    return 'This is my HTML code that may content <a href=\"https://github.com/Orange-OpenSource/ods-charts\">a link</a>';\n *                  },\n *                });\n * ```\n */\nexport class ODSChartsPopoverDefinition {\n}\nexport class ODSChartsPopoverDefinitionWithRenderer extends ODSChartsPopoverDefinition {\n    testIfMouseIsOverTooltip(previousPopover) {\n        var _a;\n        try {\n            // We test if the mouse is over the previous tooltip to cancel the creation\n            // of a new one and allow the mouse to enter over this previous one\n            const mousePosition = { top: window.event.clientY, left: window.event.clientX };\n            const tooltipRect = (_a = previousPopover.tip) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n            if (tooltipRect &&\n                mousePosition.top > tooltipRect.top - this.tooltipMarging &&\n                mousePosition.top < tooltipRect.top + tooltipRect.height + this.tooltipMarging &&\n                mousePosition.left > tooltipRect.left - this.tooltipMarging &&\n                mousePosition.left < tooltipRect.left + tooltipRect.width + this.tooltipMarging) {\n                return true;\n            }\n        }\n        catch (error) { }\n        return false;\n    }\n}\nexport var ODSChartsPopoverAxisPointer;\n(function (ODSChartsPopoverAxisPointer) {\n    ODSChartsPopoverAxisPointer[\"none\"] = \"none\";\n    ODSChartsPopoverAxisPointer[\"shadow\"] = \"shadow\";\n    ODSChartsPopoverAxisPointer[\"line\"] = \"line\";\n    ODSChartsPopoverAxisPointer[\"cross\"] = \"cross\";\n})(ODSChartsPopoverAxisPointer || (ODSChartsPopoverAxisPointer = {}));\nexport var ODSChartsPopoverTooltipTrigger;\n(function (ODSChartsPopoverTooltipTrigger) {\n    ODSChartsPopoverTooltipTrigger[\"xAxis\"] = \"xAxis\";\n    ODSChartsPopoverTooltipTrigger[\"yAxis\"] = \"yAxis\";\n    ODSChartsPopoverTooltipTrigger[\"grid\"] = \"grid\";\n})(ODSChartsPopoverTooltipTrigger || (ODSChartsPopoverTooltipTrigger = {}));\n/**\n * Configuration of the externalizePopover feature {@link ODSChartsTheme.externalizePopover}.\n *\n */\nexport class ODSChartsPopoverConfig {\n}\nclass BOOSTED5_Definition extends ODSChartsPopoverDefinitionWithRenderer {\n    constructor() {\n        super(...arguments);\n        this.testAvailability = () => {\n            let availability = true;\n            try {\n                if (undefined === boosted) {\n                    availability = false;\n                }\n            }\n            catch (error) {\n                availability = false;\n            }\n            if (!availability) {\n                console.warn('BOOSTED 5 popover/tooltip rendering is not avalable: boosted variable is not accessible!');\n            }\n            return availability;\n        };\n        this.getOrCreatePopupInstance = this._getOrCreatePopupInstance.bind(this);\n        this.tooltipDelay = 0;\n        this.tooltipMarging = 15;\n    }\n    _getOrCreatePopupInstance(selector, title, htmlContent, enterable, mode) {\n        var _a;\n        try {\n            let previousPopover = boosted.Popover.getInstance(document.querySelector(selector));\n            if (previousPopover) {\n                if (enterable && this.testIfMouseIsOverTooltip(previousPopover)) {\n                    return undefined;\n                }\n                previousPopover.dispose();\n            }\n        }\n        catch (error) { }\n        const allowList = cloneDeepObject(boosted.Tooltip.Default.allowList);\n        allowList.span = ['style', 'class'];\n        allowList.div = ['class'];\n        allowList.label = ['class'];\n        let container = document.getElementById('ods-chart-popover-container-' + mode);\n        if (!container) {\n            container = document.createElement('div');\n            if ([ODSChartsMode.DARK, ODSChartsMode.LIGHT].includes(mode)) {\n                container.setAttribute('data-bs-theme', mode);\n            }\n            container.id = 'ods-chart-popover-container-' + mode;\n            container.classList.add('ods-charts-context');\n            (_a = document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.append(container);\n        }\n        return boosted.Popover.getOrCreateInstance(document.querySelector(selector), {\n            allowList: allowList,\n            html: true,\n            trigger: 'click',\n            placement: 'top',\n            container: container,\n            title: title,\n            content: htmlContent,\n            customClass: enterable ? '' : 'pe-none',\n        });\n    }\n}\nclass BOOSTED4_Definition extends ODSChartsPopoverDefinitionWithRenderer {\n    constructor() {\n        super(...arguments);\n        this.testAvailability = () => {\n            let availability = true;\n            try {\n                if (undefined === boosted) {\n                    availability = false;\n                }\n            }\n            catch (error) {\n                availability = false;\n            }\n            if (!availability) {\n                console.warn('BOOSTED 4 popover/tooltip rendering is not avalable: boosted variable is not accessible!');\n            }\n            return availability;\n        };\n        this.getOrCreatePopupInstance = this._getOrCreatePopupInstance.bind(this);\n        this.tooltipDelay = 0;\n        this.tooltipMarging = 10;\n    }\n    _getOrCreatePopupInstance(selector, title, htmlContent, enterable, mode) {\n        var _a;\n        const elt = document.querySelector(selector);\n        const whiteList = cloneDeepObject(boosted.Tooltip.Default.whiteList);\n        whiteList.span = ['style', 'class'];\n        whiteList.div = ['class'];\n        whiteList.label = ['class'];\n        if (elt && elt.chartPopover) {\n            try {\n                if (enterable && this.testIfMouseIsOverTooltip(elt.chartPopover)) {\n                    return undefined;\n                }\n                if (elt.chartPopover.config.title === title && elt.chartPopover.config.content === htmlContent) {\n                    elt.chartPopover.update();\n                    return undefined;\n                }\n                elt.chartPopover.dispose();\n            }\n            catch (error) { }\n        }\n        let container = document.getElementById('ods-chart-popover-container-' + mode);\n        if (!container) {\n            container = document.createElement('div');\n            if ([ODSChartsMode.DARK, ODSChartsMode.LIGHT].includes(mode)) {\n                container.setAttribute('data-bs-theme', mode);\n            }\n            container.id = 'ods-chart-popover-container-' + mode;\n            container.classList.add('ods-charts-context');\n            (_a = document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.append(container);\n        }\n        const popover = new boosted.Popover(elt, {\n            whiteList: whiteList,\n            html: true,\n            trigger: 'click',\n            placement: 'top',\n            container: container,\n            title: title,\n            content: htmlContent,\n            customClass: '',\n        });\n        elt.chartPopover = popover;\n        if (!enterable) {\n            window.setTimeout(() => {\n                try {\n                    elt.chartPopover.tip.style.pointerEvents = 'none';\n                }\n                catch (error) { }\n            });\n        }\n        return popover;\n    }\n}\n/**\n * `ODSChartsPopoverManagers` is used to specify popoverDefinition parameter (popup/tooltip renderer) of {@link ODSChartsTheme.externalizePopover}.\n *\n * Available popover/tooltip renderer:\n * - `ODSChartsPopoverManagers.NONE`: to use default ECharts template to externalize tooltip/popover HTML element, implementing Orange Design System\n * - `ODSChartsPopoverManagers.BOOSTED5`: to use Boosted 5 tooltip/popover\n * - `ODSChartsPopoverManagers.BOOSTED4`: to use Boosted 4 tooltip/popover\n *\n * **WARNING**: Boosted 4 or Boosted 5 rendering requires dependency on the boosted library and access to the boosted global variable.\n */\nexport const ODSChartsPopoverManagers = {\n    BOOSTED5: new BOOSTED5_Definition(),\n    BOOSTED4: new BOOSTED4_Definition(),\n    NONE: {},\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport var MainAxisType;\n(function (MainAxisType) {\n    MainAxisType[\"category\"] = \"category\";\n    MainAxisType[\"time\"] = \"time\";\n})(MainAxisType || (MainAxisType = {}));\nexport function isMainAxis(axis) {\n    return axis && (axis.data || (axis.type && Object.values(MainAxisType).includes(axis.type)));\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { ODSChartsCSSThemesNames, ODSChartsItemCSSDefinition } from '../css-themes/css-themes';\nimport { mergeObjects, isVarArray } from '../../tools/merge-objects';\nimport { DEFAULT_ARROW_SIZE, ODSChartsPopoverAxisPointer, ODSChartsPopoverManagers, } from './ods-chart-popover-definitions';\nimport { ODSChartsLegends } from '../legends/ods-chart-legends';\nimport { cloneDeepObject } from '../../tools/clone-deep-object';\nimport { ODSChartsMode } from '../ods-chart-theme';\nimport { isMainAxis } from '../const/main-axis-type.const';\nconst DEFAULT_TEMPLATE_CSS = `\r\n.ods-charts-popover {\r\n  margin: 0 !important;\r\n  padding: 0 !important;\r\n  border: none !important;\r\n  box-shadow: none !important;\r\n  background: none !important;\r\n}\r\n  \r\n.ods-charts-popover.ods-charts-enterable-false {\r\n  pointer-events: none !important;\r\n}\r\n\r\n.ods-charts-popover .ods-charts-popover-inner  {\r\n  display: inline-block;\r\n  background-color: var(--bs-body-bg, #fff);\r\n  color: var(--bs-body-color, #000);\r\n  border: 2px solid var(--bs-border-color-subtle, #ccc);  \r\n  padding-left: var(--ods-popover-body-padding-x, 9px);\r\n  padding-right: var(--ods-popover-body-padding-x, 9px);\r\n  padding-top: var(--ods-popover-header-padding-top, 5px);\r\n  padding-bottom: var(--ods-popover-body-padding-bottom, 7px);\r\n}\r\n\r\n.ods-charts-popover .ods-charts-popover-header {\r\n  color: var(--bs-body-color, #000);\r\n  font-size: var(--ods-popover-header-font-size, 14px);\r\n  font-weight: var(--ods-popover-header-font-weight, 700);\r\n  line-height: var(--ods-popover-header-line-height, 1.11);\r\n  padding-bottom:var(--ods-popover-header-padding-bottom, 5px);\r\n}\r\n\r\n.ods-charts-popover .ods-charts-popover-arrow  {\r\n  display: var(--ods-poppover-arrow-display, ${0 == DEFAULT_ARROW_SIZE ? 'none' : 'inherit'});\r\n  position: absolute;\r\n  bottom: -8px;\r\n  width: 20px;\r\n  height: 10px;\r\n  left: calc(50% - 10px);\r\n}\r\n\r\n\r\n.ods-charts-popover .ods-charts-popover-arrow::before {  \r\n  position: absolute;\r\n  display: block;\r\n  content: \"\";\r\n  border-color: transparent;\r\n  border-top-color: var(--bs-border-color-subtle, #ccc);\r\n  border-width: 10px;\r\n  border-bottom-width: 0px;\r\n  border-style: solid;\r\n  top: 2px;\r\n  left: 0;\r\n}\r\n\r\n.ods-charts-popover .ods-charts-popover-arrow::after {\r\n  border-color: transparent;\r\n  border-top-color: var(--bs-body-bg, #fff);\r\n  border-width: 10px;\r\n  border-bottom-width: 0px;\r\n  position: absolute;\r\n  display: block;\r\n  content: \"\";\r\n  border-style: solid;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n`;\nconst DEFAULT_NONE_CSS = `\r\n.ods-charts-no-css-lib .ods-charts-popover-color-holder {\r\n  display: inline-block;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-popover-color {\r\n  margin-right: 5px;\r\n  width: 12px;\r\n  height: 12px;\r\n  position: relative;\r\n  display: block;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-popover-line {\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  white-space: nowrap;\r\n  align-items: baseline;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-popover-text {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: baseline;\r\n  font-size: var(--ods-popover-body-font-size, 14px);\r\n  font-weight: var(--ods-popover-body-font-weight, 700);\r\n  line-height: var(--ods-popover-body-line-height, 1.11);\r\n  color: var(--bs-body-color, #000000);\r\n}\r\n\r\n\r\n.ods-charts-no-css-lib .ods-charts-popover-label {\r\n  margin-right: 10px;\r\n  flex-grow: 1;\r\n}\r\n\r\n.ods-charts-no-css-lib .ods-charts-popover-value {\r\n  font-weight: 700;\r\n}\r\n`;\nexport class ODSChartsPopover {\n    constructor(popoverDefinition, popoverConfig) {\n        this.popoverDefinition = popoverDefinition;\n        this.popoverConfig = popoverConfig;\n        this.tooltipStyle = '';\n        this.enterable = false;\n        this.mode = ODSChartsMode.DEFAULT;\n    }\n    static addPopoverManagement(popoverDefinition, popoverConfig) {\n        if (undefined === popoverDefinition || (popoverDefinition.testAvailability && !popoverDefinition.testAvailability())) {\n            popoverDefinition = ODSChartsPopoverManagers.NONE;\n        }\n        if (undefined === popoverConfig) {\n            popoverConfig = {};\n        }\n        if (undefined === popoverConfig.enabled) {\n            popoverConfig.enabled = true;\n        }\n        if (undefined === popoverConfig.axisPointer) {\n            popoverConfig.axisPointer = ODSChartsPopoverAxisPointer.none;\n        }\n        if (undefined === popoverConfig.shared) {\n            popoverConfig.shared = false;\n        }\n        if (undefined === popoverConfig.tooltip) {\n            popoverConfig.tooltip = true;\n        }\n        if (undefined === popoverConfig.tooltipDelay) {\n            popoverConfig.tooltipDelay =\n                undefined === popoverDefinition.tooltipDelay\n                    ? 0\n                    : popoverDefinition.tooltipDelay;\n        }\n        if (!popoverConfig.shared && 'none' !== popoverConfig.axisPointer) {\n            console.warn(`If you choose a specific axisPointer like ${popoverConfig.axisPointer}, the popup/tooltip content will be shared between series values (shared option forced to true)`);\n            popoverConfig.shared = true;\n        }\n        return new ODSChartsPopover(popoverDefinition, popoverConfig);\n    }\n    getTooltipTrigger(dataOptions, themeOptions) {\n        let tooltipTrigger = this.popoverConfig.axisPointer === 'cross' ? 'grid' : this.popoverConfig.tooltipTrigger;\n        if (undefined == tooltipTrigger) {\n            for (const axis of ['xAxis', 'yAxis']) {\n                if (isMainAxis(dataOptions[axis])) {\n                    tooltipTrigger = tooltipTrigger ? undefined : axis;\n                }\n            }\n        }\n        if (undefined == tooltipTrigger) {\n            for (const axis of ['xAxis', 'yAxis']) {\n                if (themeOptions[axis] && themeOptions[axis].splitLine && themeOptions[axis].splitLine.show) {\n                    tooltipTrigger = tooltipTrigger ? undefined : axis;\n                }\n            }\n        }\n        if (undefined == tooltipTrigger) {\n            for (const axis of ['xAxis', 'yAxis']) {\n                if (themeOptions[axis] && themeOptions[axis].axisLine && themeOptions[axis].axisLine.show) {\n                    tooltipTrigger = tooltipTrigger ? undefined : axis;\n                }\n            }\n        }\n        if (undefined == tooltipTrigger) {\n            for (const axis of ['xAxis', 'yAxis']) {\n                if (dataOptions[axis] && dataOptions[axis].data) {\n                    tooltipTrigger = tooltipTrigger ? undefined : axis;\n                }\n            }\n        }\n        if (undefined == tooltipTrigger) {\n            tooltipTrigger = 'grid';\n        }\n        return tooltipTrigger;\n    }\n    getTooltipElements(params, legends) {\n        return {\n            categoryLabel: this.popoverDefinition && this.popoverDefinition.getPopupTitle\n                ? this.popoverDefinition.getPopupTitle(params[0].axisValue, params[0].axisValueLabel, params[0].name)\n                : params[0].axisValueLabel || params[0].axisValue || params[0].name,\n            tooltipElements: params\n                .map((param) => {\n                const legendLabel = legends &&\n                    legends.names &&\n                    legends.labels &&\n                    legends.labels.find((_label, index) => {\n                        return legends.names[index] === param.seriesName;\n                    });\n                const itemValue = isVarArray(param.value) && 2 == param.value.length && (!param.axisType || param.axisType.endsWith('.time'))\n                    ? param.value[1]\n                    : isVarArray(param.value) && param.seriesIndex + 1 < param.value.length\n                        ? param.value[param.seriesIndex + 1]\n                        : isVarArray(param.value)\n                            ? undefined\n                            : param.value;\n                const element = mergeObjects(cloneDeepObject(param), {\n                    markerColor: param.color,\n                    itemValue: itemValue,\n                    label: legendLabel || '',\n                });\n                if (undefined !== element.itemValue && this.popoverDefinition && this.popoverDefinition.getPopupContentValue) {\n                    element.itemValue = this.popoverDefinition.getPopupContentValue(element);\n                }\n                return element;\n            })\n                .filter((elt) => {\n                if (undefined === elt.itemValue) {\n                    console.error('failed displaying', elt);\n                }\n                return undefined !== elt.itemValue;\n            }),\n        };\n    }\n    addPopoverManagement(dataOptions, themeOptions, cssTheme, cssThemeName, currentMode) {\n        var _a, _b, _c;\n        this.mode = currentMode;\n        if (ODSChartsCSSThemesNames.NONE === cssThemeName && !document.querySelector('#ods-chart-popover-none-css')) {\n            let style = document.createElement('style');\n            style.id = 'ods-chart-popover-none-css';\n            style.textContent = DEFAULT_NONE_CSS;\n            document.head.appendChild(style);\n        }\n        const popoverOptions = {};\n        const tooltipTrigger = this.getTooltipTrigger(dataOptions, themeOptions);\n        this.enterable = !!dataOptions && !!dataOptions.tooltip && !!dataOptions.tooltip.enterable;\n        let legends = undefined;\n        try {\n            legends = ODSChartsLegends.getLegendData(dataOptions, false);\n        }\n        catch (error) { }\n        if (this.popoverConfig.enabled) {\n            mergeObjects(popoverOptions, {\n                tooltip: {\n                    appendTo: 'body',\n                },\n                [tooltipTrigger]: {\n                    axisPointer: {\n                        label: {\n                            show: false,\n                        },\n                        handle: {\n                            show: true,\n                            icon: 'none',\n                        },\n                    },\n                },\n            });\n            if (!this.popoverConfig.tooltip) {\n                mergeObjects(popoverOptions, {\n                    tooltip: { triggerOn: 'click', alwaysShowContent: false },\n                });\n            }\n            if (!this.popoverDefinition.getOrCreatePopupInstance) {\n                mergeObjects(popoverOptions, {\n                    tooltip: {\n                        position: (mousePosition, _params, _dom, _rect, containerSize) => {\n                            var _a;\n                            let tooltipPosition = {\n                                left: mousePosition[0] - containerSize.contentSize[0] / 2,\n                            };\n                            const arrowSize = DEFAULT_ARROW_SIZE;\n                            if ((_a = dataOptions === null || dataOptions === void 0 ? void 0 : dataOptions.tooltip) === null || _a === void 0 ? void 0 : _a.confine) {\n                                const displayTooltipOnTop = mousePosition[1] > containerSize.contentSize[1];\n                                let tooltipLeftPosition;\n                                tooltipPosition[['top', 'bottom'][+displayTooltipOnTop]] = displayTooltipOnTop\n                                    ? containerSize.viewSize[1] - mousePosition[1] + arrowSize\n                                    : mousePosition[1] + arrowSize;\n                                if (mousePosition[0] > containerSize.viewSize[0] - containerSize.contentSize[0] / 2) {\n                                    tooltipLeftPosition = Math.min(mousePosition[0] - containerSize.viewSize[0] + containerSize.contentSize[0] - arrowSize, containerSize.contentSize[0] - arrowSize * 2 - 5);\n                                }\n                                else if (mousePosition[0] < containerSize.contentSize[0] / 2) {\n                                    tooltipLeftPosition = Math.max(mousePosition[0] - arrowSize, 5);\n                                }\n                                else {\n                                    tooltipLeftPosition = containerSize.contentSize[0] / 2 - arrowSize;\n                                }\n                                this.tooltipStyle = `${tooltipLeftPosition}px;`;\n                                if (!displayTooltipOnTop) {\n                                    this.tooltipStyle += ' top: -8px; transform: scaleY(-1);';\n                                }\n                            }\n                            else {\n                                tooltipPosition['top'] = mousePosition[1] - containerSize.contentSize[1] - arrowSize;\n                            }\n                            return tooltipPosition;\n                        },\n                        formatter: (params) => {\n                            if (!isVarArray(params)) {\n                                params = [params];\n                            }\n                            params = params;\n                            const elements = this.getTooltipElements(params, legends);\n                            return elements && elements.tooltipElements.length > 0\n                                ? new DOMParser().parseFromString(this.popoverDefinition.getPopupTemplate\n                                    ? this.popoverDefinition.getPopupTemplate(elements.categoryLabel, elements.tooltipElements)\n                                    : this.getPopupTemplate(elements, cssTheme, this.mode), 'text/html').body.firstChild\n                                : undefined;\n                        },\n                        showDelay: 0,\n                        hideDelay: 0,\n                        appendTo: 'body',\n                        renderMode: 'html',\n                        className: `ods-charts-popover ods-charts-enterable-${this.enterable ? 'true' : 'false'} ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.popover) === null || _a === void 0 ? void 0 : _a.odsChartsPopover)}`,\n                        axisPointer: {\n                            type: this.popoverConfig.axisPointer,\n                        },\n                    },\n                    [tooltipTrigger]: {\n                        axisPointer: {\n                            snap: true,\n                            show: true,\n                            triggerTooltip: true,\n                            label: {\n                                show: false,\n                            },\n                            handle: {\n                                show: true,\n                                icon: 'none',\n                            },\n                            lineStyle: {\n                                width: 'none' === this.popoverConfig.axisPointer ? 0 : 1,\n                            },\n                        },\n                    },\n                });\n            }\n            else {\n                mergeObjects(popoverOptions, {\n                    tooltip: {\n                        formatter: (params) => {\n                            if (!isVarArray(params)) {\n                                params = [params];\n                            }\n                            params = params;\n                            const elements = this.getTooltipElements(params, legends);\n                            if (elements && elements.tooltipElements.length > 0 && window.event) {\n                                try {\n                                    this.displayPopup(window.event, elements, cssTheme, this.mode);\n                                }\n                                catch (error) { }\n                            }\n                            return ' ';\n                        },\n                        appendTo: 'body',\n                        className: 'd-none',\n                        axisPointer: {\n                            type: this.popoverConfig.axisPointer,\n                        },\n                    },\n                    [tooltipTrigger]: {\n                        axisPointer: {\n                            snap: true,\n                            show: true,\n                            triggerTooltip: true,\n                            label: {\n                                show: false,\n                            },\n                            handle: {\n                                show: true,\n                                icon: 'none',\n                            },\n                            lineStyle: {\n                                width: 'none' === this.popoverConfig.axisPointer ? 0 : 1,\n                            },\n                        },\n                    },\n                });\n            }\n            if ((_b = popoverOptions === null || popoverOptions === void 0 ? void 0 : popoverOptions.tooltip) === null || _b === void 0 ? void 0 : _b.formatter) {\n                popoverOptions.tooltip.formatter.IsOdsChartsFormatter = true;\n            }\n            // We have to delete any default formatter as it is incompatible with externalizePopover feature\n            if ((_c = dataOptions === null || dataOptions === void 0 ? void 0 : dataOptions.tooltip) === null || _c === void 0 ? void 0 : _c.formatter) {\n                if (!dataOptions.tooltip.formatter.IsOdsChartsFormatter) {\n                    dataOptions.tooltip = cloneDeepObject(dataOptions.tooltip);\n                    // But if no formatter has been provided through the popoverDefinition,\n                    // we will use the Apache ECharts config\n                    if (!this.popoverDefinition.getPopupContentValue) {\n                        const formatter = dataOptions.tooltip.formatter;\n                        this.popoverDefinition = cloneDeepObject(this.popoverDefinition);\n                        this.popoverDefinition.getPopupContentValue = (tooltipElement) => formatter([tooltipElement]);\n                    }\n                }\n                delete dataOptions.tooltip.formatter;\n            }\n            if (!this.popoverConfig.shared && 'none' === this.popoverConfig.axisPointer) {\n                mergeObjects(popoverOptions, { tooltip: { trigger: 'item' } });\n            }\n            else {\n                mergeObjects(popoverOptions, { tooltip: { trigger: 'axis' } });\n            }\n        }\n        else {\n            mergeObjects(popoverOptions, {\n                tooltip: {\n                    triggerOn: 'none',\n                },\n            });\n        }\n        mergeObjects(themeOptions, popoverOptions);\n    }\n    getPopupContentLine(element, cssTheme, mode) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        return `<div \r\n    class=\"ods-charts-popover-line ods-charts-mode-${mode} ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.popover) === null || _a === void 0 ? void 0 : _a.odsChartsPopoverLine)}\"\r\n    style=\"${ODSChartsItemCSSDefinition.getStyles((_b = cssTheme.popover) === null || _b === void 0 ? void 0 : _b.odsChartsPopoverLine)}\"    \r\n    >\r\n      <span class=\"ods-charts-popover-color-holder ${ODSChartsItemCSSDefinition.getClasses((_c = cssTheme.popover) === null || _c === void 0 ? void 0 : _c.odsChartsPopoverColorHolder)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_d = cssTheme.popover) === null || _d === void 0 ? void 0 : _d.odsChartsPopoverColorHolder)}\" >  \r\n        <span \r\n          class=\"ods-charts-popover-color ${ODSChartsItemCSSDefinition.getClasses((_e = cssTheme.popover) === null || _e === void 0 ? void 0 : _e.odsChartsPopoverColor)}\"  style=\"background-color:${element.markerColor};  ${ODSChartsItemCSSDefinition.getStyles((_f = cssTheme.popover) === null || _f === void 0 ? void 0 : _f.odsChartsPopoverColor)};\">\r\n        </span> \r\n      </span>\r\n    \r\n      <label class=\"ods-charts-popover-text ${ODSChartsItemCSSDefinition.getClasses((_g = cssTheme.popover) === null || _g === void 0 ? void 0 : _g.odsChartsPopoverText)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_h = cssTheme.popover) === null || _h === void 0 ? void 0 : _h.odsChartsPopoverText)}\" >\r\n        <span class=\"ods-charts-popover-label ${ODSChartsItemCSSDefinition.getClasses((_j = cssTheme.popover) === null || _j === void 0 ? void 0 : _j.odsChartsPopoverLabel)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_k = cssTheme.popover) === null || _k === void 0 ? void 0 : _k.odsChartsPopoverLabel)}\" >${element.label ? element.label + ': ' : ''}</span>\r\n        <span class=\"ods-charts-popover-value ${ODSChartsItemCSSDefinition.getClasses((_l = cssTheme.popover) === null || _l === void 0 ? void 0 : _l.odsChartsPopoverValue)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_m = cssTheme.popover) === null || _m === void 0 ? void 0 : _m.odsChartsPopoverValue)}\">${element.itemValue}</span>\r\n      </label>\r\n    </div>\r\n        `;\n    }\n    getPopupContent(tooltipElements, cssTheme, mode) {\n        var _a, _b;\n        return `\r\n    <div  class=\"ods-charts-popover-body-content ods-charts-mode-${mode} ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.popover) === null || _a === void 0 ? void 0 : _a.odsChartsPopoverBodyContent)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_b = cssTheme.popover) === null || _b === void 0 ? void 0 : _b.odsChartsPopoverBodyContent)}\" >\r\n        ${tooltipElements\n            .map((element) => this.popoverDefinition.getPopupContentLine ? this.popoverDefinition.getPopupContentLine(element) : this.getPopupContentLine(element, cssTheme, mode))\n            .join('')}\r\n    </div>\r\n    `;\n    }\n    getPopupTemplate(elements, cssTheme, mode) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        if (!document.querySelector('#ods-chart-tooltip-default-template')) {\n            let style = document.createElement('style');\n            style.id = 'ods-chart-tooltip-default-template';\n            style.textContent = DEFAULT_TEMPLATE_CSS;\n            document.head.appendChild(style);\n        }\n        return ` \r\n  <div class=\"ods-charts-popover-holder ods-charts-context ods-charts-mode-${mode} ${ODSChartsItemCSSDefinition.getClasses((_a = cssTheme.popover) === null || _a === void 0 ? void 0 : _a.odsChartsPopoverHolder)}\" data-bs-theme=\"${mode}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_b = cssTheme.popover) === null || _b === void 0 ? void 0 : _b.odsChartsPopoverHolder)}\">\r\n    <div class=\"ods-charts-popover-inner ${ODSChartsItemCSSDefinition.getClasses((_c = cssTheme.popover) === null || _c === void 0 ? void 0 : _c.odsChartsPopoverInner)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_d = cssTheme.popover) === null || _d === void 0 ? void 0 : _d.odsChartsPopoverInner)}\">\r\n      <div class=\"ods-charts-popover-content ${ODSChartsItemCSSDefinition.getClasses((_e = cssTheme.popover) === null || _e === void 0 ? void 0 : _e.odsChartsPopoverContent)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_f = cssTheme.popover) === null || _f === void 0 ? void 0 : _f.odsChartsPopoverContent)}\" >\r\n        <div class=\"ods-charts-popover-arrow ${ODSChartsItemCSSDefinition.getClasses((_g = cssTheme.popover) === null || _g === void 0 ? void 0 : _g.odsChartsPopoverArrow)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_h = cssTheme.popover) === null || _h === void 0 ? void 0 : _h.odsChartsPopoverArrow)}; left: ${this.tooltipStyle}\" ></div>\r\n          <div class=\"ods-charts-popover-header ${ODSChartsItemCSSDefinition.getClasses((_j = cssTheme.popover) === null || _j === void 0 ? void 0 : _j.odsChartsPopoverHeader)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_k = cssTheme.popover) === null || _k === void 0 ? void 0 : _k.odsChartsPopoverHeader)}\">${elements.categoryLabel}</div>\r\n          <div class=\"ods-charts-popover-body ${ODSChartsItemCSSDefinition.getClasses((_l = cssTheme.popover) === null || _l === void 0 ? void 0 : _l.odsChartsPopoverBody)}\" style=\"${ODSChartsItemCSSDefinition.getStyles((_m = cssTheme.popover) === null || _m === void 0 ? void 0 : _m.odsChartsPopoverBody)}\">\r\n            ${this.popoverDefinition.getPopupContent\n            ? this.popoverDefinition.getPopupContent(elements.tooltipElements)\n            : this.getPopupContent(elements.tooltipElements, cssTheme, mode)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>     \r\n`;\n    }\n    displayPopup(event, item, cssTheme, mode) {\n        if (0 !== this.popoverConfig.tooltipDelay) {\n            if (this.tooltipDelay) {\n                return;\n            }\n            this.tooltipDelay = window.setTimeout(() => {\n                this.tooltipDelay = undefined;\n            }, this.popoverConfig.tooltipDelay ? this.popoverConfig.tooltipDelay : 200);\n        }\n        let id = '' + Math.ceil(Math.random() * 100000);\n        let tooltipAnchor = document.querySelector('.libPopupTooltipAnchor');\n        if (!tooltipAnchor) {\n            document.body.appendChild(new DOMParser().parseFromString(`<div class=\"libPopupTooltipAnchor\" ></div>`, 'text/html').body.firstChild);\n        }\n        tooltipAnchor = document.querySelector('.libPopupTooltipAnchor');\n        tooltipAnchor.setAttribute('data-id', id);\n        tooltipAnchor.setAttribute('style', `\r\n                    position: absolute;\r\n                    top: ${event.pageY}px;\r\n                    left: ${event.pageX}px;\r\n                    `);\n        try {\n            let popover = this.popoverDefinition.getOrCreatePopupInstance('.libPopupTooltipAnchor', item.categoryLabel, this.popoverDefinition.getPopupContent\n                ? this.popoverDefinition.getPopupContent(item.tooltipElements)\n                : this.getPopupContent(item.tooltipElements, cssTheme, mode), this.enterable, mode);\n            if (!popover) {\n                return;\n            }\n            popover.show();\n            if (this.tooltipTimeOut) {\n                window.clearTimeout(this.tooltipTimeOut);\n                this.tooltipTimeOut = undefined;\n            }\n            if (this.popoverConfig.tooltip) {\n                this.tooltipTimeOut = window.setTimeout(() => {\n                    try {\n                        popover.dispose();\n                    }\n                    catch (error) { }\n                }, this.popoverConfig.tooltipTimeout ? this.popoverConfig.tooltipTimeout : 3000);\n            }\n            window.setTimeout(() => {\n                window.addEventListener('click', (_event) => {\n                    if (tooltipAnchor.getAttribute('data-id') === id) {\n                        try {\n                            popover.dispose();\n                        }\n                        catch (error) { }\n                    }\n                }, { once: true });\n            });\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport class ODSChartsThemeObserver {\n    constructor(echart, redraw) {\n        this.echart = echart;\n        this.redraw = redraw;\n    }\n    static addThemeObserver(echart, redraw) {\n        return new ODSChartsThemeObserver(echart, redraw);\n    }\n    get divElement() {\n        let div;\n        try {\n            div = this.echart.getDom();\n        }\n        catch (error) { }\n        if (!div) {\n            this.removeListener();\n        }\n        return div;\n    }\n    addThemeObserver() {\n        this.removeListener();\n        let div = this.divElement;\n        if (div && MutationObserver) {\n            div = div.closest('[data-bs-theme]') || undefined;\n            if (div) {\n                this.observer = new MutationObserver(this.observeAttributeChange.bind(this));\n                this.observer.observe(div, { attributes: true, childList: false, subtree: false });\n            }\n        }\n        return div;\n    }\n    removeListener() {\n        try {\n            if (this.observer) {\n                this.observer.disconnect();\n            }\n        }\n        catch (error) {\n        }\n        finally {\n            this.observer = undefined;\n        }\n    }\n    observeAttributeChange(mutations, _observer) {\n        try {\n            if (this.divElement) {\n                if (mutations.find((mutation) => mutation.type === 'attributes' && mutation.attributeName === 'data-bs-theme')) {\n                    this.redraw();\n                }\n            }\n        }\n        catch (error) {\n            this.removeListener();\n        }\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { isVarArray, isVarObject } from './merge-objects';\nexport function lookForPaths(obj, condition, searchedTypes = ['string'], currentPath = '', foundPaths = []) {\n    if (searchedTypes.includes(typeof obj) && condition(obj)) {\n        foundPaths.push(currentPath);\n    }\n    else {\n        if (isVarArray(obj)) {\n            for (let index = 0; index < obj.length; index++) {\n                lookForPaths(obj[index], condition, searchedTypes, currentPath + '[' + index + ']', foundPaths);\n            }\n        }\n        else if (isVarObject(obj)) {\n            for (const key of Object.keys(obj)) {\n                lookForPaths(obj[key], condition, searchedTypes, ('' === currentPath ? '' : currentPath + '.') + key, foundPaths);\n            }\n        }\n    }\n    return foundPaths;\n}\nfunction recursiveCloneDeep(obj, pathsToCopy, currentPath = '') {\n    if (pathsToCopy.find((onePathToCopy) => onePathToCopy.startsWith(currentPath))) {\n        if (isVarObject(obj)) {\n            const result = {};\n            for (const key of Object.keys(obj)) {\n                result[key] = recursiveCloneDeep(obj[key], pathsToCopy, ('' === currentPath ? '' : currentPath + '.') + key);\n            }\n            return result;\n        }\n        else if (isVarArray(obj)) {\n            const result = [];\n            for (let index = 0; index < obj.length; index++) {\n                result[index] = recursiveCloneDeep(obj[index], pathsToCopy, currentPath + '[' + index + ']');\n            }\n            return result;\n        }\n    }\n    return obj;\n}\nexport function conditionalCloneDeepObject(obj, condition, searchedTypes = ['string']) {\n    const pathsToCopy = lookForPaths(obj, condition, searchedTypes);\n    if (0 < pathsToCopy.length) {\n        return recursiveCloneDeep(obj, pathsToCopy);\n    }\n    return obj;\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const ODS_CHARTS_CONTEXT = `\r\n.ods-charts-context, [data-bs-theme=light] .ods-charts-context, .ods-charts-context[data-bs-theme=light], [data-bs-theme] .ods-charts-context[data-bs-theme=light] {\r\n  --ouds-charts-color-border: #ffffff;\r\n  --ouds-charts-color-border-contrast: #ffffff;\r\n  --ouds-charts-color-categorical-tier-1: #5b2f98;\r\n  --ouds-charts-color-categorical-tier-10: #009bf0;\r\n  --ouds-charts-color-categorical-tier-2: #3ba06e;\r\n  --ouds-charts-color-categorical-tier-3: #b20077;\r\n  --ouds-charts-color-categorical-tier-4: #a38200;\r\n  --ouds-charts-color-categorical-tier-5: #007abd;\r\n  --ouds-charts-color-categorical-tier-6: #8d60cd;\r\n  --ouds-charts-color-categorical-tier-7: #2e7b54;\r\n  --ouds-charts-color-categorical-tier-8: #e50099;\r\n  --ouds-charts-color-categorical-tier-9: #665100;\r\n  --ouds-charts-color-functional-info: #009bf0;\r\n  --ouds-charts-color-functional-negative: #db0002;\r\n  --ouds-charts-color-functional-positive: #17a02f;\r\n  --ouds-charts-color-functional-warning: #a38200;\r\n  --ouds-charts-color-gridlines: #cccccc;\r\n  --ouds-charts-color-highlight: #f15e00;\r\n  --ouds-charts-color-neutral: #8f8f8f;\r\n  --ouds-charts-color-sequential-accent-1-tint-100: #d2ecf9;\r\n  --ouds-charts-color-sequential-accent-1-tint-200: #a5daf3;\r\n  --ouds-charts-color-sequential-accent-1-tint-300: #79c7ec;\r\n  --ouds-charts-color-sequential-accent-1-tint-400: #4ab4e6;\r\n  --ouds-charts-color-sequential-accent-1-tint-500: #1fa2e0;\r\n  --ouds-charts-color-sequential-accent-1-tint-600: #1982b3;\r\n  --ouds-charts-color-sequential-accent-1-tint-700: #136186;\r\n  --ouds-charts-color-sequential-accent-1-tint-800: #0c415a;\r\n  --ouds-charts-color-sequential-accent-1-tint-900: #06202d;\r\n  --ouds-charts-color-sequential-accent-2-tint-100: #e5f5ed;\r\n  --ouds-charts-color-sequential-accent-2-tint-200: #c0e8d4;\r\n  --ouds-charts-color-sequential-accent-2-tint-300: #9bdaba;\r\n  --ouds-charts-color-sequential-accent-2-tint-400: #75cca1;\r\n  --ouds-charts-color-sequential-accent-2-tint-500: #50be87;\r\n  --ouds-charts-color-sequential-accent-2-tint-600: #3ba06e;\r\n  --ouds-charts-color-sequential-accent-2-tint-700: #2e7b54;\r\n  --ouds-charts-color-sequential-accent-2-tint-800: #20563b;\r\n  --ouds-charts-color-sequential-accent-2-tint-900: #123021;\r\n  --ouds-charts-color-sequential-accent-3-tint-100: #ffe5f6;\r\n  --ouds-charts-color-sequential-accent-3-tint-200: #ffb4e6;\r\n  --ouds-charts-color-sequential-accent-3-tint-300: #ff80d4;\r\n  --ouds-charts-color-sequential-accent-3-tint-400: #ff4dc3;\r\n  --ouds-charts-color-sequential-accent-3-tint-500: #ff1ab2;\r\n  --ouds-charts-color-sequential-accent-3-tint-600: #e50099;\r\n  --ouds-charts-color-sequential-accent-3-tint-700: #b20077;\r\n  --ouds-charts-color-sequential-accent-3-tint-800: #800055;\r\n  --ouds-charts-color-sequential-accent-3-tint-900: #4d0033;\r\n  --ouds-charts-color-sequential-accent-4-tint-100: #f1ecf9;\r\n  --ouds-charts-color-sequential-accent-4-tint-200: #e0d4f2;\r\n  --ouds-charts-color-sequential-accent-4-tint-300: #c5ade6;\r\n  --ouds-charts-color-sequential-accent-4-tint-400: #a885d8;\r\n  --ouds-charts-color-sequential-accent-4-tint-500: #8d60cd;\r\n  --ouds-charts-color-sequential-accent-4-tint-600: #5b2f98;\r\n  --ouds-charts-color-sequential-accent-4-tint-700: #432371;\r\n  --ouds-charts-color-sequential-accent-4-tint-800: #2c174a;\r\n  --ouds-charts-color-sequential-accent-4-tint-900: #150b23;\r\n  --ouds-charts-color-sequential-accent-5-tint-100: #fff0cc;\r\n  --ouds-charts-color-sequential-accent-5-tint-200: #ffe199;\r\n  --ouds-charts-color-sequential-accent-5-tint-300: #ffd266;\r\n  --ouds-charts-color-sequential-accent-5-tint-400: #ffc333;\r\n  --ouds-charts-color-sequential-accent-5-tint-500: #ffb400;\r\n  --ouds-charts-color-sequential-accent-5-tint-600: #cc9000;\r\n  --ouds-charts-color-sequential-accent-5-tint-700: #996c00;\r\n  --ouds-charts-color-sequential-accent-5-tint-800: #664800;\r\n  --ouds-charts-color-sequential-accent-5-tint-900: #332400;\r\n}\r\n\r\n[data-bs-theme=dark] .ods-charts-context, .ods-charts-context[data-bs-theme=dark], [data-bs-theme] .ods-charts-context[data-bs-theme=dark] {\r\n  --ouds-charts-color-border: #141414;\r\n  --ouds-charts-color-border-contrast: #000000;\r\n  --ouds-charts-color-categorical-tier-1: #a885d8;\r\n  --ouds-charts-color-categorical-tier-10: #1fa2e0;\r\n  --ouds-charts-color-categorical-tier-2: #50be87;\r\n  --ouds-charts-color-categorical-tier-3: #ff80d4;\r\n  --ouds-charts-color-categorical-tier-4: #d6aa00;\r\n  --ouds-charts-color-categorical-tier-5: #79c7ec;\r\n  --ouds-charts-color-categorical-tier-6: #8d60cd;\r\n  --ouds-charts-color-categorical-tier-7: #9bdaba;\r\n  --ouds-charts-color-categorical-tier-8: #ff4dc3;\r\n  --ouds-charts-color-categorical-tier-9: #ffd266;\r\n  --ouds-charts-color-functional-info: #26b2ff;\r\n  --ouds-charts-color-functional-negative: #ff4d4e;\r\n  --ouds-charts-color-functional-positive: #1ecd3c;\r\n  --ouds-charts-color-functional-warning: #ffd000;\r\n  --ouds-charts-color-gridlines: #666666;\r\n  --ouds-charts-color-highlight: #ff7900;\r\n  --ouds-charts-color-neutral: #858585;\r\n  --ouds-charts-color-sequential-accent-1-tint-100: #06202d;\r\n  --ouds-charts-color-sequential-accent-1-tint-200: #0c415a;\r\n  --ouds-charts-color-sequential-accent-1-tint-300: #136186;\r\n  --ouds-charts-color-sequential-accent-1-tint-400: #1982b3;\r\n  --ouds-charts-color-sequential-accent-1-tint-500: #1fa2e0;\r\n  --ouds-charts-color-sequential-accent-1-tint-600: #4ab4e6;\r\n  --ouds-charts-color-sequential-accent-1-tint-700: #79c7ec;\r\n  --ouds-charts-color-sequential-accent-1-tint-800: #a5daf3;\r\n  --ouds-charts-color-sequential-accent-1-tint-900: #d2ecf9;\r\n  --ouds-charts-color-sequential-accent-2-tint-100: #123021;\r\n  --ouds-charts-color-sequential-accent-2-tint-200: #20563b;\r\n  --ouds-charts-color-sequential-accent-2-tint-300: #2e7b54;\r\n  --ouds-charts-color-sequential-accent-2-tint-400: #3ba06e;\r\n  --ouds-charts-color-sequential-accent-2-tint-500: #50be87;\r\n  --ouds-charts-color-sequential-accent-2-tint-600: #75cca1;\r\n  --ouds-charts-color-sequential-accent-2-tint-700: #9bdaba;\r\n  --ouds-charts-color-sequential-accent-2-tint-800: #c0e8d4;\r\n  --ouds-charts-color-sequential-accent-2-tint-900: #e5f5ed;\r\n  --ouds-charts-color-sequential-accent-3-tint-100: #4d0033;\r\n  --ouds-charts-color-sequential-accent-3-tint-200: #800055;\r\n  --ouds-charts-color-sequential-accent-3-tint-300: #b20077;\r\n  --ouds-charts-color-sequential-accent-3-tint-400: #e50099;\r\n  --ouds-charts-color-sequential-accent-3-tint-500: #ff1ab2;\r\n  --ouds-charts-color-sequential-accent-3-tint-600: #ff4dc3;\r\n  --ouds-charts-color-sequential-accent-3-tint-700: #ff80d4;\r\n  --ouds-charts-color-sequential-accent-3-tint-800: #ffb4e6;\r\n  --ouds-charts-color-sequential-accent-3-tint-900: #ffe5f6;\r\n  --ouds-charts-color-sequential-accent-4-tint-100: #150b23;\r\n  --ouds-charts-color-sequential-accent-4-tint-200: #2c174a;\r\n  --ouds-charts-color-sequential-accent-4-tint-300: #432371;\r\n  --ouds-charts-color-sequential-accent-4-tint-400: #5b2f98;\r\n  --ouds-charts-color-sequential-accent-4-tint-500: #8d60cd;\r\n  --ouds-charts-color-sequential-accent-4-tint-600: #a885d8;\r\n  --ouds-charts-color-sequential-accent-4-tint-700: #c5ade6;\r\n  --ouds-charts-color-sequential-accent-4-tint-800: #e0d4f2;\r\n  --ouds-charts-color-sequential-accent-4-tint-900: #f1ecf9;\r\n  --ouds-charts-color-sequential-accent-5-tint-100: #332400;\r\n  --ouds-charts-color-sequential-accent-5-tint-200: #664800;\r\n  --ouds-charts-color-sequential-accent-5-tint-300: #996c00;\r\n  --ouds-charts-color-sequential-accent-5-tint-400: #cc9000;\r\n  --ouds-charts-color-sequential-accent-5-tint-500: #ffb400;\r\n  --ouds-charts-color-sequential-accent-5-tint-600: #ffc333;\r\n  --ouds-charts-color-sequential-accent-5-tint-700: #ffd266;\r\n  --ouds-charts-color-sequential-accent-5-tint-800: #ffe199;\r\n  --ouds-charts-color-sequential-accent-5-tint-900: #fff0cc;\r\n}`;\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { ODS_CHARTS_CONTEXT } from '../colors/_ouds-colors-css-variables';\nimport { DEFAULT_ARROW_SIZE } from '../popover/ods-chart-popover-definitions';\n/**\n * Added for None or Boosted 4 themes\n */\nconst EXISTING_IN_BOOSTED5_VARIABLES = `\r\n.ods-charts-context, [data-bs-theme=\"light\"] .ods-charts-context, .ods-charts-context[data-bs-theme=\"light\"], [data-bs-theme] .ods-charts-context[data-bs-theme=\"light\"]  {\r\n  color-scheme: light;\r\n  --bs-blue: #4170d8;\r\n  --bs-indigo: #a885d8;\r\n  --bs-purple: #a885d8;\r\n  --bs-pink: #ffb4e6;\r\n  --bs-red: #cd3c14;\r\n  --bs-orange: #f16e00;\r\n  --bs-yellow: #fc0;\r\n  --bs-green: #228722;\r\n  --bs-teal: #50be87;\r\n  --bs-cyan: #4bb4e6;\r\n  --bs-black: #000;\r\n  --bs-white: #fff;\r\n  --bs-gray: #999;\r\n  --bs-gray-dark: #595959;\r\n  --bs-gray-100: #fafafa;\r\n  --bs-gray-200: #f6f6f6;\r\n  --bs-gray-300: #eee;\r\n  --bs-gray-400: #ddd;\r\n  --bs-gray-500: #ccc;\r\n  --bs-gray-600: #999;\r\n  --bs-gray-700: #666;\r\n  --bs-gray-800: #595959;\r\n  --bs-gray-900: #333;\r\n  --bs-gray-950: #141414;\r\n  --bs-body-color: #000;\r\n  --bs-body-color-rgb: 0, 0, 0;\r\n  --bs-body-bg: #fff;\r\n  --bs-body-bg-rgb: 255, 255, 255;\r\n  --bs-link-color: #000;\r\n  --bs-border-width: 0.125rem;\r\n  --bs-border-color: #000;\r\n  --bs-border-color-subtle: #ccc;\r\n\r\n  --bs-secondary-color: #666;\r\n  --bs-secondary-bg: #eee;\r\n  --bs-primary: #f16e00;\r\n  --bs-secondary: #000;\r\n  --bs-success: #228722;\r\n  --bs-info: #4170d8;\r\n  --bs-warning: #fc0;\r\n  --bs-danger: #cd3c14;\r\n  --bs-light: #ccc;\r\n  --bs-dark: #000;\r\n\r\n  --bs-warning-rgb: 255, 204, 0;\r\n  --bs-tertiary-color-rgb: 204, 204, 204;\r\n  --bs-tertiary-bg: #fafafa;\r\n}\r\n\r\n[data-bs-theme=\"dark\"] .ods-charts-context, .ods-charts-context[data-bs-theme=\"dark\"], [data-bs-theme] .ods-charts-context[data-bs-theme=\"dark\"] {\r\n  color-scheme: dark;\r\n  --bs-body-color: #fff;\r\n  --bs-body-color-rgb: 255, 255, 255;\r\n  --bs-body-bg: #141414;\r\n  --bs-body-bg-rgb: 20, 20, 20;\r\n  --bs-link-color: #fff;\r\n  --bs-border-color: #fff;\r\n  --bs-border-color-subtle: #666;\r\n\r\n  --bs-secondary-color: #999;\r\n  --bs-secondary-bg: #333;\r\n  --bs-primary: #ff7900;\r\n  --bs-secondary: #fff;\r\n  --bs-success: #6c6;\r\n  --bs-info: #69f;\r\n  --bs-warning: #fc0;\r\n  --bs-danger: #f66;\r\n  --bs-light: #ccc;\r\n  --bs-dark: #000;\r\n\r\n  --bs-warning-rgb: 255, 204, 0;\r\n  --bs-tertiary-color-rgb: 102, 102, 102;\r\n  --bs-tertiary-bg: #000;\r\n}\r\n\r\n\r\n[data-bs-theme] .ods-charts-context, .ods-charts-context[data-bs-theme] {\r\n    color: var(--bs-body-color);\r\n    background-color: var(--bs-body-bg);\r\n}\r\n\r\n\r\n[data-bs-theme] .ods-charts-context a, .ods-charts-context[data-bs-theme] a {\r\n    color: var(--bs-link-color);\r\n}\r\n    \r\n.ods-charts-context {\r\n  --bs-body-font-weight: 400;\r\n}\r\n`;\n/**\n * Added for None theme\n */\nconst NONE_THEME_SPECIFIC_VARIABLES = `\r\n.ods-charts-context {\r\n  --bs-font-sans-serif:  \"Helvetica Neue\", Helvetica, \"Noto Sans\", \"Liberation Sans\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n}\r\n`;\n/**\n * Added for Boosted 4 theme\n */\nconst BOOSTED4_THEME_SPECIFIC_VARIABLES = `\r\n.ods-charts-context {\r\n  --bs-font-sans-serif:  var(--font-family-sans-serif, \"Helvetica Neue\");\r\n}\r\n\r\n.ods-charts-context .popover {\r\n  color: var(--bs-body-color);\r\n  background-color: var(--bs-body-bg);\r\n  border: 2px solid var(--bs-border-color-subtle);\r\n}\r\n\r\n.ods-charts-context .popover .popover-header {\r\n  color: var(--bs-body-color);\r\n  background-color: var(--bs-body-bg);\r\n  padding-left: var(--ods-popover-header-padding-x, 9px);\r\n  padding-right: var(--ods-popover-header-padding-x, 9px);\r\n  padding-top: var(--ods-popover-header-padding-top, 5px);\r\n  padding-bottom: var(--ods-popover-header-padding-bottom, 7px);\r\n  font-size: var(--ods-popover-header-font-size, 14px);\r\n  line-height: var(--ods-popover-header-line-height, 1.11);\r\n  border:none;\r\n}\r\n\r\n.ods-charts-context .popover .popover-body {\r\n  color: var(--bs-body-color);\r\n  padding-left: var(--ods-popover-body-padding-x, 9px);\r\n  padding-right: var(--ods-popover-body-padding-x, 9px);\r\n  padding-top: var(--ods-popover-body-padding-top, 0);\r\n  padding-bottom: var(--ods-popover-body-padding-bottom, 7px);\r\n}\r\n\r\n.ods-charts-context .popover .arrow {\r\n  display: var(--ods-poppover-arrow-display, ${0 == DEFAULT_ARROW_SIZE ? 'none' : 'inherit'});\r\n}\r\n\r\n.ods-charts-context .popover-header::before {\r\n    visibility: hidden;\r\n}\r\n\r\n.ods-charts-context .bs-popover-auto[x-placement^=bottom]>.arrow::after, \r\n.ods-charts-context .bs-popover-bottom>.arrow::after {\r\n    border-bottom-color: var(--bs-body-bg);\r\n}\r\n\r\n.ods-charts-context .bs-popover-auto[x-placement^=top]>.arrow::after, \r\n.ods-charts-context .bs-popover-top>.arrow::after {\r\n    border-top-color: var(--bs-body-bg);\r\n}\r\n\r\n.ods-charts-context .bs-popover-auto[x-placement^=left]>.arrow::after, \r\n.ods-charts-context .bs-popover-left >.arrow::after {\r\n    border-left-color: var(--bs-body-bg);\r\n}\r\n    \r\n.ods-charts-context .bs-popover-auto[x-placement^=right]>.arrow::after,\r\n.ods-charts-context .bs-popover-right >.arrow::after {\r\n    border-right-color: var(--bs-body-bg);\r\n}\r\n`;\n/**\n * Added for Boosted 5 theme\n */\nexport const BOOSTED5_THEME_SPECIFIC_VARIABLES = `\r\n.ods-charts-context .popover {\r\n  --bs-popover-header-padding-y: var(--ods-popover-header-padding-y, initial);\r\n  --bs-popover-header-padding-top: var(--ods-popover-header-padding-top, 5px);\r\n  --bs-popover-header-padding-x: var(--ods-popover-header-padding-x, 9px);\r\n  --bs-popover-header-padding-bottom: var(--ods-popover-header-padding-bottom, 7px);\r\n  --bs-popover-body-padding-x: var(--ods-popover-body-padding-x, 9px);\r\n  --bs-popover-body-padding-y: var(--ods-popover-body-padding-y, initial);\r\n  --bs-popover-body-padding-top: var(--ods-popover-body-padding-top, 0);\r\n  --bs-popover-body-padding-bottom: var(--ods-popover-body-padding-bottom, 7px);\r\n\r\n  --bs-popover-header-font-size: var(--ods-popover-header-font-size, 14px);\r\n  --bs-popover-header-line-height: var(--ods-popover-header-line-height, 1.11);\r\n}\r\n.ods-charts-context .popover .popover-arrow {\r\n  display: var(--ods-poppover-arrow-display, ${0 == DEFAULT_ARROW_SIZE ? 'none' : 'inherit'});\r\n}  \r\n`;\n/**\n * Added for all themes\n */\nconst ALL_THEMES_SPECIFIC_VARIABLES = `\r\n.ods-charts-context, [data-bs-theme=\"light\"] .ods-charts-context, .ods-charts-context[data-bs-theme=\"light\"], [data-bs-theme] .ods-charts-context[data-bs-theme=\"light\"]  {\r\n  color-scheme: light;\r\n\r\n  --ods-yellow-100: #fff6b6;\r\n  --ods-yellow-200: #ffe45b;\r\n  --ods-yellow-300: #ffd200;\r\n  --ods-yellow-400: #ffb400;\r\n  --ods-yellow-500: #b98f11;\r\n  --ods-yellow-600: #9d6e06;\r\n\r\n  --ods-yellow: var(--ods-yellow-300);\r\n\r\n  --ods-blue-100: #b5e8f7;\r\n  --ods-blue-200: #80ceef;\r\n  --ods-blue-300: #4bb4e6;\r\n  --ods-blue-400: #3e9dd6;\r\n  --ods-blue-500: #237ecA;\r\n  --ods-blue-600: #085ebd;\r\n\r\n  --ods-green-100: #B8EBD6;\r\n  --ods-green-200: #84D5AF;\r\n  --ods-green-300: #50BE87;\r\n  --ods-green-400: #27A971;\r\n  --ods-green-500: #198C51;\r\n  --ods-green-600: #0A6E31;\r\n\r\n  --ods-pink-100: #FFE8F7;\r\n  --ods-pink-200: #FFCEEF;\r\n  --ods-pink-300: #FFB4E6;\r\n  --ods-pink-400: #FF8AD4;\r\n  --ods-pink-500: #D573BB;\r\n  --ods-pink-600: #BC4D9A;\r\n\r\n  --ods-purple-100: #D9C2F0;\r\n  --ods-purple-200: #C1A4E4;\r\n  --ods-purple-300: #A885D8;\r\n  --ods-purple-400: #9373BD;\r\n  --ods-purple-500: #6E4AA7;\r\n  --ods-purple-600: #492191;\r\n\r\n  --ods-yellow-1: var(--ods-yellow-600);\r\n  --ods-yellow-2: var(--ods-yellow-500);\r\n  --ods-yellow-3: var(--ods-yellow-400);\r\n  --ods-yellow-4: var(--ods-yellow-300);\r\n  --ods-yellow-5: var(--ods-yellow-200);\r\n  --ods-yellow-6: var(--ods-yellow-100);\r\n\r\n  --ods-blue-1: var(--ods-blue-600);\r\n  --ods-blue-2: var(--ods-blue-500);\r\n  --ods-blue-3: var(--ods-blue-400);\r\n  --ods-blue-4: var(--ods-blue-300);\r\n  --ods-blue-5: var(--ods-blue-200);\r\n  --ods-blue-6: var(--ods-blue-100);\r\n\r\n  --ods-green-1: var(--ods-green-600);\r\n  --ods-green-2: var(--ods-green-500);\r\n  --ods-green-3: var(--ods-green-400);\r\n  --ods-green-4: var(--ods-green-300);\r\n  --ods-green-5: var(--ods-green-200);\r\n  --ods-green-6: var(--ods-green-100);\r\n\r\n  --ods-pink-1: var(--ods-pink-600);\r\n  --ods-pink-2: var(--ods-pink-500);\r\n  --ods-pink-3: var(--ods-pink-400);\r\n  --ods-pink-4: var(--ods-pink-300);\r\n  --ods-pink-5: var(--ods-pink-200);\r\n  --ods-pink-6: var(--ods-pink-100);\r\n\r\n  --ods-purple-1: var(--ods-purple-600);\r\n  --ods-purple-2: var(--ods-purple-500);\r\n  --ods-purple-3: var(--ods-purple-400);\r\n  --ods-purple-4: var(--ods-purple-300);\r\n  --ods-purple-5: var(--ods-purple-200);\r\n  --ods-purple-6: var(--ods-purple-100);\r\n\r\n  --ods-categorical-1: var(--ods-blue-600);\r\n  --ods-categorical-2: var(--ods-green-400);\r\n  --ods-categorical-3: var(--ods-pink-600);\r\n  --ods-categorical-4: var(--ods-purple-400);\r\n  --ods-categorical-5: var(--ods-yellow-600);\r\n  --ods-categorical-6: var(--bs-gray-900);\r\n  --ods-categorical-7: var(--ods-blue-400);\r\n  --ods-categorical-8: var(--ods-green-600);\r\n  --ods-categorical-9: var(--ods-pink-500);\r\n  --ods-categorical-10: var(--ods-purple-600);\r\n  --ods-categorical-11: var(--ods-yellow-500);\r\n  --ods-categorical-12: var(--bs-gray-700);\r\n\r\n  --ods-default-1: var(--ods-blue-600);\r\n  --ods-default-2: var(--ods-green-600);\r\n  --ods-default-3: var(--ods-pink-600);\r\n  --ods-default-4: var(--ods-purple-600);\r\n  --ods-default-5: var(--ods-yellow-500);\r\n  --ods-default-6: var(--bs-gray-700);\r\n  --ods-default-7: var(--ods-blue-400);\r\n  --ods-default-8: var(--ods-green-400);\r\n  --ods-default-9: var(--ods-pink-500);\r\n  --ods-default-10: var(--ods-purple-400);\r\n  --ods-default-11: var(--ods-yellow-600);\r\n  --ods-default-12: var(--bs-gray-900);\r\n\r\n  --ods-cyan-light: var(--ods-blue-100);\r\n  --ods-teal-light: var(--ods-green-100);\r\n  --ods-pink-light: var(--ods-pink-100);\r\n  --ods-indigo-light: var(--ods-purple-100);\r\n  --ods-yellow-light: var(--ods-yellow-100);\r\n\r\n  --ods-cyan-dark: var(--ods-blue-600);\r\n  --ods-teal-dark: var(--ods-green-600);\r\n  --ods-pink-dark: var(--ods-pink-400);\r\n  --ods-indigo-dark: var(--ods-purple-600);\r\n  --ods-yellow-dark: var(--ods-yellow-400);\r\n\r\n  --ods-functional-1: var(--bs-primary);\r\n  --ods-functional-2: var(--bs-gray-300);\r\n  --ods-functional-3: var(--bs-success);\r\n  --ods-functional-4: var(--bs-warning);\r\n  --ods-functional-5: var(--bs-danger);\r\n  --ods-functional-6: var(--bs-info);\r\n\r\n  --ods-dial-gauge-pointer: image://data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%22147%2065.2635%2023%20104.4226%22%20width%3D%2223px%22%20height%3D%22107.735px%22%3E%0A%20%20%3Cpath%20d%3D%22M%20123.034%2079.908%20L%20179.603%20150.618%20L%20193.745%20136.476%20L%20123.034%2079.908%20Z%22%20fill%3D%22%23000%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20158.389px%20115.263px%3B%22%20transform%3D%22matrix(0.70710701%2C%200.70710701%2C%20-0.70710701%2C%200.70710701%2C%200.00000871%2C%20-0.0000095)%22%2F%3E%0A%20%20%3Ccircle%20cx%3D%22131.469%22%20cy%3D%2290.553%22%20r%3D%2210%22%20fill%3D%22%23000%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20131.469px%2090.553px%3B%22%20transform%3D%22matrix(-0.70710701%2C%20-0.70710701%2C%200.70710701%2C%20-0.70710701%2C%2026.91516753%2C%2064.99089065)%22%2F%3E%0A%3C%2Fsvg%3E\r\n}\r\n\r\n[data-bs-theme=\"dark\"] .ods-charts-context, .ods-charts-context[data-bs-theme=\"dark\"], [data-bs-theme] .ods-charts-context[data-bs-theme=\"dark\"] {\r\n  color-scheme: dark;\r\n\r\n  --ods-yellow-1: var(--ods-yellow-100);\r\n  --ods-yellow-2: var(--ods-yellow-200);\r\n  --ods-yellow-3: var(--ods-yellow-300);\r\n  --ods-yellow-4: var(--ods-yellow-400);\r\n  --ods-yellow-5: var(--ods-yellow-500);\r\n  --ods-yellow-6: var(--ods-yellow-600);\r\n\r\n  --ods-blue-1: var(--ods-blue-100);\r\n  --ods-blue-2: var(--ods-blue-200);\r\n  --ods-blue-3: var(--ods-blue-300);\r\n  --ods-blue-4: var(--ods-blue-400);\r\n  --ods-blue-5: var(--ods-blue-500);\r\n  --ods-blue-6: var(--ods-blue-600);\r\n\r\n  --ods-green-1: var(--ods-green-100);\r\n  --ods-green-2: var(--ods-green-200);\r\n  --ods-green-3: var(--ods-green-300);\r\n  --ods-green-4: var(--ods-green-400);\r\n  --ods-green-5: var(--ods-green-500);\r\n  --ods-green-6: var(--ods-green-600);\r\n\r\n  --ods-pink-1: var(--ods-pink-100);\r\n  --ods-pink-2: var(--ods-pink-200);\r\n  --ods-pink-3: var(--ods-pink-300);\r\n  --ods-pink-4: var(--ods-pink-400);\r\n  --ods-pink-5: var(--ods-pink-500);\r\n  --ods-pink-6: var(--ods-pink-600);\r\n\r\n  --ods-purple-1: var(--ods-purple-100);\r\n  --ods-purple-2: var(--ods-purple-200);\r\n  --ods-purple-3: var(--ods-purple-300);\r\n  --ods-purple-4: var(--ods-purple-400);\r\n  --ods-purple-5: var(--ods-purple-500);\r\n  --ods-purple-6: var(--ods-purple-600);\r\n\r\n  --ods-categorical-1: var(--ods-blue-500);\r\n  --ods-categorical-2: var(--ods-green-300);\r\n  --ods-categorical-3: var(--ods-pink-400);\r\n  --ods-categorical-4: var(--ods-purple-300);\r\n  --ods-categorical-5: var(--ods-yellow-400);\r\n  --ods-categorical-6: var(--bs-gray-600);\r\n  --ods-categorical-7: var(--ods-blue-300);\r\n  --ods-categorical-8: var(--ods-green-500);\r\n  --ods-categorical-9: var(--ods-pink-300);\r\n  --ods-categorical-10: var(--ods-purple-500);\r\n  --ods-categorical-11: var(--ods-yellow-300);\r\n  --ods-categorical-12: var(--bs-gray-500);\r\n\r\n  --ods-default-1: var(--ods-blue-500);\r\n  --ods-default-2: var(--ods-green-500);\r\n  --ods-default-3: var(--ods-pink-400);\r\n  --ods-default-4: var(--ods-purple-500);\r\n  --ods-default-5: var(--ods-yellow-300);\r\n  --ods-default-6: var(--bs-gray-500);\r\n  --ods-default-7: var(--ods-blue-300);\r\n  --ods-default-8: var(--ods-green-300);\r\n  --ods-default-9: var(--ods-pink-300);\r\n  --ods-default-10: var(--ods-purple-300);\r\n  --ods-default-11: var(--ods-yellow-400);\r\n  --ods-default-12: var(--bs-gray-600);\r\n\r\n  --ods-cyan-light: var(--ods-blue-600);\r\n  --ods-teal-light: var(--ods-green-600);\r\n  --ods-pink-light: var(--ods-pink-400);\r\n  --ods-indigo-light: var(--ods-purple-600);\r\n  --ods-yellow-light: var(--ods-yellow-400);\r\n\r\n  --ods-cyan-dark: var(--ods-blue-100);\r\n  --ods-teal-dark: var(--ods-green-100);\r\n  --ods-pink-dark: var(--ods-pink-100);\r\n  --ods-indigo-dark: var(--ods-purple-100);\r\n  --ods-yellow-dark: var(--ods-yellow-100);\r\n\r\n  --ods-functional-1: var(--bs-primary);\r\n  --ods-functional-2: var(--bs-gray-700);\r\n  --ods-functional-3: var(--bs-success);\r\n  --ods-functional-4: var(--bs-warning);\r\n  --ods-functional-5: var(--bs-danger);\r\n  --ods-functional-6: var(--bs-info);\r\n\r\n  --ods-dial-gauge-pointer: image://data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%22147%2065.2635%2023%20104.4226%22%20width%3D%2223px%22%20height%3D%22107.735px%22%3E%0A%20%20%3Cpath%20d%3D%22M%20123.034%2079.908%20L%20179.603%20150.618%20L%20193.745%20136.476%20L%20123.034%2079.908%20Z%22%20fill%3D%22%23fff%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20158.389px%20115.263px%3B%22%20transform%3D%22matrix(0.70710701%2C%200.70710701%2C%20-0.70710701%2C%200.70710701%2C%200.00000871%2C%20-0.0000095)%22%2F%3E%0A%20%20%3Ccircle%20cx%3D%22131.469%22%20cy%3D%2290.553%22%20r%3D%2210%22%20fill%3D%22%23fff%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20131.469px%2090.553px%3B%22%20transform%3D%22matrix(-0.70710701%2C%20-0.70710701%2C%200.70710701%2C%20-0.70710701%2C%2026.91516753%2C%2064.99089065)%22%2F%3E%0A%3C%2Fsvg%3E\r\n\r\n}\r\n\r\n.ods-charts-context {\r\n  --ods-popover-header-padding-y: initial;\r\n  --ods-popover-header-padding-top: 5px;\r\n  --ods-popover-header-padding-x: 9px;\r\n  --ods-popover-header-padding-bottom: 7px;\r\n  --ods-popover-body-padding-x: 9px;\r\n  --ods-popover-body-padding-y: initial;\r\n  --ods-popover-body-padding-top: 0;\r\n  --ods-popover-body-padding-bottom: 7px;\r\n  \r\n  --ods-popover-header-font-size: 14px;\r\n  --ods-popover-header-line-height: 1.11;\r\n  --ods-popover-header-font-weight: 700;\r\n\r\n  --ods-popover-body-font-size: 14px;\r\n  --ods-popover-body-line-height: 1.1;\r\n  --ods-popover-body-font-weight: 400;\r\n\r\n  --ods-poppover-arrow-display: ${0 == DEFAULT_ARROW_SIZE ? 'none' : 'inherit'};\r\n}\r\n`;\nexport const ODS_CHARTS_CSS_VARIABLES = {\n    BOOSTED4: `\r\n  ${ODS_CHARTS_CONTEXT}\r\n  ${ALL_THEMES_SPECIFIC_VARIABLES}\r\n  ${EXISTING_IN_BOOSTED5_VARIABLES}\r\n  ${BOOSTED4_THEME_SPECIFIC_VARIABLES}\r\n  `,\n    BOOSTED5: `\r\n  ${ODS_CHARTS_CONTEXT}\r\n  ${ALL_THEMES_SPECIFIC_VARIABLES}\r\n  ${BOOSTED5_THEME_SPECIFIC_VARIABLES}\r\n  `,\n    CUSTOM: `\r\n  ${ODS_CHARTS_CONTEXT}\r\n  ${ALL_THEMES_SPECIFIC_VARIABLES}\r\n  ${EXISTING_IN_BOOSTED5_VARIABLES}\r\n  ${NONE_THEME_SPECIFIC_VARIABLES}\r\n  `,\n    NONE: `\r\n  ${ODS_CHARTS_CONTEXT}\r\n  ${ALL_THEMES_SPECIFIC_VARIABLES}\r\n  ${EXISTING_IN_BOOSTED5_VARIABLES}\r\n  ${NONE_THEME_SPECIFIC_VARIABLES}\r\n  `,\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { conditionalCloneDeepObject } from '../../tools/conditional-clone-deep-object';\nimport { isVarArray, isVarObject } from '../../tools/merge-objects';\nimport { ODS_CHARTS_CSS_VARIABLES } from '../css-themes/css-variables';\nimport { ODSChartsMode } from '../ods-chart-theme';\nexport class ODSChartsCssHelper {\n    constructor(cssSelector, mode, cssThemeName) {\n        this.cssSelector = cssSelector;\n        this.mode = mode;\n        this.cssThemeName = cssThemeName;\n        this._computedStyle = undefined;\n        this._computedStyleInitialized = false;\n        this.cssVarsMapping = {};\n    }\n    /**\n     * build a CSSStyleDeclaration build from a DOM element insert in the current charts holder.\n     * It is used to calculate real time values for the css var.\n     */\n    get computedStyle() {\n        if (undefined === this._computedStyle) {\n            if (this.cssSelector) {\n                let contextElement = document.querySelector(this.cssSelector + '>.ods-charts-style-' + (this.mode ? this.mode : ODSChartsMode.DEFAULT));\n                if (!contextElement) {\n                    const domElement = (this.cssSelector ? document.querySelector(this.cssSelector) : null);\n                    if (domElement) {\n                        contextElement = document.createElement('div');\n                        if (this.mode && this.mode !== ODSChartsMode.DEFAULT) {\n                            contextElement.setAttribute('data-bs-theme', this.mode);\n                        }\n                        contextElement.classList.add('ods-charts-context');\n                        contextElement.classList.add('ods-charts-style-' + (this.mode ? this.mode : ODSChartsMode.DEFAULT));\n                        domElement.append(contextElement);\n                    }\n                }\n                if (contextElement) {\n                    this._computedStyle = window.getComputedStyle(contextElement);\n                }\n            }\n            this._computedStyle = this._computedStyle ? this._computedStyle : null;\n            if (!this._computedStyle) {\n                console.error('unable to build computed style for chart css context', this.cssSelector, this.cssSelector);\n            }\n        }\n        return this._computedStyle ? this._computedStyle : undefined;\n    }\n    /**\n     * Init DOM elemnts for style. Add any specific style for the current theme.\n     * Register a computed style will be initialised.\n     * if `initComputedStyle()` return true, `removeComputedStyle()` must be called`after current treatment is done.\n     * @returns true if the style was not initialised in a parent block which means `removeComputedStyle()` must be called`after current treatment is done.\n     */\n    initComputedStyle() {\n        var _a;\n        if (!this._computedStyleInitialized) {\n            if (!document.getElementById('ods-charts-style-' + this.cssThemeName) && ODS_CHARTS_CSS_VARIABLES[this.cssThemeName]) {\n                const style = document.createElement('style');\n                style.textContent = ODS_CHARTS_CSS_VARIABLES[this.cssThemeName];\n                style.id = 'ods-charts-style-' + this.cssThemeName;\n                style.setAttribute('data-ods-charts-type', 'theme');\n                (_a = document.querySelector('head')) === null || _a === void 0 ? void 0 : _a.append(style);\n            }\n            this._computedStyleInitialized = true;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * After replacing all the css var of used objects by their value calculated in the DOM,\n     * remove the used temporay DOM element.\n     * `removeComputedStyle()` must be called if and only if the previous `initComputedStyle()` call returns true.\n     */\n    removeComputedStyle() {\n        if (this.cssSelector) {\n            const contextElement = document.querySelector(this.cssSelector + '>.ods-charts-style-' + (this.mode ? this.mode : ODSChartsMode.DEFAULT));\n            if (contextElement) {\n                contextElement.remove();\n            }\n        }\n        this._computedStyle = undefined;\n        this._computedStyleInitialized = false;\n    }\n    /**\n     * give the calculated value of a property\n     * @param name : the property name\n     * @returns the value of that property in the style computed from the DOM\n     */\n    getPropertyValue(name) {\n        const value = this.computedStyle ? this.computedStyle.getPropertyValue(name) : '';\n        return value ? value : '';\n    }\n    /**\n     * Replace a css var by it value\n     * @param css the string to be analysed\n     * @returns the updated value\n     */\n    replaceOneCssVar(css) {\n        let returnedValue = css;\n        if (this.cssSelector && 'string' === typeof returnedValue && !!this.computedStyle) {\n            try {\n                const matches = this.getCssVarMatch(returnedValue);\n                if (matches) {\n                    for (const foundVar of matches) {\n                        if (!(foundVar in this.cssVarsMapping)) {\n                            const varPartsRex = /var\\( ?([^, ]+) ?, ?([^\\)]+) ?\\)/;\n                            const varParts = foundVar.match(varPartsRex);\n                            if (varParts) {\n                                const varValue = this.getPropertyValue(varParts[1]);\n                                if (!varValue) {\n                                    console.error('missing css var ', foundVar);\n                                }\n                                this.cssVarsMapping[foundVar] = varValue ? varValue : varParts[2];\n                            }\n                            else {\n                                const varNameRex = /var\\( ?(.+) ?\\)/;\n                                const varName = foundVar.match(varNameRex);\n                                if (varName) {\n                                    const varValue = this.getPropertyValue(varName[1]);\n                                    if (varValue) {\n                                        this.cssVarsMapping[foundVar] = varValue;\n                                    }\n                                    else {\n                                        console.error('missing css var ', foundVar);\n                                        this.cssVarsMapping[foundVar] = foundVar;\n                                    }\n                                }\n                                else {\n                                    console.error('missing css var ', foundVar);\n                                    this.cssVarsMapping[foundVar] = foundVar;\n                                }\n                            }\n                        }\n                        if (foundVar in this.cssVarsMapping) {\n                            returnedValue = returnedValue.replace(foundVar, this.cssVarsMapping[foundVar]);\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n        }\n        return returnedValue;\n    }\n    /**\n     * replace any css var reference by its value\n     * @param subTreeConfig: subTree in which css var must be replaced by their value\n     * @returns the subTreeConfig updated\n     */\n    replaceRecursivelyCssVars(subTreeConfig) {\n        var newConfig = subTreeConfig;\n        for (const key of Object.keys(newConfig)) {\n            if (isVarArray(newConfig[key])) {\n                for (let index = 0; index < newConfig[key].length; index++) {\n                    if (isVarObject(newConfig[key][index]) || isVarArray(newConfig[key][index])) {\n                        newConfig[key][index] = this.replaceRecursivelyCssVars(newConfig[key][index]);\n                    }\n                    else if ('string' === typeof newConfig[key][index]) {\n                        newConfig[key][index] = this.replaceOneCssVar(newConfig[key][index]);\n                    }\n                }\n            }\n            else if (isVarObject(newConfig[key])) {\n                newConfig[key] = this.replaceRecursivelyCssVars(newConfig[key]);\n            }\n            else if ('string' === typeof newConfig[key]) {\n                newConfig[key] = this.replaceOneCssVar(newConfig[key]);\n            }\n        }\n        return newConfig;\n    }\n    /**\n     * Return matches of a css var in the given string\n     * @param value : string in whic looking for in css var\n     * @returns : the regular expresion matches\n     */\n    getCssVarMatch(value) {\n        const regex = /var\\(([^,]*),?(.*)\\)/g;\n        return value.match(regex);\n    }\n    changeThemeMode(mode) {\n        this.cssVarsMapping = {};\n        this.mode = mode;\n    }\n    /**\n     * Replace any css var reference (like `var(--bs-border-color-subtle)`) by its value.\n     * @param themeConfiguration : object containing some css var string refernce\n     * @returns : the themeCongiguration updated\n     */\n    replaceAllCssVars(themeConfiguration) {\n        let result = themeConfiguration;\n        const initStyleNotYetDone = this.initComputedStyle();\n        try {\n            if (!!this.computedStyle) {\n                result = this.replaceRecursivelyCssVars(themeConfiguration);\n            }\n        }\n        finally {\n            if (initStyleNotYetDone) {\n                this.removeComputedStyle();\n            }\n        }\n        return result;\n    }\n    /**\n     * Make a copy of any object parts that contains css var reference (like `var(--bs-border-color-subtle)`)\n     * and replace those css vars by their value.\n     * @param chartData : object containing some css var string reference\n     * @returns the new object partially clone\n     */\n    cloneAndReplaceAllCssVars(chartData) {\n        const initStyleNotYetDone = this.initComputedStyle();\n        try {\n            return this.replaceAllCssVars(conditionalCloneDeepObject(chartData, (value) => !!this.getCssVarMatch(value)));\n        }\n        finally {\n            if (initStyleNotYetDone) {\n                this.removeComputedStyle();\n            }\n        }\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_YELLOW = {\n    color: [\n        'var(--ods-yellow-1, #9D6E06)',\n        'var(--ods-yellow-2, #B98F11)',\n        'var(--ods-yellow-3, #FFB400)',\n        'var(--ods-yellow-4, #FFD200)',\n        'var(--ods-yellow-5, #FFE45B)',\n        'var(--ods-yellow-6, #FFF6B6)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_PURPLE = {\n    color: [\n        'var(--ods-purple-1, #492191)',\n        'var(--ods-purple-2, #6E4AA7)',\n        'var(--ods-purple-3, #9373BD)',\n        'var(--ods-purple-4, #A885D8)',\n        'var(--ods-purple-5, #C1A4E4)',\n        'var(--ods-purple-6, #D9C2F0)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_PINK = {\n    color: [\n        'var(--ods-pink-1, #BC4D9A)',\n        'var(--ods-pink-2, #D573BB)',\n        'var(--ods-pink-3, #FF8AD4)',\n        'var(--ods-pink-4, #FFB4E6)',\n        'var(--ods-pink-5, #FFCEEF)',\n        'var(--ods-pink-6, #FFE8F7)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_GREEN = {\n    color: [\n        'var(--ods-green-1, #0A6E31)',\n        'var(--ods-green-2, #27A971)',\n        'var(--ods-green-3, #84D5AF)',\n        'var(--ods-green-4, #198C51)',\n        'var(--ods-green-5, #50BE87)',\n        'var(--ods-green-6, #B8EBD6)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_BLUE = {\n    color: [\n        'var(--ods-blue-1, #085EBD)',\n        'var(--ods-blue-2, #237ECA)',\n        'var(--ods-blue-3, #3E9DD6)',\n        'var(--ods-blue-4, #4BB4E6)',\n        'var(--ods-blue-5, #80CEEF)',\n        'var(--ods-blue-6, #B5E8F7)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_LIGHTER_TINTS = {\n    color: [\n        'var(--ods-cyan-light, #B5E8F7)',\n        'var(--ods-teal-light, #B8EBD6)',\n        'var(--ods-pink-light, #FFE8F7)',\n        'var(--ods-indigo-light, #D9C2F0)',\n        'var(--ods-yellow-light, #FFF6B6)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_DARKER_TINTS = {\n    color: [\n        'var(--ods-cyan-dark, #085EBD)',\n        'var(--ods-teal-dark, #0A6E31)',\n        'var(--ods-pink-dark, #FF8AD4)',\n        'var(--ods-indigo-dark, #492191)',\n        'var(--ods-yellow-dark, #FFB400)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_SUPPORTING_COLORS = {\n    color: ['var(--bs-cyan, #4bb4e6)', 'var(--bs-teal, #50be87)', 'var(--bs-pink, #ffb4e6)', 'var(--bs-indigo, #a885d8)', 'var(--ods-yellow, #ffd200)'],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_FUNCTIONAL = {\n    color: [\n        'var(--ods-functional-1, #F16E00)',\n        'var(--ods-functional-2, #EEEEEE)',\n        'var(--ods-functional-3, #228722)',\n        'var(--ods-functional-4, #FFCC00)',\n        'var(--ods-functional-5, #CD3C14)',\n        'var(--ods-functional-6, #4170D8)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS_CATEGORICAL = {\n    color: [\n        'var(--ods-categorical-1, #085ebd)',\n        'var(--ods-categorical-2, #27a971)',\n        'var(--ods-categorical-3, #bc4d9a)',\n        'var(--ods-categorical-4, #9373bd)',\n        'var(--ods-categorical-5, #9d6e06)',\n        'var(--ods-categorical-6, #333333)',\n        'var(--ods-categorical-7, #3e9dd6)',\n        'var(--ods-categorical-8, #0a6e31)',\n        'var(--ods-categorical-9, #d573bb)',\n        'var(--ods-categorical-10, #492191)',\n        'var(--ods-categorical-11, #b98f11)',\n        'var(--ods-categorical-12, #666666)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COLORS = {\n    color: [\n        'var(--ods-default-1, #085edb)',\n        'var(--ods-default-2, #0a6e31)',\n        'var(--ods-default-3, #bc4d9a)',\n        'var(--ods-default-4, #492191)',\n        'var(--ods-default-5, #b98f11)',\n        'var(--ods-default-6, #666666)',\n        'var(--ods-default-7, #3e9dd6)',\n        'var(--ods-default-8, #27a971)',\n        'var(--ods-default-9, #d573bb)',\n        'var(--ods-default-10, #9373bd)',\n        'var(--ods-default-11, #9d6e06)',\n        'var(--ods-default-12, #333333)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_BLUE = {\n    color: [\n        'var(--ouds-charts-color-sequential-accent-1-tint-100)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-200)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-300)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-400)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-500)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-600)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-700)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-800)',\n        'var(--ouds-charts-color-sequential-accent-1-tint-900)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_CATEGORICAL = {\n    color: [\n        'var(--ouds-charts-color-categorical-tier-1)',\n        'var(--ouds-charts-color-categorical-tier-2)',\n        'var(--ouds-charts-color-categorical-tier-3)',\n        'var(--ouds-charts-color-categorical-tier-4)',\n        'var(--ouds-charts-color-categorical-tier-5)',\n        'var(--ouds-charts-color-categorical-tier-6)',\n        'var(--ouds-charts-color-categorical-tier-7)',\n        'var(--ouds-charts-color-categorical-tier-8)',\n        'var(--ouds-charts-color-categorical-tier-9)',\n        'var(--ouds-charts-color-categorical-tier-10)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_FUNCTIONAL = {\n    color: ['var(--ouds-charts-color-functional-positive)', 'var(--ouds-charts-color-functional-warning)', 'var(--ouds-charts-color-functional-negative)'],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_GREEN = {\n    color: [\n        'var(--ouds-charts-color-sequential-accent-2-tint-100)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-200)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-300)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-400)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-500)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-600)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-700)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-800)',\n        'var(--ouds-charts-color-sequential-accent-2-tint-900)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_HIGHLIGHT = {\n    color: ['var(--ouds-charts-color-highlight)', 'var(--ouds-charts-color-neutral)'],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_PINK = {\n    color: [\n        'var(--ouds-charts-color-sequential-accent-3-tint-100)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-200)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-300)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-400)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-500)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-600)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-700)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-800)',\n        'var(--ouds-charts-color-sequential-accent-3-tint-900)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_PURPLE = {\n    color: [\n        'var(--ouds-charts-color-sequential-accent-4-tint-100)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-200)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-300)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-400)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-500)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-600)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-700)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-800)',\n        'var(--ouds-charts-color-sequential-accent-4-tint-900)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_SINGLE = {\n    color: [\n        'var(--ouds-charts-color-categorical-tier-1)',\n        'var(--ouds-charts-color-categorical-tier-6)',\n        'var(--ouds-charts-color-categorical-tier-7)',\n        'var(--ouds-charts-color-categorical-tier-2)',\n        'var(--ouds-charts-color-categorical-tier-5)',\n        'var(--ouds-charts-color-categorical-tier-10)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_OUDS_COLORS_YELLOW = {\n    color: [\n        'var(--ouds-charts-color-sequential-accent-5-tint-100)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-200)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-300)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-400)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-500)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-600)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-700)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-800)',\n        'var(--ouds-charts-color-sequential-accent-5-tint-900)',\n    ],\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { COMMON_LINE_STYLE_BROKEN } from './common/ODS.line-style.broken';\nimport { COMMON_LINE_STYLE_POINTS } from './common/ODS.line-style.with-points';\nimport { COMMON_LINE_STYLE_SMOOTH } from './common/ODS.line-style.smooth';\nimport { ODS_PROJECT } from './ODS.project';\nimport { ODSChartsLegends } from './legends/ods-chart-legends';\nimport { mergeObjects } from '../tools/merge-objects';\nimport { ODSChartsResize } from './resize/ods-chart-resize';\nimport { ODSChartsCSSThemes, ODSChartsCSSThemesNames } from './css-themes/css-themes';\nimport { buildHash, getStringValue } from '../tools/hash';\nimport { cloneDeepObject } from '../tools/clone-deep-object';\nimport { ODSChartsPopover } from './popover/ods-chart-popover';\nimport { ODSChartsPopoverManagers } from './popover/ods-chart-popover-definitions';\nimport { isMainAxis } from './const/main-axis-type.const';\nimport { ODSChartsThemeObserver } from './theme-observer/ods-charts-theme-observer';\nimport { ODSChartsCssHelper } from './css-themes/css-helper';\nimport { DEFAULT_COLORS_YELLOW } from './default/ODS.colors.yellow';\nimport { DEFAULT_COLORS_PURPLE } from './default/ODS.colors.purple';\nimport { DEFAULT_COLORS_PINK } from './default/ODS.colors.pink';\nimport { DEFAULT_COLORS_GREEN } from './default/ODS.colors.green';\nimport { DEFAULT_COLORS_BLUE } from './default/ODS.colors.blue';\nimport { DEFAULT_COLORS_LIGHTER_TINTS } from './default/ODS.colors.lighter-tints';\nimport { DEFAULT_COLORS_DARKER_TINTS } from './default/ODS.colors.darker-tints';\nimport { DEFAULT_COLORS_SUPPORTING_COLORS } from './default/ODS.colors.supporting-colors';\nimport { DEFAULT_COLORS_FUNCTIONAL } from './default/ODS.colors.functional';\nimport { DEFAULT_COLORS_CATEGORICAL } from './default/ODS.colors.categorical';\nimport { DEFAULT_COLORS } from './default/ODS.colors';\nimport { DEFAULT_COMMON } from './default/ODS.common';\nimport { DEFAULT_LINES_AXIS } from './default/ODS.lines.axis';\nimport { DEFAULT_OUDS_COLORS_BLUE } from './default/OUDS.colors.blue';\nimport { DEFAULT_OUDS_COLORS_CATEGORICAL } from './default/OUDS.colors.categorical';\nimport { DEFAULT_OUDS_COLORS_FUNCTIONAL } from './default/OUDS.colors.functional';\nimport { DEFAULT_OUDS_COLORS_GREEN } from './default/OUDS.colors.green';\nimport { DEFAULT_OUDS_COLORS_HIGHLIGHT } from './default/OUDS.colors.highlight';\nimport { DEFAULT_OUDS_COLORS_PINK } from './default/OUDS.colors.pink';\nimport { DEFAULT_OUDS_COLORS_PURPLE } from './default/OUDS.colors.purple';\nimport { DEFAULT_OUDS_COLORS_SINGLE } from './default/OUDS.colors.single';\nimport { DEFAULT_OUDS_COLORS_YELLOW } from './default/OUDS.colors.yellow';\nimport { ODSChartsConfiguration } from '../ods-charts';\n// import { DEFAULT_OUDS_COMMON } from './default/OUDS.common'; // TODO: use when we can switch between ODS and OUDS\n// import { DEFAULT_OUDS_LINES_AXIS } from './default/OUDS.lines.axis';\n/**\n * ODSChartsColorsSet is used for predefined color sets.\n *\n * Default and Categorical color sets are defined so all the colors are `accessible` against white/dark background and distinguishable for most color-blind people. These sets are not accessible from a monochromacy point of view.\n *\n * If you use our `sequential` sets, please consider using one color out of two if possible for a greater contrast (for example 0-2-4).\n *\n * - {@link DEFAULT} is the default color set for up to 12 different colors, selected to favor contrasts.\n * - {@link CATEGORICAL} is a color set, build for up to 12 different colors, defined by the Orange Design System to display data visualization categories.\n * - {@link FUNCTIONAL} is the color set embedding the orange that should be used a functional gray and all the functional colors.\n * - {@link SUPPORTING_COLORS} is the color set embedding all the supporting colors. Colors don't change between light and dark mode.\n * - {@link DARKER_TINTS} is the color set embedding all the darker tints of the supporting colors in light mode (lighter in dark mode).\n * - {@link LIGHTER_TINTS} is the color set embedding all the lighter tints of the supporting colors in light mode (darker in dark mode).\n * - {@link SEQUENTIAL_BLUE} is the color set embedding all the Orange Design System blue colors.\n * - {@link SEQUENTIAL_GREEN} is the color set embedding all the Orange Design System green colors.\n * - {@link SEQUENTIAL_PINK} is the color set embedding all the Orange Design System pink colors.\n * - {@link SEQUENTIAL_PURPLE} is the color set embedding all the Orange Design System purple colors.\n * - {@link SEQUENTIAL_YELLOW} is the color set embedding all the Orange Design System yellow colors.\n * - {@link OUDS_SEQUENTIAL_BLUE} is the color set embedding all the Orange Unified Design System blue colors. It's still experimental.\n * - {@link OUDS_SEQUENTIAL_GREEN} is the color set embedding all the Orange Unified Design System green colors. It's still experimental.\n * - {@link OUDS_SEQUENTIAL_PINK} is the color set embedding all the Orange Unified Design System pink colors. It's still experimental.\n * - {@link OUDS_SEQUENTIAL_PURPLE} is the color set embedding all the Orange Unified Design System purple colors. It's still experimental.\n * - {@link OUDS_SEQUENTIAL_YELLOW} is the color set embedding all the Orange Unified Design System yellow colors. It's still experimental.\n * - {@link OUDS_CATEGORICAL} is the color set embedding all the Orange Unified Design System categorical colors. It's still experimental.\n * - {@link OUDS_FUNCTIONAL} is the color set embedding all the Orange Unified Design System functional colors. It's still experimental.\n * - {@link OUDS_HIGHLIGHT} is the color set embedding all the Orange Unified Design System highlight colors. It's still experimental.\n * - {@link OUDS_SINGLE} is the color set embedding all the Orange Unified Design System single colors. It's still experimental.\n */\nexport var ODSChartsColorsSet;\n(function (ODSChartsColorsSet) {\n    ODSChartsColorsSet[\"DEFAULT\"] = \"default\";\n    ODSChartsColorsSet[\"CATEGORICAL\"] = \"categorical\";\n    ODSChartsColorsSet[\"FUNCTIONAL\"] = \"functional\";\n    ODSChartsColorsSet[\"SUPPORTING_COLORS\"] = \"supportingColors\";\n    ODSChartsColorsSet[\"DARKER_TINTS\"] = \"darkerTints\";\n    ODSChartsColorsSet[\"LIGHTER_TINTS\"] = \"lighterTints\";\n    ODSChartsColorsSet[\"SEQUENTIAL_BLUE\"] = \"blue\";\n    ODSChartsColorsSet[\"SEQUENTIAL_GREEN\"] = \"green\";\n    ODSChartsColorsSet[\"SEQUENTIAL_PINK\"] = \"pink\";\n    ODSChartsColorsSet[\"SEQUENTIAL_PURPLE\"] = \"purple\";\n    ODSChartsColorsSet[\"SEQUENTIAL_YELLOW\"] = \"yellow\";\n    ODSChartsColorsSet[\"OUDS_SEQUENTIAL_BLUE\"] = \"oudsBlue\";\n    ODSChartsColorsSet[\"OUDS_SEQUENTIAL_GREEN\"] = \"oudsGreen\";\n    ODSChartsColorsSet[\"OUDS_SEQUENTIAL_PINK\"] = \"oudsPink\";\n    ODSChartsColorsSet[\"OUDS_SEQUENTIAL_PURPLE\"] = \"oudsPurple\";\n    ODSChartsColorsSet[\"OUDS_SEQUENTIAL_YELLOW\"] = \"oudsYellow\";\n    ODSChartsColorsSet[\"OUDS_CATEGORICAL\"] = \"oudsCategorical\";\n    ODSChartsColorsSet[\"OUDS_FUNCTIONAL\"] = \"oudsFunctional\";\n    ODSChartsColorsSet[\"OUDS_HIGHLIGHT\"] = \"oudsHighlight\";\n    ODSChartsColorsSet[\"OUDS_SINGLE\"] = \"oudsSingle\";\n})(ODSChartsColorsSet || (ODSChartsColorsSet = {}));\nexport var ODSChartsLineStyle;\n(function (ODSChartsLineStyle) {\n    ODSChartsLineStyle[\"BROKEN\"] = \"broken\";\n    ODSChartsLineStyle[\"SMOOTH\"] = \"smooth\";\n    ODSChartsLineStyle[\"BROKEN_WITH_POINTS\"] = \"withPoints\";\n})(ODSChartsLineStyle || (ODSChartsLineStyle = {}));\nexport var ODSChartsMode;\n(function (ODSChartsMode) {\n    ODSChartsMode[\"LIGHT\"] = \"light\";\n    ODSChartsMode[\"DARK\"] = \"dark\";\n    ODSChartsMode[\"DEFAULT\"] = \"default\";\n})(ODSChartsMode || (ODSChartsMode = {}));\nconst THEME = {\n    common: DEFAULT_COMMON,\n    linesAxis: DEFAULT_LINES_AXIS,\n    colors: {\n        default: DEFAULT_COLORS,\n        categorical: DEFAULT_COLORS_CATEGORICAL,\n        functional: DEFAULT_COLORS_FUNCTIONAL,\n        supportingColors: DEFAULT_COLORS_SUPPORTING_COLORS,\n        darkerTints: DEFAULT_COLORS_DARKER_TINTS,\n        lighterTints: DEFAULT_COLORS_LIGHTER_TINTS,\n        blue: DEFAULT_COLORS_BLUE,\n        green: DEFAULT_COLORS_GREEN,\n        pink: DEFAULT_COLORS_PINK,\n        purple: DEFAULT_COLORS_PURPLE,\n        yellow: DEFAULT_COLORS_YELLOW,\n        oudsBlue: DEFAULT_OUDS_COLORS_BLUE,\n        oudsGreen: DEFAULT_OUDS_COLORS_GREEN,\n        oudsPink: DEFAULT_OUDS_COLORS_PINK,\n        oudsPurple: DEFAULT_OUDS_COLORS_PURPLE,\n        oudsYellow: DEFAULT_OUDS_COLORS_YELLOW,\n        oudsCategorical: DEFAULT_OUDS_COLORS_CATEGORICAL,\n        oudsFunctional: DEFAULT_OUDS_COLORS_FUNCTIONAL,\n        oudsHighlight: DEFAULT_OUDS_COLORS_HIGHLIGHT,\n        oudsSingle: DEFAULT_OUDS_COLORS_SINGLE,\n    },\n    visualMapColors: {\n        default: { visualMapColor: DEFAULT_COLORS.color },\n        categorical: { visualMapColor: DEFAULT_COLORS_CATEGORICAL.color },\n        functional: { visualMapColor: DEFAULT_COLORS_FUNCTIONAL.color },\n        supportingColors: { visualMapColor: DEFAULT_COLORS_SUPPORTING_COLORS.color },\n        darkerTints: { visualMapColor: DEFAULT_COLORS_DARKER_TINTS.color },\n        lighterTints: { visualMapColor: DEFAULT_COLORS_LIGHTER_TINTS.color },\n        blue: { visualMapColor: DEFAULT_COLORS_BLUE.color },\n        green: { visualMapColor: DEFAULT_COLORS_GREEN.color },\n        pink: { visualMapColor: DEFAULT_COLORS_PINK.color },\n        purple: { visualMapColor: DEFAULT_COLORS_PURPLE.color },\n        yellow: { visualMapColor: DEFAULT_COLORS_YELLOW.color },\n        oudsBlue: { visualMapColor: DEFAULT_OUDS_COLORS_BLUE.color },\n        oudsGreen: { visualMapColor: DEFAULT_OUDS_COLORS_GREEN.color },\n        oudsPink: { visualMapColor: DEFAULT_OUDS_COLORS_PINK.color },\n        oudsPurple: { visualMapColor: DEFAULT_OUDS_COLORS_PURPLE.color },\n        oudsYellow: { visualMapColor: DEFAULT_OUDS_COLORS_YELLOW.color },\n        oudsCategorical: { visualMapColor: DEFAULT_OUDS_COLORS_CATEGORICAL.color },\n        oudsFunctional: { visualMapColor: DEFAULT_OUDS_COLORS_FUNCTIONAL.color },\n        oudsHighlight: { visualMapColor: DEFAULT_OUDS_COLORS_HIGHLIGHT.color },\n        oudsSingle: { visualMapColor: DEFAULT_OUDS_COLORS_SINGLE.color },\n    },\n    linesStyle: {\n        broken: COMMON_LINE_STYLE_BROKEN,\n        withPoints: COMMON_LINE_STYLE_POINTS,\n        smooth: COMMON_LINE_STYLE_SMOOTH,\n    },\n};\n/**\n * ODSChartsTheme is the object get by `ODSCharts.getThemeManager`({@link ODSChartsThemeOptions}), refer to {@link ODSChartsTheme.getThemeManager}\n *\n * This manager is used to\n * - get the ODS theme, register it, and use it\n * ```\n * // register this theme to echarts\n * echarts.registerTheme(themeManager.name , themeManager.theme);\n * // initiate the with the generated theme\n * var myChart = echarts.init(div, themeManager.name)\n * ```\n * - to build the graph options\n * ```\n * // Set the data to be displayed.\n * themeManager.setDataOptions(<dataOptions>);\n * // Register the externalization of the legend.\n * themeManager.externalizeLegends(...);\n * // Manage chart container size changed\n * themeManager.manageChartResize(...);\n * // Observe dark / light mode changes\n * themeManager.manageThemeObserver(...);\n * // Register the externalization of the tooltip/popup\n * themeManager.externalizePopover(...);\n * // Display the chart using the configured theme and data.\n * myChart.setOption(themeManager.getChartOptions());\n * ```\n *\n * See {@link ODSChartsTheme.getThemeManager} for details.\n *\n */\nexport class ODSChartsTheme {\n    constructor(name, initialTheme, options) {\n        this.name = name;\n        this.initialTheme = initialTheme;\n        this.options = options;\n        this.chartLegendManager = undefined;\n        this.chartResizeManager = undefined;\n        this.chartPopoverManager = undefined;\n        this.chartThemeObserver = undefined;\n        this.cssThemeName =\n            Object.keys(ODSChartsCSSThemes).find((oneTheme) => ODSChartsCSSThemes[oneTheme] === options.cssTheme) || ODSChartsCSSThemesNames.CUSTOM;\n        this.cssHelper = new ODSChartsCssHelper(this.options.cssSelector, this.options.mode, this.cssThemeName);\n        this.theme = this.calculateTheme();\n    }\n    /**\n     * Replace in current theme any colors specify through a css var by its hexa value.\n     * Initialised a mapping between a css var and its haxe value for the current theme and dark/light mode.\n     * @returns the updated current theme\n     */\n    calculateTheme() {\n        this.theme = this.cssHelper.replaceAllCssVars(cloneDeepObject(this.initialTheme));\n        return this.theme;\n    }\n    /**\n     * Determine the dark or light mode from the html color-scheme property\n     * @param divTheme : div used as html reference element to determine the dark/light mode\n     * @returns\n     */\n    static getDarkOrLightMode(divTheme) {\n        let mode = ODSChartsMode.DEFAULT;\n        if (divTheme) {\n            const computedStyle = window.getComputedStyle(divTheme);\n            if (computedStyle) {\n                const foundMode = computedStyle.getPropertyValue('color-scheme');\n                if ([ODSChartsMode.DARK, ODSChartsMode.LIGHT].includes(foundMode)) {\n                    mode = foundMode;\n                }\n            }\n        }\n        return mode;\n    }\n    /**\n     * Entry point of the library.\n     *\n     * Once the library integrated, via\n     * - script `<script src=\"...ods-charts.js\">`\n     * - or an `import \\* as ODSCharts from 'ods-charts'`\n     *\n     * use `ODSCharts.getThemeManager`({@link ODSChartsThemeOptions}) to get the {@link ODSChartsTheme}.\n     *\n     * It returns the generated theme manager.\n     *\n     * @param options options used to generate the theme.\n     * All the options parameters are optional\n     * - {@link ODSChartsThemeOptions.colors}: colors to be used to graph the chart.\n     * - {@link ODSChartsThemeOptions.cssTheme}: optionaly indicates a external theme to be used like boosted.\n     * - {@link ODSChartsThemeOptions.chartConfiguration}: type of chart using this theme and its configuration.\n     * - {@link ODSChartsThemeOptions.cssSelector}: selector of the DOM element where the graph will be built. It is used\n     *   - to get css variable values when using a third party theme generator base on css variable like Boosted 5.\n     *   - to determine if the graph is displayed in dark or light mode\n     * @returns the theme manager.\n     * This manager is used to retrieve the Apache ECharts theme and manage the chart options in accordance with the Orange Design System.\n     * It is used to add features:\n     * - {@link ODSChartsTheme.externalizeLegends}: to add Orange Design System theme to legends.\n     * - {@link ODSChartsTheme.externalizePopover}: to add Orange Design System theme to popover or tooltip.\n     * - {@link ODSChartsTheme.manageChartResize}: to dynamically adapt graph size the its container.\n     * - {@link ODSChartsTheme.manageThemeObserver}: to enable auto-switch between dark and light mode.\n     */\n    static getThemeManager(options) {\n        if (!options) {\n            options = {};\n        }\n        let mode = ODSChartsMode.DEFAULT;\n        if (!options.colors) {\n            options.colors = ODSChartsColorsSet.DEFAULT;\n        }\n        if (!options.chartConfiguration) {\n            options.chartConfiguration = ODSChartsConfiguration.getDefaultChartConfiguration();\n        }\n        if (!options.cssTheme) {\n            options.cssTheme = ODSChartsCSSThemes.NONE;\n        }\n        if (!options.cssSelector) {\n            options.cssSelector = 'body';\n        }\n        mode = ODSChartsTheme.getDarkOrLightMode(document.querySelector(options.cssSelector));\n        var themeName = `ods.${getStringValue(options.colors)}.${getStringValue(options.chartConfiguration)}`;\n        const theme = cloneDeepObject(ODS_PROJECT);\n        mergeObjects(theme, cloneDeepObject(THEME.common));\n        mergeObjects(theme, cloneDeepObject(THEME.linesAxis));\n        if (typeof options.colors === 'string') {\n            mergeObjects(theme, cloneDeepObject(THEME.colors[options.colors]));\n            mergeObjects(theme, cloneDeepObject(THEME.visualMapColors[options.colors]));\n        }\n        else {\n            mergeObjects(theme, cloneDeepObject({\n                color: options.colors.map((color) => ('string' === typeof color ? color : THEME.colors[color.colorPalette].color[color.colorIndex])),\n                visualMapColor: options.colors.map((color) => 'string' === typeof color ? color : THEME.visualMapColors[color.colorPalette].visualMapColor[color.colorIndex]),\n            }));\n        }\n        mergeObjects(theme, cloneDeepObject(THEME.linesStyle[options.chartConfiguration.lineStyle\n            ? options.chartConfiguration.lineStyle\n            : options.lineStyle\n                ? options.lineStyle\n                : ODSChartsLineStyle.SMOOTH]));\n        return new ODSChartsTheme(buildHash(themeName), theme, Object.assign(Object.assign({}, options), { mode }));\n    }\n    /**\n     * Set the original [Apache Echarts data options](https://echarts.apache.org/en/option.html) of your graph.\n     *\n     * Example:\n     * ```\n     *     lineChartODSTheme\n     *       .setDataOptions({\n     *         xAxis: {\n     *           data: ['shirt', 'cardigan', 'chiffon', 'pants', 'heels', 'socks'],\n     *         },\n     *         series: [\n     *           {\n     *             name: 'sales',\n     *             type: 'bar',\n     *             data: [5, 20, 36, 10, 10, 20],\n     *           },\n     *         ],\n     *       })\n     * ```\n     * @param options the [Apache Echarts data options](https://echarts.apache.org/en/option.html) of your graph.\n     * @returns the theme manager object\n     */\n    setDataOptions(options) {\n        this.dataOptions = options;\n        return this;\n    }\n    /**\n     *\n     * @param themeColors : colors set to be used by default\n     * @param dataOptions : dataOptions that may content specific color for one data serie\n     * @returns : array of colors\n     */\n    getDisplayedColors(themeColors, dataOptions) {\n        const colors = cloneDeepObject(themeColors);\n        if (dataOptions && dataOptions.series) {\n            for (let serieIndex = 0; serieIndex < dataOptions.series.length; serieIndex++) {\n                const serie = dataOptions.series[serieIndex];\n                if (serie.itemStyle && serie.itemStyle.color && serie.itemStyle.color !== colors[serieIndex]) {\n                    const previousColorIndex = colors.indexOf(serie.itemStyle.color);\n                    if (previousColorIndex > -1) {\n                        colors.splice(previousColorIndex, 1);\n                    }\n                    colors.splice(serieIndex, 0, serie.itemStyle.color);\n                }\n            }\n        }\n        return colors;\n    }\n    /**\n     * As it seems not possible to update a theme after the charts was initialized,\n     * this method calculate the new theme values and update these values directly inside the\n     * themeOptions that will be merge with the dataOptions to update the charts options with\n     * this new chartOptions\n     * @param themeOptions the basic themeOptions\n     * @returns this.theme, the new global theme calculated.\n     */\n    calculateNewThemeAndAddItInThemeOptions(themeOptions, dataOptions) {\n        var _a, _b;\n        const newTheme = this.calculateTheme();\n        mergeObjects(themeOptions, {\n            color: newTheme.color,\n            backgroundColor: newTheme.backgroundColor,\n            title: newTheme.title,\n            grid: { tooltip: newTheme.tooltip },\n        }, (_a = this.options.chartConfiguration) === null || _a === void 0 ? void 0 : _a.getDefaultConfiguration());\n        if (dataOptions.toolbox) {\n            themeOptions.toolbox = newTheme.toolbox;\n        }\n        if (dataOptions.timeline) {\n            themeOptions.timeline = newTheme.timeline;\n        }\n        //TODO: check the mapping of radar\n        // themeOptions.radar = newTheme.radar;\n        //TODO:  missing parallel mapping\n        // themeOptions.parallel = newTheme.parallel;\n        //TODO: check the mapping of geo\n        // themeOptions.geo = newTheme.geo;\n        if (dataOptions.series) {\n            themeOptions.series = [];\n            for (let index = 0; index < dataOptions.series.length; index++) {\n                themeOptions.series[index] = {};\n                switch (dataOptions.series[index].type) {\n                    case 'line':\n                        themeOptions.series[index] = Object.assign(Object.assign({}, cloneDeepObject(newTheme.line)), { markPoint: cloneDeepObject(newTheme.markPoint) });\n                        break;\n                    case 'bar':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.bar);\n                        break;\n                    case 'pie':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.pie);\n                        break;\n                    case 'scatter':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.scatter);\n                        break;\n                    case 'boxplot':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.boxplot);\n                        break;\n                    case 'sankey':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.sankey);\n                        break;\n                    case 'funnel':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.funnel);\n                        break;\n                    case 'gauge':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.gauge);\n                        break;\n                    case 'candlestick':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.candlestick);\n                        break;\n                    case 'graph':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.graph);\n                        break;\n                    case 'treemap':\n                        themeOptions.series[index] = cloneDeepObject(newTheme.map);\n                        break;\n                }\n                themeOptions.series[index] = Object.assign(Object.assign({}, themeOptions.series[index]), (_b = this.options.chartConfiguration) === null || _b === void 0 ? void 0 : _b.getSerieConfiguration(dataOptions.series[index]));\n            }\n        }\n        if (dataOptions.visualMap) {\n            themeOptions.visualMap = [];\n            for (let index = 0; index < dataOptions.series.length; index++) {\n                themeOptions.visualMap[index] = newTheme.visualMap;\n            }\n        }\n        for (const axisType of ['xAxis', 'yAxis']) {\n            if (dataOptions[axisType]) {\n                switch (dataOptions[axisType].type) {\n                    case 'category':\n                        themeOptions[axisType] = mergeObjects(themeOptions[axisType], newTheme.categoryAxis);\n                        break;\n                    case 'value':\n                        themeOptions[axisType] = mergeObjects(themeOptions[axisType], newTheme.valueAxis);\n                        break;\n                    case 'log':\n                        themeOptions[axisType] = mergeObjects(themeOptions[axisType], newTheme.logAxis);\n                        break;\n                    case 'time':\n                        themeOptions[axisType] = mergeObjects(themeOptions[axisType], newTheme.timeAxis);\n                        break;\n                }\n            }\n        }\n        return newTheme;\n    }\n    /**\n     * getThemeOptions() can be used to get the options that should be added to charts options to implement the Orange Design System.\n     *\n     * getThemeOptions() needs graph data to be already set\n     *\n     * @param addGlobalThemeOptions indicates if the specificities of the global theme used in the chart init method\n     * @returns modifications to be made to the [Apache Echarts data options](https://echarts.apache.org/en/option.html) to implement the Orange Design System and dataOptions with css vars replaced.\n     */\n    getThemeOptions() {\n        if (!this.dataOptions) {\n            throw new Error('the chart basic options must be set to get the theme completion');\n        }\n        if (this.chartThemeObserver) {\n            this.options.mode = ODSChartsTheme.getDarkOrLightMode(this.chartThemeObserver.addThemeObserver());\n            this.cssHelper.changeThemeMode(this.options.mode);\n        }\n        const hasInitializedCompitedStyle = this.cssHelper.initComputedStyle();\n        try {\n            // need to copy dataOptions as theme feature may change the original dataOptions\n            // only make an asign at the first level in order to avoid deep copy of all data\n            // each feature is responsible to deep copy the changed part according to their changes.\n            // Also make a deep copy when needed to replace any css var\n            const updatedDataOptionsForTheme = this.cssHelper.cloneAndReplaceAllCssVars(Object.assign({}, this.dataOptions));\n            updatedDataOptionsForTheme.xAxis = updatedDataOptionsForTheme.xAxis ? cloneDeepObject(updatedDataOptionsForTheme.xAxis) : {};\n            updatedDataOptionsForTheme.yAxis = updatedDataOptionsForTheme.yAxis ? cloneDeepObject(updatedDataOptionsForTheme.yAxis) : {};\n            updatedDataOptionsForTheme.legend = updatedDataOptionsForTheme.legend ? cloneDeepObject(updatedDataOptionsForTheme.legend) : {};\n            updatedDataOptionsForTheme.grid = updatedDataOptionsForTheme.grid ? cloneDeepObject(updatedDataOptionsForTheme.grid) : {};\n            const axisLabel = {\n                fontStyle: 'normal',\n                fontWeight: 'var(--bs-body-font-weight, 400)',\n                fontSize: 14,\n                fontFamily: 'Helvetica Neue, sans-serif',\n                color: ODSChartsMode.DEFAULT === this.options.mode\n                    ? 'var(--bs-body-color, #000)'\n                    : ODSChartsMode.LIGHT === this.options.mode\n                        ? 'var(--bs-black, #000)'\n                        : 'var(--bs-white, #fff)',\n            };\n            const axisLine = {\n                show: true,\n                lineStyle: {\n                    width: 2,\n                    color: ODSChartsMode.DEFAULT === this.options.mode\n                        ? 'var(--bs-border-color-subtle, #ccc)'\n                        : ODSChartsMode.LIGHT === this.options.mode\n                            ? 'var(--bs-gray-500, #ccc)'\n                            : 'var(--bs-gray-700, #666)',\n                },\n            };\n            const splitLine = {\n                show: true,\n                lineStyle: {\n                    width: 1,\n                    color: ODSChartsMode.DEFAULT === this.options.mode\n                        ? 'var(--bs-border-color-subtle, #ccc)'\n                        : ODSChartsMode.LIGHT === this.options.mode\n                            ? 'var(--bs-gray-500, #ccc)'\n                            : 'var(--bs-gray-700, #666)',\n                },\n            };\n            const grid = {\n                left: 50,\n                right: 50,\n                top: 50,\n                bottom: 30,\n            };\n            const legend = {\n                textStyle: {\n                    fontWeight: 'var(--bs-body-font-weight, 400)',\n                    fontSize: 14,\n                    color: ODSChartsMode.DEFAULT === this.options.mode\n                        ? 'var(--bs-body-color, #000)'\n                        : ODSChartsMode.LIGHT === this.options.mode\n                            ? 'var(--bs-black, #000)'\n                            : 'var(--bs-white, #fff)',\n                    padding: [0, 0, 0, 5],\n                },\n                icon: 'rect',\n                itemWidth: 12,\n                itemHeight: 12,\n            };\n            if (!this.chartLegendManager) {\n                const legendsOrientation = (updatedDataOptionsForTheme.legend && updatedDataOptionsForTheme.legend.orient) || 'horizontal';\n                if ('horizontal' === legendsOrientation) {\n                    legend.orient = 'horizontal';\n                    legend.bottom = 20;\n                    legend.left = 0;\n                    legend.padding = [0, 40, 10, 40];\n                    legend.formatter = function (name) {\n                        return name + '   '; // Add spaces at the end of the line\n                    };\n                    grid.bottom = 100;\n                }\n                else {\n                    legend.orient = 'vertical';\n                    legend.right = 50;\n                    legend.itemGap = 12;\n                    legend.top = 30;\n                    grid.right = 200;\n                }\n            }\n            let themeOptions = {\n                xAxis: { axisLabel: cloneDeepObject(axisLabel) },\n                yAxis: { axisLabel: cloneDeepObject(axisLabel) },\n                legend: cloneDeepObject(legend),\n                grid: cloneDeepObject(grid),\n            };\n            let usedTheme = this.calculateNewThemeAndAddItInThemeOptions(themeOptions, updatedDataOptionsForTheme);\n            for (const axis of ['xAxis', 'yAxis']) {\n                if (!isMainAxis(updatedDataOptionsForTheme[axis]) && !(updatedDataOptionsForTheme[axis] && updatedDataOptionsForTheme[axis].axisLine)) {\n                    themeOptions[axis].axisLine = { show: false };\n                    themeOptions[axis].splitLine = { show: false };\n                }\n                else {\n                    themeOptions[axis].axisLine = cloneDeepObject(axisLine);\n                    themeOptions[axis].splitLine = cloneDeepObject(splitLine);\n                }\n            }\n            const displayedColors = this.getDisplayedColors(usedTheme.color, updatedDataOptionsForTheme);\n            themeOptions = this.cssHelper.replaceAllCssVars(themeOptions);\n            if (this.chartLegendManager) {\n                try {\n                    this.chartLegendManager.addLegend(updatedDataOptionsForTheme, displayedColors, this.options.cssTheme, this.cssThemeName, this.options.mode);\n                }\n                catch (error) {\n                    console.error('unable to init Legend Manager', error);\n                }\n            }\n            if (this.chartResizeManager) {\n                try {\n                    this.chartResizeManager.addResizeManagement();\n                }\n                catch (error) {\n                    console.error('unable to init Resize Manager', error);\n                }\n            }\n            if (this.chartPopoverManager) {\n                try {\n                    this.chartPopoverManager.addPopoverManagement(updatedDataOptionsForTheme, themeOptions, this.options.cssTheme, this.cssThemeName, this.options.mode);\n                }\n                catch (error) {\n                    console.error('unable to init Popover Manager', error);\n                }\n            }\n            return { themeOptions, dataOptions: updatedDataOptionsForTheme };\n        }\n        finally {\n            if (hasInitializedCompitedStyle) {\n                this.cssHelper.removeComputedStyle();\n            }\n        }\n    }\n    /**\n     * externalizeLegends() configure the manager to externalize the legends from the graphs to put it directly in your HTML document.\n     *\n     * The generated legends\n     * - will implement the Orange Design System\n     * - will be link with the graph.\n     *\n     * Example of use with a single legend container:\n     * ```\n     * themeManager.externalizeLegends(\n     *   myChart,\n     *   '#my_legend_container'\n     * );\n     * ```\n     *\n     * @param echart the initialized eCharts object\n     * @param legendHolderSelector\n     * legendHolderSelector can be:\n     * - a string, and then is interpreted as the CSS selector of the legends container\n     * - a {@link ODSChartsLegendHolderDefinition} if you want to sepcify the orientation of the legends holder or specify the series to be displayed in the legends holder\n     * - an array of {@link ODSChartsLegendHolderDefinition} if you want to group legends in several legends holders\n     * @returns the theme manager object itself to be able to chain calls.\n     */\n    externalizeLegends(echart, legendHolderSelector) {\n        this.chartLegendManager = ODSChartsLegends.addLegend(echart, legendHolderSelector);\n        return this;\n    }\n    /**\n     * externalizePopover() configure the manager to externalize the management of popover or tooltip.\n     *\n     * The generated tooltips or popover will implement the Orange Design System.\n     *\n     * @param popoverConfig the configuration of the externalizePopover feature {@link ODSChartsPopoverConfig}\n     * @param popoverDefinition renderer {@link ODSChartsPopoverDefinition} of the popover/tooltip. **{@link ODSChartsPopoverManagers}** is used to\n     * specify preconfigured renderer for Apache ECharts, Boosted 5 or Boosted 4.\n     *\n     * Default value is {@link ODSChartsPopoverManagers}.NONE, that means it uses default Apache ECharts template to externalize tooltip/popover HTML element, implementing Orange Design system.\n     *\n     * **WARNING**: Boosted 4 or Boosted 5 rendering requires dependency on the boosted library and access to the boosted global variable.\n     * @returns the theme manager object itself to be able to chain calls.\n     */\n    externalizePopover(popoverConfig = {}, popoverDefinition) {\n        if (!popoverDefinition) {\n            popoverDefinition = ODSChartsPopoverManagers.NONE;\n        }\n        this.chartPopoverManager = ODSChartsPopover.addPopoverManagement(popoverDefinition, popoverConfig);\n        return this;\n    }\n    /**\n     * manageChartResize() ensures that the graph resizes correctly when its container is resized\n     *\n     * @param echart the initialized eCharts object.\n     * @param chartId an unique id that identify the chart container in the DOM.\n     * @returns the theme manager object itself to be able to chain calls.\n     */\n    manageChartResize(echart, chartId) {\n        this.chartResizeManager = ODSChartsResize.addResizeManagement(echart, chartId);\n        return this;\n    }\n    /**\n     * manageThemeObserver() is used to enable auto-switch between dark and light mode.\n     * It observe the closest element with a data-bs-theme indicator to\n     * adapt the graph colour to the new theme.\n     * @param echart the initialized eCharts object\n     * @returns returns back the theme manager object\n     */\n    manageThemeObserver(echart) {\n        this.chartThemeObserver = ODSChartsThemeObserver.addThemeObserver(echart, () => {\n            // update chart options with theme options enriched with values\n            // from a newly calculated global theme\n            echart.setOption(this.getChartOptions());\n        });\n        return this;\n    }\n    /**\n     * getChartOptions() build the eCharts options merging\n     * - options implementing the Orange Design System {@link ODSChartsThemeOptions}\n     * - optionally options implementing {@link externalizeLegends},\n     * - optionally options implementing {@link externalizePopover},\n     * - optionally options implementing {@link manageChartResize},\n     * - optionally options implementing {@link manageThemeObserver},\n     * - data from {@link setDataOptions}\n     *\n     * @param addGlobalThemeOptions indicates if the specificities of the global theme used in the chart init method\n     * must be added in the options of the chart\n     * @returns the Apache ECharts options to use in [Apache Echarts `setOption()`](https://echarts.apache.org/en/option.html) call.\n     */\n    getChartOptions() {\n        if (!this.dataOptions) {\n            throw new Error('the chart basic options must be set to get the theme completion');\n        }\n        const { themeOptions, dataOptions } = this.getThemeOptions();\n        return mergeObjects(themeOptions, dataOptions);\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_COMMON = {\n    backgroundColor: 'var(--bs-body-bg, #fff)',\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const DEFAULT_LINES_AXIS = {\n    categoryAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #ccc)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n    },\n    valueAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n    },\n    logAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n    },\n    timeAxis: {\n        axisLine: {\n            show: true,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n        axisLabel: {\n            show: true,\n            color: 'var(--bs-body-color, #000000)',\n        },\n        axisTick: {\n            show: false,\n            lineStyle: {\n                color: 'var(--bs-border-color-subtle, #cccccc)',\n            },\n        },\n    },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const COMMON_LINE_STYLE_POINTS = {\n    line: {\n        itemStyle: {\n            borderWidth: 1,\n        },\n        lineStyle: {\n            width: 2,\n        },\n        symbolSize: '10',\n        symbol: 'circle',\n        smooth: false,\n    },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nexport const COMMON_LINE_STYLE_SMOOTH = {\n    line: {\n        itemStyle: {\n            borderWidth: 1,\n        },\n        lineStyle: {\n            width: 2,\n        },\n        symbolSize: 0,\n        symbol: 'circle',\n        smooth: true,\n    },\n};\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\n/**\n * Definition of a container used to display legends, refer to {@link ODSChartsTheme.externalizeLegends}.\n *\n * Example of use with a single vertical legend container:\n * ```\n * themeManager.externalizeLegends(\n *   myChart,\n *   {\n *     legendHolderSelector: '#legend_with_custom_content',\n *     orientation: 'vertical'\n *   }\n * );\n * ```\n *\n * Example of use with a several legend containers:\n * ```\n * themeManager.externalizeLegends(\n *   myChart,\n *   [{ legendHolderSelector: '#results_stack_legend', seriesRef: ['result'], orientation: 'vertical' },\n *    { legendHolderSelector: '#goals_stack_legend', seriesRef: ['goals'], orientation: 'vertical' },\n *    { legendHolderSelector: '#line_legend' }]\n * );\n * ```\n *\n * Example of use with postItemContent:\n * ```\n * themeManager.externalizeLegends(\n *   myChart,\n *   {\n *     legendHolderSelector: '#legend_with_custom_content',\n *     postItemContent: {sales: '<div class=\"mt-2 alert alert-info py-1\"><small>Additional information</small></div>' }\n *   }\n * );\n * ```\n *\n * Example of use with afterLegendContent:\n * ```\n * themeManager.externalizeLegends(\n *   myChart,\n *   {\n *     legendHolderSelector: '#legend_with_custom_content',\n *     afterLegendContent: '<div class=\"mt-2 alert alert-info py-1\"><small>Additional information</small></div>'\n *   }\n * );\n * ```\n */\nexport class ODSChartsLegendHolderDefinition {\n    constructor(\n    /**\n     * Legends container CSS selector\n     */\n    legendHolderSelector, \n    /**\n     * Optionally indicates whether captions are displayed horizontally or vertically.\n     * By default, the value of the `legend.orient` option in Apache ECharts will be used.\n     * If `legend.orient` does not exist, the default value will be `'horizontal'`.\n     */\n    orientation, \n    /**\n     * Array referencing the series whose legends are to be displayed in this legend container.\n     * The reference can be the series name, the series label or simply the stack name in the case of stacked bars.\n     * If `seriesRef` is absent, this container will be the default container for non-referenced legends.\n     */\n    seriesRef, \n    /**\n     * This option defines HTML content that will be displayed after each individual legend item.\n     * It can be:\n     * - A function that receives legend information and returns custom HTML content for that specific legend\n     * - An object mapping legend labels or series names to their custom HTML content\n     * - An array of strings: each element is associated with the legend at the same position (index)\n     *\n     * Example with dynamic content based on legend information:\n     * ```\n     * postItemContent: (legendLabel, legendName, legendIndex, color, colorIndex) => {\n     *   if (legendLabel === 'Sales') {\n     *     return `<div class=\"mt-2 p-2 bg-light rounded border-start border-3 border-primary\">\n     *              <small class=\"text-muted\">${legendName} (${legendIndex + 1})</small>\n     *            </div>`;\n     *   }\n     *   if (legendLabel === 'Profit') {\n     *     return '<div class=\"mt-1 alert alert-info py-1\"><small>Net profit after adjustments</small></div>';\n     *   }\n     *   return '';\n     * }\n     * ```\n     *\n     * Example with object mapping:\n     * ```\n     * postItemContent: {\n     *   'Sales': '<div class=\"mt-1 badge bg-primary-subtle text-primary-emphasis\">Revenue data includes taxes</div>',\n     *   'Profit': '<div class=\"mt-1 badge bg-success-subtle text-success-emphasis\">Net profit after adjustments</div>'\n     * }\n     * ```\n     *\n     * Example with array:\n     * ```\n     * postItemContent: [\n     *   '<div class=\"mt-1 text-muted small\">Contenu pour la première légende</div>',\n     *   '<div class=\"mt-1 text-muted small\">Contenu pour la deuxième légende</div>'\n     * ]\n     * ```\n     *\n     * @param legendLabel The label of the legend item\n     * @param legendName The name of the serie corresponding to this legend item\n     * @param legendIndex The index of the legend in the legend list (0-based)\n     * @param color The color assigned to this legend\n     * @param colorIndex The index of the color in the color list (0-based)\n     */\n    postItemContent, \n    /**\n     * This option defines HTML content that will be displayed after all legend items.\n     * It should be a string containing HTML content that will be added at the end of the legend group.\n     *\n     * Example:\n     * ```\n     * afterLegendContent: '<div class=\"legend-footer\">Last updated: October 2025</div>'\n     * ```\n     */\n    afterLegendContent) {\n        this.legendHolderSelector = legendHolderSelector;\n        this.orientation = orientation;\n        this.seriesRef = seriesRef;\n        this.postItemContent = postItemContent;\n        this.afterLegendContent = afterLegendContent;\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\nimport { ODSChartsLineStyle } from '../ods-chart-theme';\n/**\n * Charts type\n */\nexport var ODSChartsTypes;\n(function (ODSChartsTypes) {\n    ODSChartsTypes[\"DEFAULT\"] = \"DEFAULT\";\n    ODSChartsTypes[\"LINE\"] = \"LINE\";\n    ODSChartsTypes[\"BAR\"] = \"BAR\";\n    ODSChartsTypes[\"LINE_AND_BAR\"] = \"LINE_AND_BAR\";\n    ODSChartsTypes[\"PIE\"] = \"PIE\";\n    ODSChartsTypes[\"DONUT\"] = \"DONUT\";\n    ODSChartsTypes[\"HORIZONTAL_GAUGE\"] = \"HORIZONTAL_GAUGE\";\n    ODSChartsTypes[\"SEMI_CIRCULAR_GAUGE\"] = \"SEMI_CIRCULAR_GAUGE\";\n    ODSChartsTypes[\"CIRCULAR_GAUGE\"] = \"CIRCULAR_GAUGE\";\n    ODSChartsTypes[\"DIAL_GAUGE\"] = \"DIAL_GAUGE\";\n})(ODSChartsTypes || (ODSChartsTypes = {}));\n/**\n * Configuration of a line chart.\n */\nexport class ODSChartsLineConfiguration {\n}\n/**\n * Configuration of a gauge chart.\n */\nexport class ODSChartsGaugeConfiguration {\n}\n/**\n * Configuration of dial gauge chart.\n * It extends the ODSChartsGaugeConfiguration to include specific properties for dial points.\n */\nexport class ODSChartsDialGaugeConfiguration extends ODSChartsGaugeConfiguration {\n}\n/**\n * ChartsConfiguration is used to specify the configuration specific to a type of graph.\n *\n * For the moment can be:\n * - {@link getLineChartConfiguration} : to build a configuration of a line chart\n * - {@link getBarChartConfiguration} : to build a configuration of a bar chart\n * - {@link getLineAndBarChartConfiguration} : to build a configuration of a bar and line chart\n * - {@link getPieChartConfiguration} : to build a configuration of a pie chart\n * - {@link getDonutChartConfiguration} : to build a configuration of a donut chart\n * - {@link getHorizontalGaugeChartConfiguration} : to build a configuration of a horizontal gauge\n * - {@link getSemiCircularGaugeChartConfiguration} : to build a configuration of a semicircular gauge\n * - {@link getCircularGaugeChartConfiguration} : to build a configuration of a circular gauge\n * - {@link getDialGaugeChartConfiguration} : to build a configuration of a dial gauge\n */\nexport class ODSChartsConfiguration {\n    constructor(type = ODSChartsTypes.DEFAULT) {\n        this.type = type;\n    }\n    /**\n     * For internal use only.\n     * This method should not be called directly by the user. It is used internally by the class to build the configuration of the charts.\n     * @returns The default configuration of a chart.\n     * @internal\n     */\n    getDefaultConfiguration() {\n        return {};\n    }\n    /**\n     * For internal use only.\n     * This method should not be called directly by the user. It is used internally by the class to build the configuration of the charts.\n     * @param _serie The serie to get the configuration for.\n     * @returns The configuration of the serie.\n     * @internal\n     */\n    getSerieConfiguration(_serie) {\n        return {};\n    }\n    /**\n     * Get the empty default configuration of a chart.\n     * This method should not be used. Prefer to use the specific methods to get the configuration of a chart.\n     * For example, use {@link getLineChartConfiguration} to get the configuration of a line chart.\n     * @returns The default configuration of a chart.\n     */\n    static getDefaultChartConfiguration() {\n        return new ODSChartsConfiguration();\n    }\n    /**\n     * Get the configuration of a line chart.\n     * @param config Configuration of the line chart, can be used to specify the line style\n     *               {@link ODSChartsLineStyle.SMOOTH} or {@link ODSChartsLineStyle.BROKEN} or {@link ODSChartsLineStyle.BROKEN_WITH_POINTS}}.\n     * @returns Configuration of a line chart.\n     */\n    static getLineChartConfiguration(config = { lineStyle: ODSChartsLineStyle.SMOOTH }) {\n        return new ODSChartsLine(config.lineStyle);\n    }\n    /**\n     * Get the configuration of a bar chart.\n     * @returns Configuration of a bar chart.\n     */\n    static getBarChartConfiguration() {\n        return new ODSChartsBar();\n    }\n    /**\n     * get the configuration of a line and bar chart.\n     * @param config Configuration of the line and bar chart, can be used to specify the line style\n     *               {@link ODSChartsLineStyle.SMOOTH} or {@link ODSChartsLineStyle.BROKEN} or {@link ODSChartsLineStyle.BROKEN_WITH_POINTS}}.\n     * @returns Configuration of a line and bar chart.\n     */\n    static getLineAndBarChartConfiguration(config = { lineStyle: ODSChartsLineStyle.SMOOTH }) {\n        return new ODSChartsLineAndBar(config.lineStyle);\n    }\n    /**\n     * Get the configuration of a pie chart.\n     * @returns Configuration of a pie chart.\n     */\n    static getPieChartConfiguration() {\n        return new ODSChartsPie();\n    }\n    /**\n     * Get the configuration of a donut chart.\n     * @returns Configuration of a donut chart.\n     */\n    static getDonutChartConfiguration() {\n        return new ODSChartsDonut();\n    }\n    /**\n     * Get the configuration of a horizontal gauge chart.\n     * This chart is a bar chart with a horizontal orientation, used to display a single value within a range.\n     * It is useful for showing progress or performance against a target.\n     * @param config Configuration of the horizontal gauge chart, must be used to specify the minimum and maximum values.\n     *               The chart will display a bar that fills the space between these two values.\n     * @returns Configuration of the horizontal gauge chart.\n     */\n    static getHorizontalGaugeChartConfiguration(config) {\n        return new ODSChartsHorizontalGauge(config.minValue, config.maxValue);\n    }\n    /**\n     * Get the configuration of a semi-circular gauge chart.\n     * @param config Configuration of the semi-circular gauge chart, must be used to specify the minimum and maximum values.\n     * @returns Configuration of the semi-circular gauge chart.\n     */\n    static getSemiCircularGaugeChartConfiguration(config) {\n        return new ODSChartsSemiCircularGauge(config.minValue, config.maxValue);\n    }\n    /**\n     * Get the configuration of a circular gauge chart.\n     * @param config Configuration of the circular gauge chart, must be used to specify the minimum and maximum values.\n     * @returns Configuration of the circular gauge chart.\n     */\n    static getCircularGaugeChartConfiguration(config) {\n        return new ODSChartsCircularGauge(config.minValue, config.maxValue);\n    }\n    /**\n     * Get the configuration of a dial gauge chart.\n     * @param config Configuration of the dial gauge chart, must be used to specify the minimum and maximum values and the dial parts.\n     * @returns Configuration of the dial gauge chart.\n     */\n    static getDialGaugeChartConfiguration(config) {\n        return new ODSChartsDialGauge(config.minValue, config.maxValue, config.dialPoints);\n    }\n}\n/**\n * Configuration of a line chart of one of the type\n * - {@link ODSChartsTypes.LINE}\n * - {@link ODSChartsTypes.LINE_AND_BAR}\n */\nclass ODSChartsLineType extends ODSChartsConfiguration {\n    constructor(type = ODSChartsTypes.LINE, lineStyle) {\n        super(type);\n        this.lineStyle = lineStyle;\n        if (undefined === this.lineStyle) {\n            this.lineStyle = ODSChartsLineStyle.SMOOTH;\n        }\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.LINE_AND_BAR}\n */\nclass ODSChartsLineAndBar extends ODSChartsLineType {\n    constructor(lineStyle) {\n        super(ODSChartsTypes.LINE_AND_BAR, lineStyle);\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.LINE}\n */\nclass ODSChartsLine extends ODSChartsLineType {\n    constructor(lineStyle) {\n        super(ODSChartsTypes.LINE, lineStyle);\n    }\n}\n/**\n * Configuration of a bar chart of one of the type:\n * - {@link ODSChartsTypes.BAR}\n * - {@link ODSChartsTypes.STACKED_BAR}\n */\nclass ODSChartsBarType extends ODSChartsConfiguration {\n    constructor(type) {\n        super(type);\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.BAR}\n */\nclass ODSChartsBar extends ODSChartsBarType {\n    constructor() {\n        super(ODSChartsTypes.BAR);\n    }\n}\n/**\n * Configuration of a pie chart of type {@link ODSChartsTypes.PIE}\n */\nclass ODSChartsPie extends ODSChartsConfiguration {\n    getSerieConfiguration(serie) {\n        if (serie.type !== 'pie') {\n            return {};\n        }\n        return {\n            label: { show: false, position: 'outside' },\n            labelLine: { show: false },\n            radius: ['0%', '95%'],\n        };\n    }\n    constructor() {\n        super(ODSChartsTypes.PIE);\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.HorizontalGauge}\n */\nclass ODSChartsDonut extends ODSChartsConfiguration {\n    getSerieConfiguration(serie) {\n        if (serie.type !== 'pie') {\n            return {};\n        }\n        return {\n            label: { show: false, position: 'center' },\n            labelLine: { show: false },\n            emphasis: {\n                label: {\n                    show: true,\n                    fontSize: 35,\n                    fontWeight: 700,\n                    formatter: '{d}%',\n                },\n            },\n            radius: ['80%', '95%'],\n        };\n    }\n    constructor() {\n        super(ODSChartsTypes.DONUT);\n    }\n}\n/**\n * configuration of a gauche chart of one the type\n * - {@link ODSChartsTypes.DIAL_GAUGE}\n * - {@link ODSChartsTypes.HORIZONTAL_GAUGE}\n * - {@link ODSChartsTypes.CIRCULAR_GAUGE}\n * - {@link ODSChartsTypes.CIRCLE_GAUGE}\n */\nclass ODSChartsGaugeType extends ODSChartsConfiguration {\n    constructor(type) {\n        super(type);\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.HORIZONTAL_GAUGE}\n */\nclass ODSChartsHorizontalGauge extends ODSChartsGaugeType {\n    constructor(minValue, maxValue) {\n        super(ODSChartsTypes.HORIZONTAL_GAUGE);\n        this.minValue = minValue;\n        this.maxValue = maxValue;\n    }\n    getDefaultConfiguration() {\n        return {\n            grid: {\n                left: 20,\n                top: 32,\n                right: 20,\n                height: 32,\n            },\n            yAxis: {\n                show: true,\n                type: 'category',\n                axisLabel: {\n                    margin: 0,\n                    lineHeight: 50,\n                    inside: true,\n                    verticalAlign: 'bottom',\n                },\n                axisLine: {\n                    show: false,\n                },\n                splitLine: {\n                    show: false,\n                },\n            },\n            xAxis: Object.assign(Object.assign(Object.assign({ type: 'value', position: 'top' }, (undefined !== this.minValue ? { min: this.minValue } : {})), (undefined !== this.maxValue ? { max: this.maxValue } : {})), { splitNumber: 1, axisLine: { show: false }, axisTick: { show: false }, splitLine: {\n                    show: false,\n                }, axisLabel: {\n                    formatter: (val) => ((this.minValue || 0) === val ? '' : val),\n                    align: 'right',\n                    show: true,\n                    lineHeight: 0,\n                    fontWeight: 'normal',\n                } }),\n        };\n    }\n    getSerieConfiguration(serie) {\n        if ('bar' !== serie.type) {\n            return {};\n        }\n        return {\n            pointer: {\n                show: false,\n            },\n            barWidth: 32,\n            showBackground: true,\n            backgroundStyle: {\n                color: 'var(--bs-gray-500)',\n            },\n            itemStyle: {\n                barBorderWidth: 0,\n            },\n        };\n    }\n}\n/**\n * Configuration of a circular gauge of one of the type\n * - {@link ODSChartsTypes.SEMI_CIRCULAR_GAUGE}\n * - {@link ODSChartsTypes.CIRCULAR_GAUGE}\n * - {@link ODSChartsTypes.DIAL_GAUGE}\n */\nclass ODSChartsCircularGaugeType extends ODSChartsConfiguration {\n    constructor(type = ODSChartsTypes.SEMI_CIRCULAR_GAUGE, minValue, maxValue) {\n        super(type);\n        this.minValue = minValue;\n        this.maxValue = maxValue;\n    }\n    getSerieConfiguration(serie) {\n        if (serie.type !== 'gauge') {\n            return {};\n        }\n        const circular = ODSChartsTypes.CIRCULAR_GAUGE === this.type;\n        const minValue = undefined !== serie.min ? serie.min : undefined !== this.minValue ? this.minValue : 0;\n        const maxValue = undefined !== serie.max ? serie.max : undefined !== this.maxValue ? this.maxValue : 100;\n        return {\n            endAngle: circular ? -270 : 0,\n            startAngle: circular ? 90 : 180,\n            min: minValue,\n            max: maxValue,\n            radius: circular ? '90%' : '150%',\n            center: ['50%', circular ? '50%' : '75%'],\n            splitNumber: 1,\n            detail: {\n                offsetCenter: [0, circular ? 0 : -10],\n                color: 'var(--bs-body-color, #000)',\n                fontSize: 40,\n                fontFamily: 'var(--bs-font-sans-serif, \"Helvetica Neue\")',\n                fontWeight: 'bold',\n            },\n            progress: {\n                show: true,\n                width: 32,\n            },\n            splitLine: {\n                show: false,\n            },\n            axisTick: {\n                show: false,\n            },\n            pointer: {\n                show: false,\n            },\n            axisLabel: {\n                show: circular ? false : true,\n                distance: -50,\n                color: 'var(--bs-body-color, #000)',\n                fontSize: 14,\n                fontFamily: 'var(--bs-font-sans-serif, \"Helvetica Neue\")',\n                fontWeight: 400,\n            },\n            axisLine: {\n                roundCap: false,\n                lineStyle: {\n                    width: 32,\n                    color: [[1, 'var(--bs-light)']],\n                },\n            },\n        };\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.CIRCULAR_GAUGE}\n */\nclass ODSChartsSemiCircularGauge extends ODSChartsCircularGaugeType {\n    constructor(minValue, maxValue) {\n        super(ODSChartsTypes.SEMI_CIRCULAR_GAUGE, minValue, maxValue);\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.CIRCULAR_GAUGE}\n */\nclass ODSChartsDialGauge extends ODSChartsCircularGaugeType {\n    constructor(minValue, maxValue, dialPoints) {\n        super(ODSChartsTypes.DIAL_GAUGE, minValue, maxValue);\n        this.dialPoints = dialPoints;\n        if (undefined === minValue && dialPoints && dialPoints.length > 1) {\n            this.minValue = dialPoints[0].value;\n        }\n        if (undefined === maxValue && dialPoints && dialPoints.length > 0) {\n            this.maxValue = dialPoints[dialPoints.length - 1].value;\n        }\n    }\n    // Fonction pour calculer le PGCD de deux nombres\n    gcd(a, b) {\n        a = Math.abs(a);\n        b = Math.abs(b);\n        while (b !== 0) {\n            const temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n    // Fonction pour calculer le PGCD d’un tableau de nombres\n    gcdArray(arr) {\n        return arr.reduce((acc, val) => this.gcd(acc, val), arr[0]);\n    }\n    getSerieConfiguration(serie) {\n        if (serie.type !== 'gauge') {\n            return {};\n        }\n        const config = super.getSerieConfiguration(serie);\n        const minValue = config.min;\n        const maxValue = config.max;\n        const dialPoints = this.dialPoints && 0 < this.dialPoints.length ? this.dialPoints : [{ value: minValue }, { value: maxValue }];\n        if (minValue !== dialPoints[0].value) {\n            dialPoints.unshift({ value: minValue });\n        }\n        if (maxValue !== dialPoints[dialPoints.length - 1].value) {\n            dialPoints.push({ value: maxValue });\n        }\n        const steps = dialPoints.reduce((foundPeriods, currentPart, index) => {\n            if (index > 0) {\n                foundPeriods.push(currentPart.value - dialPoints[index - 1].value);\n            }\n            return foundPeriods;\n        }, []);\n        const commonStep = this.gcdArray(steps);\n        const splitNumber = (maxValue - minValue) / commonStep;\n        return Object.assign(Object.assign({}, config), { radius: '125%', splitNumber: splitNumber, detail: {\n                offsetCenter: [0, 30],\n                color: 'var(--bs-body-color, #000)',\n                fontSize: 40,\n                fontFamily: 'var(--bs-font-sans-serif, \"Helvetica Neue\")',\n                fontWeight: 'bold',\n            }, progress: {\n                show: false,\n            }, pointer: {\n                show: true,\n                width: 50,\n                icon: 'var(--ods-dial-gauge-pointer, image://data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%22147%2065.2635%2023%20104.4226%22%20width%3D%2223px%22%20height%3D%22107.735px%22%3E%0A%20%20%3Cpath%20d%3D%22M%20123.034%2079.908%20L%20179.603%20150.618%20L%20193.745%20136.476%20L%20123.034%2079.908%20Z%22%20fill%3D%22%23000%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20158.389px%20115.263px%3B%22%20transform%3D%22matrix(0.70710701%2C%200.70710701%2C%20-0.70710701%2C%200.70710701%2C%200.00000871%2C%20-0.0000095)%22%2F%3E%0A%20%20%3Ccircle%20cx%3D%22131.469%22%20cy%3D%2290.553%22%20r%3D%2210%22%20fill%3D%22%23000%22%20style%3D%22stroke-width%3A%201%3B%20transform-origin%3A%20131.469px%2090.553px%3B%22%20transform%3D%22matrix(-0.70710701%2C%20-0.70710701%2C%200.70710701%2C%20-0.70710701%2C%2026.91516753%2C%2064.99089065)%22%2F%3E%0A%3C%2Fsvg%3E)',\n                itemStyle: {\n                    color: 'var(--bs-body-color, #000)',\n                },\n                offsetCenter: [0, 0],\n            }, axisLabel: {\n                show: true,\n                distance: -40,\n                color: 'var(--bs-body-color, #000)',\n                fontSize: 14,\n                fontFamily: 'var(--bs-font-sans-serif, \"Helvetica Neue\")',\n                fontWeight: 400,\n                formatter: function (value) {\n                    const labelValue = dialPoints.find((part) => value === part.value);\n                    return labelValue && labelValue.label ? labelValue.label : '';\n                },\n            }, axisLine: {\n                roundCap: false,\n                lineStyle: {\n                    width: 32,\n                    /* build the color sets of the gauge, like :\n                        [\n                          [0.498, 'var(--ouds-charts-color-functional-positive)'],\n                          [0.502, 'transparent'],\n                          [0.748, 'var(--ouds-charts-color-functional-warning)'],\n                          [0.752, 'transparent'],\n                          [1, 'var(--ouds-charts-color-functional-negative)'],\n                        ]\n                    */\n                    color: dialPoints.reduce((colors, part, index) => {\n                        if (index > 0 && part.beforeColor) {\n                            const valuePct = part.value / (maxValue - minValue);\n                            if (dialPoints.length - 1 === index) {\n                                colors.push([valuePct, part.beforeColor]);\n                            }\n                            else {\n                                colors.push([valuePct - 0.002, part.beforeColor]);\n                                colors.push([valuePct + 0.002, 'transparent']);\n                            }\n                        }\n                        else if (dialPoints.length - 1 === index) {\n                            colors.push([1, 'var(--bs-light)']);\n                        }\n                        return colors;\n                    }, []),\n                },\n            } });\n    }\n}\n/**\n * Configuration of a chart of type {@link ODSChartsTypes.CIRCULAR_GAUGE}\n */\nclass ODSChartsCircularGauge extends ODSChartsCircularGaugeType {\n    constructor(minValue, maxValue) {\n        super(ODSChartsTypes.CIRCULAR_GAUGE, minValue, maxValue);\n    }\n}\n","//\n// Software Name: Orange Design System Charts\n// SPDX-FileCopyrightText: Copyright (c) 2023 - 2025 Orange SA\n// SPDX-License-Identifier: MIT\n//\n// This software is distributed under the MIT license.\n//\n/**\n * @packageDocumentation\n *\n * This page is an index of the module's classes, interfaces and enumerations.\n *\n * Their use is introduced on the [home page](./#md:documentation).\n *\n */\nimport { ODSChartsTheme } from './theme/ods-chart-theme';\nexport * from './theme/ods-chart-theme';\nexport * from './theme/ODS.project';\nexport * from './theme/css-themes/css-themes';\nexport * from './theme/popover/ods-chart-popover-definitions';\nexport * from './theme/legends/ods-chart-legends-definitions';\nexport * from './theme/charts-type/charts-type';\nexport const getThemeManager = ODSChartsTheme.getThemeManager;\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","ODS_PROJECT","color","backgroundColor","textStyle","title","subtextStyle","line","itemStyle","borderWidth","lineStyle","width","symbolSize","symbol","smooth","radar","bar","barBorderWidth","barBorderColor","pie","borderColor","scatter","boxplot","parallel","sankey","funnel","gauge","candlestick","color0","borderColor0","graph","label","map","areaColor","emphasis","geo","categoryAxis","axisLine","show","axisTick","axisLabel","splitLine","splitArea","areaStyle","valueAxis","logAxis","timeAxis","toolbox","iconStyle","legend","tooltip","axisPointer","crossStyle","timeline","controlStyle","checkpointStyle","visualMap","markPoint","ODSChartsCSSThemesNames","ODSChartsItemCSSDefinition","getClasses","def","classes","join","getStyles","styles","keys","property","ODSChartsItemGroupCSSDefinition","ODSChartsCSSLegendsDefinition","ODSChartsCSSPopoverDefinition","ODSChartsCSSThemeDefinition","constructor","legends","undefined","popover","ODSChartsCSSThemes","BOOSTED4","odsChartsLegendHolder","odsChartsLegendContainer","odsChartsLegendContainerVertical","odsChartsLegendContainerHorizontal","odsChartsLegendItem","odsChartsLegendCustomContent","odsChartsLegendGlobalCustomContent","odsChartsLegendLink","opacity","odsChartsLegendLinkOpacity","odsChartsLegendColorHolder","odsChartsLegendColor","height","odsChartsLegendLabel","odsChartsPopoverLine","odsChartsPopoverColorHolder","odsChartsPopoverColor","odsChartsPopoverText","odsChartsPopoverLabel","odsChartsPopoverValue","BOOSTED5","NONE","odsChartsPopoverHolder","odsChartsPopover","odsChartsPopoverBodyContent","CUSTOM","isVarArray","Array","isArray","isVarObject","mergeObjects","obj1","obj2","length","slice","obj2Key","ODSChartsLegends","echart","legendHolders","addLegend","legendHoldersArray","legendHolderSelector","getLegendData","dataOptions","updateDataLegendOption","updateDataSeriesOption","serieNames","legendData","data","legendDataItem","name","monoSerieGraphe","series","includes","type","assign","v","dataset","source","reduce","accumulator","currentValue","currentIndex","push","error","Error","serie","_index","_serie","index","unusedSerieNames","filter","legendLabel","find","shift","displayedSeriesNames","displayedSeriesLabels","console","info","_legendLabel","_serieName","names","labels","colors","cssTheme","cssThemeName","mode","document","querySelector","style","createElement","id","textContent","head","appendChild","orient","legendHolder","orientation","allLegends","defaultLegendHolder","seriesRef","legendHolderKey","_a","_b","stack","generateHandler","innerHTML","generateLegend","formatter","postItemContent","afterLegendContent","getLegendName","formatted","unsafe","div","escapeHtml","_c","_d","_e","_f","_g","_h","_j","_k","indexInHolder","_l","_m","colorIndex","customContent","getCustomLegendItemContent","JSON","stringify","replace","legendName","legendIndex","window","ods_chart_legend_switchLegend","elt","visible","classList","contains","themeClasses","themeStyles","add","themeClass","remove","cssProperty","dispatchAction","ODSChartsResize","chartId","observer","addResizeManagement","divElement","getElementById","getDom","parentElement","removeListener","ResizeObserver","resizeChart","bind","observe","sizeListeners","addEventListener","unobserve","removeEventListener","chartOptions","getOption","opts","animation","duration","animationDuration","easing","animationEasing","resize","buildHash","text","result","charCodeAt","getStringValue","cloneDeepObject","DEFAULT_ARROW_SIZE","ODSChartsPopoverManager","dispose","ODSChartsPopoverItem","seriesName","markerColor","ODSChartsPopoverDefinition","ODSChartsPopoverDefinitionWithRenderer","testIfMouseIsOverTooltip","previousPopover","mousePosition","top","event","clientY","left","clientX","tooltipRect","tip","getBoundingClientRect","tooltipMarging","ODSChartsPopoverAxisPointer","ODSChartsPopoverTooltipTrigger","ODSChartsPopoverConfig","ODSChartsPopoverManagers","super","arguments","testAvailability","availability","boosted","warn","getOrCreatePopupInstance","_getOrCreatePopupInstance","tooltipDelay","selector","htmlContent","enterable","Popover","getInstance","allowList","Tooltip","Default","span","container","ODSChartsMode","DARK","LIGHT","setAttribute","append","getOrCreateInstance","html","trigger","placement","content","customClass","whiteList","chartPopover","config","update","setTimeout","pointerEvents","MainAxisType","isMainAxis","axis","values","DEFAULT_TEMPLATE_CSS","ODSChartsPopover","popoverDefinition","popoverConfig","tooltipStyle","DEFAULT","addPopoverManagement","enabled","none","shared","getTooltipTrigger","themeOptions","tooltipTrigger","getTooltipElements","params","categoryLabel","getPopupTitle","axisValue","axisValueLabel","tooltipElements","param","_label","itemValue","axisType","endsWith","seriesIndex","element","getPopupContentValue","currentMode","popoverOptions","appendTo","handle","icon","triggerOn","alwaysShowContent","elements","displayPopup","className","snap","triggerTooltip","position","_params","_dom","_rect","containerSize","tooltipPosition","contentSize","arrowSize","confine","displayTooltipOnTop","tooltipLeftPosition","viewSize","Math","min","max","DOMParser","parseFromString","getPopupTemplate","body","firstChild","showDelay","hideDelay","renderMode","IsOdsChartsFormatter","tooltipElement","getPopupContentLine","getPopupContent","odsChartsPopoverInner","odsChartsPopoverContent","odsChartsPopoverArrow","odsChartsPopoverHeader","odsChartsPopoverBody","item","ceil","random","tooltipAnchor","pageY","pageX","tooltipTimeOut","clearTimeout","tooltipTimeout","_event","getAttribute","once","ODSChartsThemeObserver","redraw","addThemeObserver","MutationObserver","closest","observeAttributeChange","attributes","childList","subtree","disconnect","mutations","_observer","mutation","attributeName","lookForPaths","condition","searchedTypes","currentPath","foundPaths","recursiveCloneDeep","pathsToCopy","onePathToCopy","startsWith","conditionalCloneDeepObject","ODS_CHARTS_CONTEXT","EXISTING_IN_BOOSTED5_VARIABLES","NONE_THEME_SPECIFIC_VARIABLES","ALL_THEMES_SPECIFIC_VARIABLES","ODS_CHARTS_CSS_VARIABLES","ODSChartsCssHelper","cssSelector","_computedStyle","_computedStyleInitialized","cssVarsMapping","computedStyle","contextElement","domElement","getComputedStyle","initComputedStyle","removeComputedStyle","getPropertyValue","replaceOneCssVar","css","returnedValue","matches","getCssVarMatch","foundVar","varPartsRex","varParts","match","varValue","varNameRex","varName","replaceRecursivelyCssVars","subTreeConfig","newConfig","changeThemeMode","replaceAllCssVars","themeConfiguration","initStyleNotYetDone","cloneAndReplaceAllCssVars","chartData","DEFAULT_COLORS_YELLOW","DEFAULT_COLORS_PURPLE","DEFAULT_COLORS_PINK","DEFAULT_COLORS_GREEN","DEFAULT_COLORS_BLUE","DEFAULT_COLORS_LIGHTER_TINTS","DEFAULT_COLORS_DARKER_TINTS","DEFAULT_COLORS_SUPPORTING_COLORS","DEFAULT_COLORS_FUNCTIONAL","DEFAULT_COLORS_CATEGORICAL","DEFAULT_COLORS","DEFAULT_OUDS_COLORS_BLUE","DEFAULT_OUDS_COLORS_CATEGORICAL","DEFAULT_OUDS_COLORS_FUNCTIONAL","DEFAULT_OUDS_COLORS_GREEN","DEFAULT_OUDS_COLORS_HIGHLIGHT","DEFAULT_OUDS_COLORS_PINK","DEFAULT_OUDS_COLORS_PURPLE","DEFAULT_OUDS_COLORS_SINGLE","DEFAULT_OUDS_COLORS_YELLOW","ODSChartsColorsSet","ODSChartsLineStyle","THEME","common","linesAxis","default","categorical","functional","supportingColors","darkerTints","lighterTints","blue","green","pink","purple","yellow","oudsBlue","oudsGreen","oudsPink","oudsPurple","oudsYellow","oudsCategorical","oudsFunctional","oudsHighlight","oudsSingle","visualMapColors","visualMapColor","linesStyle","broken","withPoints","ODSChartsTheme","initialTheme","options","chartLegendManager","chartResizeManager","chartPopoverManager","chartThemeObserver","oneTheme","cssHelper","theme","calculateTheme","getDarkOrLightMode","divTheme","foundMode","getThemeManager","chartConfiguration","ODSChartsConfiguration","getDefaultChartConfiguration","themeName","colorPalette","SMOOTH","setDataOptions","getDisplayedColors","themeColors","serieIndex","previousColorIndex","indexOf","splice","calculateNewThemeAndAddItInThemeOptions","newTheme","grid","getDefaultConfiguration","getSerieConfiguration","getThemeOptions","hasInitializedCompitedStyle","updatedDataOptionsForTheme","xAxis","yAxis","fontStyle","fontWeight","fontSize","fontFamily","right","bottom","padding","itemWidth","itemHeight","itemGap","usedTheme","displayedColors","externalizeLegends","externalizePopover","manageChartResize","manageThemeObserver","setOption","getChartOptions","ODSChartsLegendHolderDefinition","ODSChartsTypes","ODSChartsLineConfiguration","ODSChartsGaugeConfiguration","ODSChartsDialGaugeConfiguration","getLineChartConfiguration","ODSChartsLine","getBarChartConfiguration","ODSChartsBar","getLineAndBarChartConfiguration","ODSChartsLineAndBar","getPieChartConfiguration","ODSChartsPie","getDonutChartConfiguration","ODSChartsDonut","getHorizontalGaugeChartConfiguration","ODSChartsHorizontalGauge","minValue","maxValue","getSemiCircularGaugeChartConfiguration","ODSChartsSemiCircularGauge","getCircularGaugeChartConfiguration","ODSChartsCircularGauge","getDialGaugeChartConfiguration","ODSChartsDialGauge","dialPoints","ODSChartsLineType","LINE","LINE_AND_BAR","ODSChartsBarType","BAR","labelLine","radius","PIE","DONUT","ODSChartsGaugeType","HORIZONTAL_GAUGE","margin","lineHeight","inside","verticalAlign","splitNumber","val","align","pointer","barWidth","showBackground","backgroundStyle","ODSChartsCircularGaugeType","SEMI_CIRCULAR_GAUGE","circular","CIRCULAR_GAUGE","endAngle","startAngle","center","detail","offsetCenter","progress","distance","roundCap","DIAL_GAUGE","gcd","a","b","abs","temp","gcdArray","arr","acc","unshift","steps","foundPeriods","currentPart","commonStep","labelValue","part","beforeColor","valuePct"],"sourceRoot":""}